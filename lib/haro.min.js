/**
 * Har≈ç is a modern immutable DataStore
 *
 * @author Jason Mulligan <jason.mulligan@avoidwork.com>
 * @copyright 2020
 * @license BSD-3-Clause
 * @version 7.0.2
 */
"use strict";!function(e){const t=[8,9,"a","b"];function clone(e){return JSON.parse(JSON.stringify(e,null,0))}function each(e,t){for(const r of e.entries())t(r[1],r[0]);return e}function keyIndex(e,t,r,i){let n;return n=e.includes(r)?e.split(r).sort((e,t)=>e.localeCompare(t)).map(e=>(void 0!==t[e]?t[e]:"").toString().replace(new RegExp(i,"g"),"").toLowerCase()).join(r):t[e],n}function delIndex(e,t,r,i,n,a){e.forEach(e=>{const h=t.get(e),o=keyIndex(e,n,r,a);if(h.has(o)){const e=h.get(o);e.delete(i),0===e.size&&h.delete(o)}})}function s(){return(65536*(Math.random()+1)|0).toString(16).substring(1)}function setIndex(e,t,r,i,n,a,h){each(a?[a]:e,e=>{const a=t.get(e);if(Array.isArray(n[e])&&!e.includes(r))each(n[e],e=>{a.has(e)||a.set(e,new Set),a.get(e).add(i)});else{const t=keyIndex(e,n,r,h);null!=t&&(a.has(t)||a.set(t,new Set),a.get(t).add(i))}})}function uuid(){return s()+s()+"-"+s()+"-4"+s().substr(0,3)+"-"+t[Math.floor(4*Math.random())]+s().substr(0,3)+"-"+s()+s()+s()}class Haro{constructor({delimiter:e="|",id:t=uuid(),index:r=[],key:i="",pattern:n="\\s*|\\t*",versioning:a=!1}={}){return this.data=new Map,this.delimiter=e,this.id=t,this.index=r,this.indexes=new Map,this.key=i,this.pattern=n,this.size=0,this.versions=new Map,this.versioning=a,Object.defineProperty(this,"registry",{enumerable:!0,get:()=>Array.from(this.data.keys())}),this.reindex()}async batch(e,t="set",r=!1){let i;try{const n="del"===t?e=>this.del(e,!0,r):e=>this.set(null,e,!0,!0,r);i=await Promise.all(this.beforeBatch(e,t).map(n)),i=this.onbatch(i,t)}catch(e){throw this.onerror("batch",e),e}return i}beforeBatch(e){return e}beforeClear(){}beforeDelete(){}beforeSet(){}clear(){return this.beforeClear(),this.size=0,this.data.clear(),this.indexes.clear(),this.versions.clear(),this.reindex().onclear(),this}del(e,t=!1,r=!1,i=!1){if(!1===this.has(e))throw new Error("Record not found");const n=this.get(e,!0);return this.exec(async()=>{this.beforeDelete(e,t,r,i),delIndex(this.index,this.indexes,this.delimiter,e,n,this.pattern),this.data.delete(e),--this.size},async()=>{this.ondelete(e,t,i,r),this.versioning&&this.versions.delete(e)},e=>{throw this.onerror("delete",e),e})}dump(e="records"){const t="records"===e?Array.from(this.entries()):Object.fromEntries(this.indexes);if("indexes"===e)for(const e of Object.keys(t)){t[e]=Object.fromEntries(t[e]);for(const r of Object.keys(t[e]))t[e][r]=Array.from(t[e][r])}return t}entries(){return this.data.entries()}async exec(e,t,r){let i;try{i=await t(await e())}catch(e){r(e)}return i}find(e,t=!1){const r=Object.keys(e).sort((e,t)=>e.localeCompare(t)).join(this.delimiter),i=keyIndex(r,e,this.delimiter,this.pattern),n=Array.from((this.indexes.get(r)||new Map).get(i)||new Set).map(e=>this.get(e,t));return t?n:this.list(...n)}filter(e,t=!1){const r=this.reduce((r,i,n,a)=>(e.call(a,i)&&r.push(this.get(n,t)),r),[]);return t?r:this.list(...r)}forEach(e,t){return this.data.forEach((t,r)=>e(clone(t),clone(r)),t||this.data),this}get(e,t=!1){const r=clone(this.data.get(e)||null);return r&&!t?this.list(e,r):r}has(e,t=this.data){return t.has(e)}keys(){return this.data.keys()}limit(e=0,t=0,r=!1){const i=this.registry.slice(e,e+t).map(e=>this.get(e,r));return r?i:this.list(...i)}list(...e){return Object.freeze(e.map(e=>Object.freeze(e)))}map(e,t=!1){const r=[];return this.forEach((t,i)=>r.push(e(t,i))),t?r:this.list(...r)}onbatch(e){return e}onclear(){}ondelete(){}onerror(){}onset(){}async override(e,t="records"){if("indexes"===t)this.indexes=new Map(Object.keys(e).map(t=>[t,new Map(Object.keys(e[t]).map(r=>[r,new Set(e[t][r])]))]));else{if("records"!==t)throw new Error("Invalid type");this.indexes.clear(),this.data=new Map(e),this.size=this.data.size}return!0}reduce(e,t,r=!1){let i=t||this.data.keys().next().value;return this.forEach((t,n)=>{i=e(i,t,n,this,r)},this),i}reindex(e){const t=e?[e]:this.index;return e&&!1===this.index.includes(e)&&this.index.push(e),each(t,e=>this.indexes.set(e,new Map)),this.forEach((e,r)=>each(t,t=>setIndex(this.index,this.indexes,this.delimiter,r,e,t,this.pattern))),this}search(e,t,r=!1){const i=new Map,n="function"==typeof e,a=e&&"function"==typeof e.test;return e&&each(t?Array.isArray(t)?t:[t]:this.index,t=>{let h=this.indexes.get(t);h&&h.forEach((h,o)=>{switch(!0){case n&&e(o,t):case a&&e.test(Array.isArray(o)?o.join(", "):o):case o===e:h.forEach(e=>{!i.has(e)&&this.has(e)&&i.set(e,this.get(e,r))})}})}),r?Array.from(i.values()):this.list(...Array.from(i.values()))}async set(e,t,r=!1,i=!1,n=!1,a=!1){let h,o=clone(t);return this.exec(async()=>(null==e&&(e=this.key&&void 0!==o[this.key]?o[this.key]:uuid()),this.beforeSet(e,t,r,i,n,a),this.data.has(e)?(h=this.get(e,!0),delIndex(this.index,this.indexes,this.delimiter,e,h,this.pattern),this.versioning&&this.versions.get(e).add(Object.freeze(clone(h))),!1===i&&(o=function merge(e,t){return e instanceof Object&&t instanceof Object?each(Object.keys(t),r=>{e[r]instanceof Object&&t[r]instanceof Object?e[r]=merge(e[r],t[r]):Array.isArray(e[r])&&Array.isArray(t[r])?e[r]=e[r].concat(t[r]):e[r]=t[r]}):e=Array.isArray(e)&&Array.isArray(t)?e.concat(t):t,e}(clone(h),o))):(++this.size,this.versioning&&this.versions.set(e,new Set)),this.data.set(e,o),setIndex(this.index,this.indexes,this.delimiter,e,o,null,this.pattern),this.get(e)),async e=>(this.onset(e,r,a,n),e),e=>{throw this.onerror("set",e),e})}sort(e,t=!0){return t?Object.freeze(this.limit(0,this.size,!0).sort(e).map(e=>Object.freeze(e))):this.limit(0,this.size,!0).sort(e)}sortBy(e,t=!1){const r=[],i=[];let n;return this.indexes.has(e)||this.reindex(e),n=this.indexes.get(e),n.forEach((e,t)=>i.push(t)),each(i.sort(),e=>n.get(e).forEach(e=>r.push(this.get(e,t)))),t?r:this.list(...r)}toArray(e=!0){const t=Array.from(this.data.values()).map(e=>clone(e));return e&&(each(t,e=>Object.freeze(e)),Object.freeze(t)),t}values(){return this.data.values()}where(e,t=!1,r="||"){const i=this.index.filter(t=>t in e);return i.length>0?this.filter(new Function("a",`return (${i.map(t=>{let i;if(Array.isArray(e[t]))i=`Array.isArray(a['${t}']) ? ${e[t].map(e=>`a['${t}'].includes(${"string"==typeof e?`'${e}'`:e})`).join(` ${r} `)} : a['${t}'] === '${e[t].join(",")}'`;else if(e[t]instanceof RegExp)i=`Array.isArray(a['${t}']) ? a['${t}'].filter(i => ${e[t]}.test(a['${t}'])).length > 0 : ${e[t]}.test(a['${t}'])`;else{const r="string"==typeof e[t]?`'${e[t]}'`:e[t];i=`Array.isArray(a['${t}']) ? a['${t}'].includes(${r}) : a['${t}'] === ${r}`}return i}).join(") && (")});`),t):[]}}function factory(e=null,t={}){const r=new Haro(t);return Array.isArray(e)&&r.batch(e,"set"),r}factory.version="7.0.2","undefined"!=typeof exports?module.exports=factory:"function"==typeof define&&void 0!==define.amd?define(()=>factory):e.haro=factory}("undefined"!=typeof window?window:global);