/**
 * Har≈ç is a modern immutable DataStore
 *
 * @author Jason Mulligan <jason.mulligan@avoidwork.com>
 * @copyright 2020
 * @license BSD-3-Clause
 * @version 6.0.1
 */"use strict";(function(a){function b(c,a){return a in c}function d(a,b){for(const c of a.entries())b(c[1],c[0]);return a}function e(a){return new v([a],{type:"application/javascript"})}function f(a){return JSON.parse(JSON.stringify(a,null,0))}function g(a,b,c,d){let e;return e=a.includes(c)?a.split(c).sort((c,a)=>c.localeCompare(a)).map(a=>(void 0===b[a]?"":b[a]).toString().replace(new RegExp(d,"g"),"").toLowerCase()).join(c):b[a],e}function h(a,b,c,d,e,f){a.forEach(a=>{const h=b.get(a),i=g(a,e,c,f);if(h.has(i)){const a=h.get(i);a.delete(d),0===a.size&&h.delete(i)}})}function i(a,c,e,f,h){const j={};return d(c,a=>{j[a]={}}),d(a,a=>{const d=a[e];void 0!==d&&c.forEach(c=>{const e=g(c,a,f,h);b(j[c],e)||(j[c][e]=[]),j[c][e].push(d)})}),j}function j(a,b){a instanceof Object?d(Object.keys(a),c=>b.call(a,a[c],c)):d(a,b)}function k(c,e){return c instanceof Object&&e instanceof Object?d(Object.keys(e),a=>{c[a]=c[a]instanceof Object&&e[a]instanceof Object?k(c[a],e[a]):Array.isArray(c[a])&&Array.isArray(e[a])?c[a].concat(e[a]):e[a]}):Array.isArray(c)&&Array.isArray(e)?c=c.concat(e):c=e,c}function l(c,e,a,b,g,h="inner"){function i(a,e,f,h=!1,i=!1){const n=Object.keys(e[0]),o=i?(a,c)=>a[b]===c[g]:(a,c)=>a[g]===c[b];d(a,a=>{const b={},i=e.filter(b=>o(b,a));let c=!0;return 1<i.length?(m=!0,l+=a[g],c=!1):1===i.length?d([a,i[0]],(a,c)=>j(a,(a,d)=>{b[f[c]+"_"+d]=a})):h&&(j(a,(a,c)=>{b[f[0]+"_"+c]=a}),d(n,a=>{b[f[1]+"_"+a]=null})),c&&0<Object.keys(b).length&&k.push(b),c},!0)}const k=[];let l="More than one record found on ",m=!1;return"inner"===h&&i(e,a,c),"left"===h&&i(e,a,c,!0),"right"===h&&i(a,e,f(c).reverse(),!0,!0),m?l:k}function m(){return(0|65536*(Math.random()+1)).toString(16).substring(1)}function c(a,b,c,e,f,h,j){d(h?[h]:a,a=>{const h=b.get(a);if(Array.isArray(f[a])&&!a.includes(c))d(f[a],a=>{h.has(a)||h.set(a,new u),h.get(a).add(e)});else{const b=g(a,f,c,j);void 0!==b&&null!==b&&(!h.has(b)&&h.set(b,new u),h.get(b).add(e))}})}function n(a,b=!0){const c={};return a.forEach((a,d)=>{const e=a;b&&Object.freeze(e),c[f(d)]=e}),b&&Object.freeze(c),c}function o(){return m()+m()+"-"+m()+"-4"+m().substr(0,3)+"-"+x[Math.floor(4*Math.random())]+m().substr(0,3)+"-"+m()+m()+m()}function p(b=null,c={}){const d=new B(c);return r&&(d.worker=!1===q?a.URL.createObjectURL(e(A)):new Function(A)),Array.isArray(b)&&d.batch(b,"set"),d}const q="undefined"!=typeof process&&"function"==typeof process.nextTick,s=a.Promise,t=a.Map,u=a.Set,v=a.Blob,w=a.Worker||(q?require("tiny-worker"):void 0),x=[8,9,"a","b"],r="undefined"!=typeof w,y="Web Worker not supported",z={},A=[f.toString(),i.toString(),d.toString(),b.toString(),j.toString(),l.toString(),g.toString(),c.toString(),(!1===q?"":"self.")+"onmessage = "+function(a){const b=JSON.parse(a.data),c=b.cmd;let d;"index"===c&&(d=i(b.records,b.index,b.key,b.delimiter,b.pattern)),"join"===c&&(d=l(b.ids,b.records[0],b.records[1],b.key,b.on,b.type)),postMessage(JSON.stringify(d))}.toString()+";"].join("\n");class B{constructor({adapters:a={},debounce:b=0,delimiter:c="|",id:d=o(),index:e=[],key:f="",logging:g=!0,pattern:h="\\s*|\\t*",versioning:i=!1}={}){return this.adapters=a,this.data=new t,this.debounce=b,this.debounced=new t,this.delimiter=c,this.id=d,this.index=e,this.indexes=new t,this.key=f,this.logging=g,this.pattern=h,this.size=0,this.worker=null,this.versions=new t,this.versioning=i,Object.defineProperty(this,"registry",{enumerable:!0,get:()=>Array.from(this.data.keys())}),this.reindex()}async batch(a,b="set",c=!1){let d;this.beforeBatch(a,b);try{const e="del"===b?a=>this.del(a,!0,c):a=>this.set(null,a,!0,!0,c);d=await s.all(a.map(e)),this.onbatch(b,d),this.log(`Batch successful on ${this.id}`)}catch(a){throw this.onerror("batch",a),this.log(`Batch failure on ${this.id}`),a}return d}beforeBatch(){}beforeClear(){}beforeDelete(){}beforeSet(){}clear(){return this.beforeClear(),this.size=0,this.data.clear(),this.indexes.clear(),this.versions.clear(),this.reindex().onclear(),this.log(`Cleared ${this.id}`),this}async cmd(a,...b){if(void 0===this.adapters[a]||void 0===z[a])throw new Error(`${a} not configured for persistent storage`);return await z[a].apply(this,[this,...b])}del(a,b=!1,c=!1,d=!1){if(!1===this.has(a))throw new Error("Record not found");const e=this.get(a,!0);return this.exec(async()=>{this.beforeDelete(a,b,c,d),h(this.index,this.indexes,this.delimiter,a,e,this.pattern),this.data.delete(a),--this.size},async()=>{this.ondelete(a,b,d,c),this.versioning&&this.versions.delete(a),c||this.storage("remove",a).then(b=>{b&&this.log(`Deleted ${a} from persistent storage`)},b=>this.log(`Error deleting ${a} from persistent storage: ${b.message||b.stack||b}`,"error"))},a=>{throw this.onerror("delete",a),a})}dump(a="records"){const b="records"===a?Array.from(this.entries()):Object.fromEntries(this.indexes);if("indexes"===a)for(const a of Object.keys(b)){b[a]=Object.fromEntries(b[a]);for(const c of Object.keys(b[a]))b[a][c]=Array.from(b[a][c])}return b}entries(){return this.data.entries()}async exec(a,b,c){let d;try{const c=await a();d=await b(c)}catch(a){c(a)}return d}find(a,b=!1){const c=Object.keys(a).sort((c,a)=>c.localeCompare(a)).join(this.delimiter),d=g(c,a,this.delimiter,this.pattern),e=[];return this.indexes.has(c)&&(this.indexes.get(c).get(d)||new u).forEach(a=>e.push(this.get(a,b))),b?e:this.list(...e)}filter(b,c=!1){const d=this.reduce((d,a,e,f)=>(b.call(f,a)&&d.push(this.get(e,c)),d),[]);return c?d:this.list(...d)}forEach(a,b){return this.data.forEach((b,c)=>a(f(b),f(c)),b||this.data),this}get(a,b=!1){const c=f(this.data.get(a)||null);return c&&!b?this.list(a,c):c}has(a,b){return(b||this.data).has(a)}async join(a,b,c="inner",d=[]){let e;if(!(0<a.size))e=[];else if(e=0<d.length?await this.offload([[this.id,a.id],this.find(d[0],!0),d[1]?a.find(d[1],!0):a.toArray(null,!0),this.key,b||this.key,c],"join"):await this.offload([[this.id,a.id],this.toArray(null,!0),a.toArray(null,!0),this.key,b||this.key,c],"join"),"string"==typeof arg)throw new Error(e);return e}keys(){return this.data.keys()}limit(a=0,b=0,c=!1){const d=this.registry.slice(a,a+b).map(a=>this.get(a,c));return c?d:this.list(...d)}list(...a){return Object.freeze(a.map(a=>Object.freeze(a)))}async load(a="mongo",b=void 0){const c=void 0===b,d=c?this.id:b;let e;c&&this.clear();try{const f=await this.cmd(a,"get",b);e=c?this.batch(f,"set",!0):this.set(b,f,!0,!0,!0),this.log(`Loaded ${d} from ${a} persistent storage`)}catch(b){throw this.log(`Error loading ${d} from ${a} persistent storage: ${b.message||b.stack||b}`,"error"),b}return e}log(a="",b="log"){this.logging&&console[b](`haro: ${a}`)}map(a,b=!1){const c=[];return this.forEach((b,d)=>c.push(a(b,d))),b?c:this.list(...c)}async offload(a,b="index",c=this.index){return new s((d,e)=>{if(this.worker){const f=this.useWorker(d,e);let g;"index"===b?g={cmd:b,index:c,records:a,key:this.key,delimiter:this.delimiter,pattern:this.pattern}:"join"===b&&(g={cmd:b,ids:a[0],records:[a[1],a[2]],key:a[3],on:a[4],type:a[5]}),f.postMessage(JSON.stringify(g,null,0))}else e(new Error(y))})}onbatch(){}onclear(){}ondelete(){}onerror(){}onrequest(a){return a}onset(){}onsync(){}async override(a,b="records"){if("indexes"===b)this.indexes=new t(Object.keys(a).map(b=>[b,new t(Object.keys(a[b]).map(c=>[c,new u(a[b][c])]))]));else if("records"===b)this.indexes.clear(),this.data=new t(a),this.size=this.data.size;else throw new Error("Invalid type");return!0}reduce(b,c,d=!1){let e=c||this.data.keys().next().value;return this.forEach((a,c)=>{e=b(e,a,c,this,d)},this),e}register(a,b){return z[a]=b,this}reindex(a){const b=a?[a]:this.index;return a&&!1===this.index.includes(a)&&this.index.push(a),d(b,a=>this.indexes.set(a,new t)),this.forEach((a,e)=>d(b,b=>c(this.index,this.indexes,this.delimiter,e,a,b,this.pattern))),this}async save(a="mongo"){let b;try{b=await this.cmd(a,"set"),this.log(`Saved ${this.id} to ${a} persistent storage`)}catch(b){throw this.log(`Error saving ${this.id} to ${a} persistent storage: ${b.message||b.stack||b}`,"error"),b}return b}search(a,b,c=!1){const e=new t,f=a&&"function"==typeof a.test;return a&&d(b?Array.isArray(b)?b:[b]:this.index,b=>{let d=this.indexes.get(b);d&&d.forEach((d,g)=>{switch(!0){case"function"==typeof a&&a(g,b):case f&&a.test(Array.isArray(g)?g.join(", "):g):case g===a:d.forEach(a=>{!e.has(a)&&this.has(a)&&e.set(a,this.get(a,c))});break;default:}})}),c?Array.from(e.values()):this.list(...Array.from(e.values()))}async set(a,b,d=!1,e=!1,g=!1,i=!1){let j,l=f(b);return this.exec(async()=>((void 0===a||null===a)&&(a=this.key&&void 0!==l[this.key]?l[this.key]:o()),this.beforeSet(a,b,d,e,g,i),this.data.has(a)?(j=this.get(a,!0),h(this.index,this.indexes,this.delimiter,a,j,this.pattern),this.versioning&&this.versions.get(a).add(Object.freeze(f(j))),!1===e&&(l=k(f(j),l))):(++this.size,this.versioning&&this.versions.set(a,new u)),this.data.set(a,l),c(this.index,this.indexes,this.delimiter,a,l,null,this.pattern),this.get(a)),async b=>(this.onset(b,d,i,g),g||this.storage("set",a,l).then(b=>{b&&this.log(`Saved ${a} to persistent storage`)},b=>this.log(`Error saving ${a} to persistent storage: ${b.message||b.stack||b}`,"error")),b),a=>{throw this.onerror("set",a),a})}sort(a,b=!0){return b?Object.freeze(this.limit(0,this.size,!0).sort(a).map(a=>Object.freeze(a))):this.limit(0,this.size,!0).sort(a)}sortBy(a,b=!1){const c=[],e=[];let f;return this.indexes.has(a)||this.reindex(a),f=this.indexes.get(a),f.forEach((a,b)=>e.push(b)),d(e.sort(),a=>f.get(a).forEach(a=>c.push(this.get(a,b)))),b?c:this.list(...c)}async storage(...a){let b;try{const c=Object.keys(this.adapters).map(async b=>await this.cmd.apply(this,[b,...a]));0<c.length?(await s.all(c),b=!0):b=!1}catch(a){this.log(a.stack||a.message||a,"error"),b=!1}return b}toArray(a,b=!0){let c;return a instanceof Array?c=a.map(a=>b?a[1]:f(a[1])):(c=Array.from(this.data.values()).map(a=>f(a)),b&&d(c,a=>Object.freeze(a))),b?Object.freeze(c):c}toObject(a,c=!0){const d=a?a.reduce((d,a)=>{const b=f(a[1]);return c&&Object.freeze(b),d[a[0]]=b,d},{}):n(this,c);return c?Object.freeze(d):d}async unload(a="mongo",b=void 0){const c=void 0===b?this.id:b;let d;try{d=await this.cmd(a,"remove",b),this.log(`Unloaded ${c} from ${a} persistent storage`)}catch(b){throw this.log(`Error unloading ${c} from ${a} persistent storage: ${b.message||b.stack||b}`,"error"),b}return d}unregister(a){delete z[a]}values(){return this.data.values()}useWorker(a,b){let c;return this.worker?(c=new w(this.worker),c.onerror=a=>{b(a),c.terminate()},c.onmessage=b=>{a(JSON.parse(b.data)),c.terminate()}):b(new Error(y)),c}where(a,b=!1,c="||"){const d=this.index.filter(b=>b in a);return 0<d.length?this.filter(new Function("a",`return (${d.map(b=>{let d;if(Array.isArray(a[b]))d=`Array.isArray(a['${b}']) ? ${a[b].map(a=>`a['${b}'].includes(${"string"==typeof a?`'${a}'`:a})`).join(` ${c} `)} : a['${b}'] === '${a[b].join(",")}'`;else if(a[b]instanceof RegExp)d=`Array.isArray(a['${b}']) ? a['${b}'].filter(i => ${a[b]}.test(a['${b}'])).length > 0 : ${a[b]}.test(a['${b}'])`;else{const c="string"==typeof a[b]?`'${a[b]}'`:a[b];d=`Array.isArray(a['${b}']) ? a['${b}'].includes(${c}) : a['${b}'] === ${c}`}return d}).join(") && (")});`),b):[]}}p.version="6.0.1","undefined"==typeof exports?"function"==typeof define&&void 0!==define.amd?define(()=>p):a.haro=p:module.exports=p})("undefined"==typeof window?global:window);
//# sourceMappingURL=haro.min.js.map