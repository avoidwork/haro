{"version":3,"sources":["haro.js"],"names":["global","has","a","b","each","arr","fn","item","entries","cast","input","result","Map","forEach","value","key","Set","Array","from","isArray","Object","keys","map","i","blob","arg","Blob","type","clone","JSON","parse","stringify","keyIndex","data","delimiter","pattern","includes","split","sort","localeCompare","toString","replace","RegExp","toLowerCase","join","delIndex","index","indexes","idx","get","o","delete","size","createIndexes","records","lkey","lindex","push","iterate","obj","call","merge","concat","joinData","id","on","left","right","ids","include","reverse","x","comp","c","filter","valid","length","error","errorMsg","v","k","s","Math","random","substring","setIndex","indice","d","set","add","lidx","toObjekt","frozen","freeze","uuid","substr","r","floor","factory","config","Haro","webWorker","worker","URL","createObjectURL","functions","Function","batch","node","process","nextTick","Promise","Worker","require","webWorkerError","adapter","ev","cmd","postMessage","constructor","adapters","debounce","logging","versioning","debounced","versions","defineProperty","enumerable","reindex","args","lazyLoad","beforeBatch","del","all","onbatch","log","e","onerror","beforeClear","beforeDelete","beforeSet","clear","onclear","Error","apply","retry","og","exec","ondelete","storage","then","success","message","stack","err","dump","toArray","transform","first","second","handler","find","where","raw","list","reduce","ctx","other","offload","limit","offset","max","registry","slice","load","console","resolve","reject","useWorker","payload","onrequest","onset","onsync","override","datum","accumulator","next","register","indices","save","search","rgex","test","lset","values","sortBy","promises","toObject","unload","unregister","terminate","onmessage","predicate","op","version","exports","define","amd","haro","module","window"],"mappings":"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","file":"unknown","sourcesContent":["/**\r\n * Harō is a modern immutable DataStore\r\n *\r\n * @author Jason Mulligan <jason.mulligan@avoidwork.com>\r\n * @copyright 2019\r\n * @license BSD-3-Clause\r\n * @version 5.0.0\r\n */\r\n\"use strict\";\r\n\r\n(function (global) {\r\n\tconst node = typeof process !== \"undefined\" && typeof process.nextTick === \"function\",\r\n\t\tPromise = global.Promise,\r\n\t\tMap = global.Map,\r\n\t\tSet = global.Set,\r\n\t\tBlob = global.Blob,\r\n\t\tWorker = global.Worker || (node ? require(\"tiny-worker\") : void 0),\r\n\t\tr = [8, 9, \"a\", \"b\"],\r\n\t\twebWorker = typeof Worker !== \"undefined\",\r\n\t\twebWorkerError = \"Web Worker not supported\",\r\n\t\tadapter = {};\r\n\r\n\tfunction has (a, b) {\r\n\t\treturn b in a;\r\n\t}\r\n\r\n\tfunction each (arr, fn) {\r\n\t\tfor (const item of arr.entries()) {\r\n\t\t\tfn(item[1], item[0]);\r\n\t\t}\r\n\r\n\t\treturn arr;\r\n\t}\r\n\r\n\tfunction cast (input) {\r\n\t\tlet result;\r\n\r\n\t\tswitch (true) {\r\n\t\t\tcase input instanceof Map:\r\n\t\t\t\tresult = {};\r\n\t\t\t\tinput.forEach((value, key) => {\r\n\t\t\t\t\tresult[key] = cast(value);\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase input instanceof Set:\r\n\t\t\t\tresult = Array.from(input);\r\n\t\t\t\tbreak;\r\n\t\t\tcase Array.isArray(input):\r\n\t\t\t\tresult = new Set(input);\r\n\t\t\t\tbreak;\r\n\t\t\tcase input instanceof Object:\r\n\t\t\t\tresult = new Map(Object.keys(input).map(i => [i, cast(input[i])]));\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tresult = input;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tfunction blob (arg) {\r\n\t\treturn new Blob([arg], {type: \"application/javascript\"});\r\n\t}\r\n\r\n\tfunction clone (arg) {\r\n\t\treturn JSON.parse(JSON.stringify(arg, null, 0));\r\n\t}\r\n\r\n\tfunction keyIndex (key, data, delimiter, pattern) {\r\n\t\tlet result;\r\n\r\n\t\tif (key.includes(delimiter)) {\r\n\t\t\tresult = key.split(delimiter).sort((a, b) => a.localeCompare(b)).map(i => (data[i] !== void 0 ? data[i] : \"\").toString().replace(new RegExp(pattern, \"g\"), \"\").toLowerCase()).join(delimiter);\r\n\t\t} else {\r\n\t\t\tresult = data[key];\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tfunction delIndex (index, indexes, delimiter, key, data, pattern) {\r\n\t\tindex.forEach(i => {\r\n\t\t\tconst idx = indexes.get(i),\r\n\t\t\t\tvalue = keyIndex(i, data, delimiter, pattern);\r\n\r\n\t\t\tif (idx.has(value)) {\r\n\t\t\t\tconst o = idx.get(value);\r\n\r\n\t\t\t\to.delete(key);\r\n\r\n\t\t\t\tif (o.size === 0) {\r\n\t\t\t\t\tidx.delete(value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tfunction createIndexes (records, indexes, key, delimiter, pattern) {\r\n\t\tconst result = {};\r\n\r\n\t\teach(indexes, i => {\r\n\t\t\tresult[i] = {};\r\n\t\t});\r\n\r\n\t\teach(records, i => {\r\n\t\t\tconst lkey = i[key];\r\n\r\n\t\t\tif (lkey !== void 0) {\r\n\t\t\t\tindexes.forEach(index => {\r\n\t\t\t\t\tconst lindex = keyIndex(index, i, delimiter, pattern);\r\n\r\n\t\t\t\t\tif (!has(result[index], lindex)) {\r\n\t\t\t\t\t\tresult[index][lindex] = [];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tresult[index][lindex].push(lkey);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tfunction iterate (obj, fn) {\r\n\t\tif (obj instanceof Object) {\r\n\t\t\teach(Object.keys(obj), i => fn.call(obj, obj[i], i));\r\n\t\t} else {\r\n\t\t\teach(obj, fn);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction merge (a, b) {\r\n\t\tif (a instanceof Object && b instanceof Object) {\r\n\t\t\teach(Object.keys(b), i => {\r\n\t\t\t\tif (a[i] instanceof Object && b[i] instanceof Object) {\r\n\t\t\t\t\ta[i] = merge(a[i], b[i]);\r\n\t\t\t\t} else if (Array.isArray(a[i]) && Array.isArray(b[i])) {\r\n\t\t\t\t\ta[i] = a[i].concat(b[i]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\ta[i] = b[i];\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else if (Array.isArray(a) && Array.isArray(b)) {\r\n\t\t\ta = a.concat(b);\r\n\t\t} else {\r\n\t\t\ta = b;\r\n\t\t}\r\n\r\n\t\treturn a;\r\n\t}\r\n\r\n\tfunction joinData (id, a, b, key, on, type = \"inner\") {\r\n\t\tconst result = [];\r\n\t\tlet errorMsg = \"More than one record found on \";\r\n\r\n\t\tlet error = false;\r\n\r\n\t\tfunction join (left, right, ids, include = false, reverse = false) {\r\n\t\t\tconst keys = Object.keys(right[0]),\r\n\t\t\t\tfn = !reverse ? (x, i) => x[on] === i[key] : (x, i) => x[key] === i[on];\r\n\r\n\t\t\teach(left, i => {\r\n\t\t\t\tconst comp = {},\r\n\t\t\t\t\tc = right.filter(x => fn(x, i));\r\n\r\n\t\t\t\tlet valid = true;\r\n\r\n\t\t\t\tif (c.length > 1) {\r\n\t\t\t\t\terror = true;\r\n\t\t\t\t\terrorMsg += i[on];\r\n\t\t\t\t\tvalid = false;\r\n\t\t\t\t} else if (c.length === 1) {\r\n\t\t\t\t\teach([i, c[0]], (x, idx) => iterate(x, (v, k) => {\r\n\t\t\t\t\t\tcomp[ids[idx] + \"_\" + k] = v;\r\n\t\t\t\t\t}));\r\n\t\t\t\t} else if (include) {\r\n\t\t\t\t\titerate(i, (v, k) => {\r\n\t\t\t\t\t\tcomp[ids[0] + \"_\" + k] = v;\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\teach(keys, k => {\r\n\t\t\t\t\t\tcomp[ids[1] + \"_\" + k] = null;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (valid && Object.keys(comp).length > 0) {\r\n\t\t\t\t\tresult.push(comp);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn valid;\r\n\t\t\t}, true);\r\n\t\t}\r\n\r\n\t\tif (type === \"inner\") {\r\n\t\t\tjoin(a, b, id);\r\n\t\t}\r\n\r\n\t\tif (type === \"left\") {\r\n\t\t\tjoin(a, b, id, true);\r\n\t\t}\r\n\r\n\t\tif (type === \"right\") {\r\n\t\t\tjoin(b, a, clone(id).reverse(), true, true);\r\n\t\t}\r\n\r\n\t\treturn !error ? result : errorMsg;\r\n\t}\r\n\r\n\tfunction onmessage (ev) {\r\n\t\tconst data = JSON.parse(ev.data),\r\n\t\t\tcmd = data.cmd;\r\n\r\n\t\tlet result;\r\n\r\n\t\tif (cmd === \"index\") {\r\n\t\t\tresult = createIndexes(data.records, data.index, data.key, data.delimiter, data.pattern);\r\n\t\t}\r\n\r\n\t\tif (cmd === \"join\") {\r\n\t\t\tresult = joinData(data.ids, data.records[0], data.records[1], data.key, data.on, data.type);\r\n\t\t}\r\n\r\n\t\tpostMessage(JSON.stringify(result));\r\n\t}\r\n\r\n\tfunction s () {\r\n\t\treturn ((Math.random() + 1) * 0x10000 | 0).toString(16).substring(1);\r\n\t}\r\n\r\n\tfunction setIndex (index, indexes, delimiter, key, data, indice, pattern) {\r\n\t\teach(!indice ? index : [indice], i => {\r\n\t\t\tconst lindex = indexes.get(i);\r\n\r\n\t\t\tif (Array.isArray(data[i]) && !i.includes(delimiter)) {\r\n\t\t\t\teach(data[i], d => {\r\n\t\t\t\t\tif (!lindex.has(d)) {\r\n\t\t\t\t\t\tlindex.set(d, new Set());\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlindex.get(d).add(key);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tconst lidx = keyIndex(i, data, delimiter, pattern);\r\n\r\n\t\t\t\tif (lidx !== void 0 && lidx !== null) {\r\n\t\t\t\t\tif (!lindex.has(lidx)) {\r\n\t\t\t\t\t\tlindex.set(lidx, new Set());\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlindex.get(lidx).add(key);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tfunction toObjekt (arg, frozen = true) {\r\n\t\tconst result = {};\r\n\r\n\t\targ.forEach((value, key) => {\r\n\t\t\tconst obj = value;\r\n\r\n\t\t\tif (frozen) {\r\n\t\t\t\tObject.freeze(obj);\r\n\t\t\t}\r\n\r\n\t\t\tresult[clone(key)] = obj;\r\n\t\t});\r\n\r\n\t\tif (frozen) {\r\n\t\t\tObject.freeze(result);\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tfunction uuid () {\r\n\t\treturn s() + s() + \"-\" + s() + \"-4\" + s().substr(0, 3) + \"-\" + r[Math.floor(Math.random() * 4)] + s().substr(0, 3) + \"-\" + s() + s() + s();\r\n\t}\r\n\r\n\tconst functions = [\r\n\t\tcast.toString(),\r\n\t\tclone.toString(),\r\n\t\tcreateIndexes.toString(),\r\n\t\teach.toString(),\r\n\t\thas.toString(),\r\n\t\titerate.toString(),\r\n\t\tjoinData.toString(),\r\n\t\tkeyIndex.toString(),\r\n\t\tsetIndex.toString(),\r\n\t\t(node === false ? \"\" : \"self.\") + \"onmessage = \" + onmessage.toString() + \";\"\r\n\t].join(\"\\n\");\r\n\r\n\tclass Haro {\r\n\t\tconstructor ({adapters = {}, debounce = 0, delimiter = \"|\", id = uuid(), index = [], key = \"\", logging = true, pattern = \"\\\\s*|\\\\t*\", versioning = false} = {}) {\r\n\t\t\tthis.adapters = adapters;\r\n\t\t\tthis.data = new Map();\r\n\t\t\tthis.debounce = debounce;\r\n\t\t\tthis.debounced = new Map();\r\n\t\t\tthis.delimiter = delimiter;\r\n\t\t\tthis.id = id;\r\n\t\t\tthis.index = index;\r\n\t\t\tthis.indexes = new Map();\r\n\t\t\tthis.key = key;\r\n\t\t\tthis.logging = logging;\r\n\t\t\tthis.pattern = pattern;\r\n\t\t\tthis.size = 0;\r\n\t\t\tthis.worker = null;\r\n\t\t\tthis.versions = new Map();\r\n\t\t\tthis.versioning = versioning;\r\n\r\n\t\t\tObject.defineProperty(this, \"registry\", {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tget: () => Array.from(this.data.keys())\r\n\t\t\t});\r\n\r\n\t\t\treturn this.reindex();\r\n\t\t}\r\n\r\n\t\tasync batch (args, type = \"set\", lazyLoad = false) {\r\n\t\t\tlet result;\r\n\r\n\t\t\tthis.beforeBatch(args, type);\r\n\r\n\t\t\ttry {\r\n\t\t\t\tconst fn = type === \"del\" ? i => this.del(i, true, lazyLoad) : i => this.set(null, i, true, true, lazyLoad);\r\n\r\n\t\t\t\tresult = await Promise.all(args.map(fn));\r\n\t\t\t\tthis.onbatch(type, result);\r\n\t\t\t\tthis.log(`Batch successful on ${this.id}`);\r\n\t\t\t} catch (e) {\r\n\t\t\t\tthis.onerror(\"batch\", e);\r\n\t\t\t\tthis.log(`Batch failure on ${this.id}`);\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\tbeforeBatch () {}\r\n\r\n\t\tbeforeClear () {}\r\n\r\n\t\tbeforeDelete () {}\r\n\r\n\t\tbeforeSet () {}\r\n\r\n\t\tclear () {\r\n\t\t\tthis.beforeClear();\r\n\t\t\tthis.size = 0;\r\n\t\t\tthis.data.clear();\r\n\t\t\tthis.indexes.clear();\r\n\t\t\tthis.versions.clear();\r\n\t\t\tthis.reindex().onclear();\r\n\t\t\tthis.log(`Cleared ${this.id}`);\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tasync cmd (type, ...args) {\r\n\t\t\tif (this.adapters[type] === void 0 || adapter[type] === void 0) {\r\n\t\t\t\tthrow new Error(`${type} not configured for persistent storage`);\r\n\t\t\t}\r\n\r\n\t\t\treturn await adapter[type].apply(this, [this, ...args]);\r\n\t\t}\r\n\r\n\t\tdel (key, batch = false, lazyLoad = false, retry = false) {\r\n\t\t\tif (this.has(key) === false) {\r\n\t\t\t\tthrow new Error(\"Record not found\");\r\n\t\t\t}\r\n\r\n\t\t\tconst og = this.get(key, true);\r\n\r\n\t\t\treturn this.exec(async () => {\r\n\t\t\t\tthis.beforeDelete(key, batch, lazyLoad, retry);\r\n\t\t\t\tdelIndex(this.index, this.indexes, this.delimiter, key, og, this.pattern);\r\n\t\t\t\tthis.data.delete(key);\r\n\t\t\t\t--this.size;\r\n\t\t\t}, async () => {\r\n\t\t\t\tthis.ondelete(key, batch, retry, lazyLoad);\r\n\r\n\t\t\t\tif (this.versioning) {\r\n\t\t\t\t\tthis.versions.delete(key);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!lazyLoad) {\r\n\t\t\t\t\tthis.storage(\"remove\", key).then(success => {\r\n\t\t\t\t\t\tif (success) {\r\n\t\t\t\t\t\t\tthis.log(`Deleted ${key} from persistent storage`);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, e => this.log(`Error deleting ${key} from persistent storage: ${e.message || e.stack || e}`, \"error\"));\r\n\t\t\t\t}\r\n\t\t\t}, err => {\r\n\t\t\t\tthis.onerror(\"delete\", err);\r\n\t\t\t\tthrow err;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tdump (type = \"records\") {\r\n\t\t\treturn type === \"records\" ? this.toArray(null, false) : this.transform(this.indexes);\r\n\t\t}\r\n\r\n\t\tentries () {\r\n\t\t\treturn this.data.entries();\r\n\t\t}\r\n\r\n\t\tasync exec (first, second, handler) {\r\n\t\t\tlet result;\r\n\r\n\t\t\ttry {\r\n\t\t\t\tconst arg = await first();\r\n\r\n\t\t\t\tresult = await second(arg);\r\n\t\t\t} catch (err) {\r\n\t\t\t\thandler(err);\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\tfind (where, raw = false) {\r\n\t\t\tconst key = Object.keys(where).sort((a, b) => a.localeCompare(b)).join(this.delimiter),\r\n\t\t\t\tvalue = keyIndex(key, where, this.delimiter, this.pattern),\r\n\t\t\t\tresult = [];\r\n\r\n\t\t\tif (this.indexes.has(key)) {\r\n\t\t\t\t(this.indexes.get(key).get(value) || new Set()).forEach(i => result.push(this.get(i, raw)));\r\n\t\t\t}\r\n\r\n\t\t\treturn raw ? result : this.list(...result);\r\n\t\t}\r\n\r\n\t\tfilter (fn, raw = false) {\r\n\t\t\tconst result = this.reduce((a, v, k, ctx) => {\r\n\t\t\t\tif (fn.call(ctx, v)) {\r\n\t\t\t\t\ta.push(this.get(k, raw));\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn a;\r\n\t\t\t}, []);\r\n\r\n\t\t\treturn raw ? result : this.list(...result);\r\n\t\t}\r\n\r\n\t\tforEach (fn, ctx) {\r\n\t\t\tthis.data.forEach((value, key) => fn(clone(value), clone(key)), ctx || this.data);\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tget (key, raw = false) {\r\n\t\t\tconst result = clone(this.data.get(key) || null);\r\n\r\n\t\t\treturn result && !raw ? this.list(key, result) : result;\r\n\t\t}\r\n\r\n\t\thas (key, map) {\r\n\t\t\treturn (map || this.data).has(key);\r\n\t\t}\r\n\r\n\t\tasync join (other, on, type = \"inner\", where = []) {\r\n\t\t\tlet result;\r\n\r\n\t\t\tif (other.size > 0) {\r\n\t\t\t\tif (where.length > 0) {\r\n\t\t\t\t\tresult = await this.offload([[this.id, other.id], this.find(where[0], true), !where[1] ? other.toArray(null, true) : other.find(where[1], true), this.key, on || this.key, type], \"join\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult = await this.offload([[this.id, other.id], this.toArray(null, true), other.toArray(null, true), this.key, on || this.key, type], \"join\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (typeof arg === \"string\") {\r\n\t\t\t\t\tthrow new Error(result);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tresult = [];\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\tkeys () {\r\n\t\t\treturn this.data.keys();\r\n\t\t}\r\n\r\n\t\tlimit (offset = 0, max = 0, raw = false) {\r\n\t\t\tconst result = this.registry.slice(offset, offset + max).map(i => this.get(i, raw));\r\n\r\n\t\t\treturn raw ? result : this.list(...result);\r\n\t\t}\r\n\r\n\t\tlist (...args) {\r\n\t\t\treturn Object.freeze(args.map(i => Object.freeze(i)));\r\n\t\t}\r\n\r\n\t\tasync load (type = \"mongo\", key = void 0) {\r\n\t\t\tconst batch = key === void 0,\r\n\t\t\t\tid = !batch ? key : this.id;\r\n\t\t\tlet result;\r\n\r\n\t\t\tif (batch) {\r\n\t\t\t\tthis.clear();\r\n\t\t\t}\r\n\r\n\t\t\ttry {\r\n\t\t\t\tconst data = await this.cmd(type, \"get\", key);\r\n\r\n\t\t\t\tresult = batch ? this.batch(data, \"set\", true) : this.set(key, data, true, true, true);\r\n\t\t\t\tthis.log(`Loaded ${id} from ${type} persistent storage`);\r\n\t\t\t} catch (e) {\r\n\t\t\t\tthis.log(`Error loading ${id} from ${type} persistent storage: ${e.message || e.stack || e}`, \"error\");\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\tlog (arg = \"\", type = \"log\") {\r\n\t\t\tif (this.logging) {\r\n\t\t\t\tconsole[type](`haro: ${arg}`);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tmap (fn, raw = false) {\r\n\t\t\tconst result = [];\r\n\r\n\t\t\tthis.forEach((value, key) => result.push(fn(value, key)));\r\n\r\n\t\t\treturn raw ? result : this.list(...result);\r\n\t\t}\r\n\r\n\t\tasync offload (data, cmd = \"index\", index = this.index) {\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tif (this.worker) {\r\n\t\t\t\t\tconst obj = this.useWorker(resolve, reject);\r\n\t\t\t\t\tlet payload;\r\n\r\n\t\t\t\t\tif (cmd === \"index\") {\r\n\t\t\t\t\t\tpayload = {\r\n\t\t\t\t\t\t\tcmd: cmd,\r\n\t\t\t\t\t\t\tindex: index,\r\n\t\t\t\t\t\t\trecords: data,\r\n\t\t\t\t\t\t\tkey: this.key,\r\n\t\t\t\t\t\t\tdelimiter: this.delimiter,\r\n\t\t\t\t\t\t\tpattern: this.pattern\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t} else if (cmd === \"join\") {\r\n\t\t\t\t\t\tpayload = {\r\n\t\t\t\t\t\t\tcmd: cmd,\r\n\t\t\t\t\t\t\tids: data[0],\r\n\t\t\t\t\t\t\trecords: [data[1], data[2]],\r\n\t\t\t\t\t\t\tkey: data[3],\r\n\t\t\t\t\t\t\ton: data[4],\r\n\t\t\t\t\t\t\ttype: data[5]\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tobj.postMessage(JSON.stringify(payload, null, 0));\r\n\t\t\t\t} else {\r\n\t\t\t\t\treject(new Error(webWorkerError));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tonbatch () {}\r\n\r\n\t\tonclear () {}\r\n\r\n\t\tondelete () {}\r\n\r\n\t\tonerror () {}\r\n\r\n\t\tonrequest (arg) {\r\n\t\t\treturn arg;\r\n\t\t}\r\n\r\n\t\tonset () {}\r\n\r\n\t\tonsync () {}\r\n\r\n\t\tasync override (data, type = \"records\", fn = void 0) {\r\n\t\t\tconst result = true;\r\n\r\n\t\t\tif (type === \"indexes\") {\r\n\t\t\t\tthis.indexes = this.transform(data, fn);\r\n\t\t\t} else if (type === \"records\") {\r\n\t\t\t\tconst key = this.key !== \"\" ? arg => arg[this.key] || uuid() : () => uuid();\r\n\t\t\t\tthis.indexes.clear();\r\n\t\t\t\tthis.data = new Map(data.map(datum => [key(datum), datum]));\r\n\t\t\t\tthis.size = this.data.size;\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error(\"Invalid type\");\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\treduce (fn, accumulator, raw = false) {\r\n\t\t\tlet a = accumulator || this.data.keys().next().value;\r\n\r\n\t\t\tthis.forEach((v, k) => {\r\n\t\t\t\ta = fn(a, v, k, this, raw);\r\n\t\t\t}, this);\r\n\r\n\t\t\treturn a;\r\n\t\t}\r\n\r\n\t\tregister (key, fn) {\r\n\t\t\tadapter[key] = fn;\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treindex (index) {\r\n\t\t\tconst indices = index ? [index] : this.index;\r\n\r\n\t\t\tif (index && this.index.includes(index) === false) {\r\n\t\t\t\tthis.index.push(index);\r\n\t\t\t}\r\n\r\n\t\t\teach(indices, i => this.indexes.set(i, new Map()));\r\n\t\t\tthis.forEach((data, key) => each(indices, i => setIndex(this.index, this.indexes, this.delimiter, key, data, i, this.pattern)));\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tasync save (type = \"mongo\") {\r\n\t\t\tlet result;\r\n\r\n\t\t\ttry {\r\n\t\t\t\tresult = await this.cmd(type, \"set\");\r\n\t\t\t\tthis.log(`Saved ${this.id} to ${type} persistent storage`);\r\n\t\t\t} catch (e) {\r\n\t\t\t\tthis.log(`Error saving ${this.id} to ${type} persistent storage: ${e.message || e.stack || e}`, \"error\");\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\tsearch (value, index, raw = false) {\r\n\t\t\tconst result = new Map(),\r\n\t\t\t\tfn = typeof value === \"function\",\r\n\t\t\t\trgex = value && typeof value.test === \"function\";\r\n\r\n\t\t\tif (value) {\r\n\t\t\t\teach(index ? Array.isArray(index) ? index : [index] : this.index, i => {\r\n\t\t\t\t\tlet idx = this.indexes.get(i);\r\n\r\n\t\t\t\t\tif (idx) {\r\n\t\t\t\t\t\tidx.forEach((lset, lkey) => {\r\n\t\t\t\t\t\t\tswitch (true) {\r\n\t\t\t\t\t\t\t\tcase fn && value(lkey, i):\r\n\t\t\t\t\t\t\t\tcase rgex && value.test(Array.isArray(lkey) ? lkey.join(\", \") : lkey):\r\n\t\t\t\t\t\t\t\tcase lkey === value:\r\n\t\t\t\t\t\t\t\t\tlset.forEach(key => {\r\n\t\t\t\t\t\t\t\t\t\tif (!result.has(key) && this.has(key)) {\r\n\t\t\t\t\t\t\t\t\t\t\tresult.set(key, this.get(key, raw));\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\tvoid 0;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\treturn raw ? Array.from(result.values()) : this.list(...Array.from(result.values()));\r\n\t\t}\r\n\r\n\t\tasync set (key, data, batch = false, override = false, lazyLoad = false, retry = false) {\r\n\t\t\tlet x = clone(data),\r\n\t\t\t\tog;\r\n\r\n\t\t\treturn this.exec(async () => {\r\n\t\t\t\tif (key === void 0 || key === null) {\r\n\t\t\t\t\tkey = this.key && x[this.key] !== void 0 ? x[this.key] : uuid();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.beforeSet(key, data, batch, override, lazyLoad, retry);\r\n\r\n\t\t\t\tif (!this.data.has(key)) {\r\n\t\t\t\t\t++this.size;\r\n\r\n\t\t\t\t\tif (this.versioning) {\r\n\t\t\t\t\t\tthis.versions.set(key, new Set());\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tog = this.get(key, true);\r\n\t\t\t\t\tdelIndex(this.index, this.indexes, this.delimiter, key, og, this.pattern);\r\n\r\n\t\t\t\t\tif (this.versioning) {\r\n\t\t\t\t\t\tthis.versions.get(key).add(Object.freeze(clone(og)));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (override === false) {\r\n\t\t\t\t\t\tx = merge(clone(og), x);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.data.set(key, x);\r\n\t\t\t\tsetIndex(this.index, this.indexes, this.delimiter, key, x, null, this.pattern);\r\n\r\n\t\t\t\treturn this.get(key);\r\n\t\t\t}, async arg => {\r\n\t\t\t\tthis.onset(arg, batch, retry, lazyLoad);\r\n\r\n\t\t\t\tif (!lazyLoad) {\r\n\t\t\t\t\tthis.storage(\"set\", key, x).then(success => {\r\n\t\t\t\t\t\tif (success) {\r\n\t\t\t\t\t\t\tthis.log(`Saved ${key} to persistent storage`);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, e => this.log(`Error saving ${key} to persistent storage: ${e.message || e.stack || e}`, \"error\"));\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn arg;\r\n\t\t\t}, err => {\r\n\t\t\t\tthis.onerror(\"set\", err);\r\n\t\t\t\tthrow err;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsort (fn, frozen = true) {\r\n\t\t\treturn frozen ? Object.freeze(this.limit(0, this.size, true).sort(fn).map(i => Object.freeze(i))) : this.limit(0, this.size, true).sort(fn);\r\n\t\t}\r\n\r\n\t\tsortBy (index, raw = false) {\r\n\t\t\tconst result = [],\r\n\t\t\t\tkeys = [];\r\n\r\n\t\t\tlet lindex;\r\n\r\n\t\t\tif (!this.indexes.has(index)) {\r\n\t\t\t\tthis.reindex(index);\r\n\t\t\t}\r\n\r\n\t\t\tlindex = this.indexes.get(index);\r\n\t\t\tlindex.forEach((idx, key) => keys.push(key));\r\n\t\t\teach(keys.sort(), i => lindex.get(i).forEach(key => result.push(this.get(key, raw))));\r\n\r\n\t\t\treturn raw ? result : this.list(...result);\r\n\t\t}\r\n\r\n\t\tasync storage (...args) {\r\n\t\t\tlet result;\r\n\r\n\t\t\ttry {\r\n\t\t\t\tconst promises = Object.keys(this.adapters).map(async i => await this.cmd.apply(this, [i, ...args]));\r\n\r\n\t\t\t\tif (promises.length > 0) {\r\n\t\t\t\t\tawait Promise.all(promises);\r\n\t\t\t\t\tresult = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult = false;\r\n\t\t\t\t}\r\n\t\t\t} catch (e) {\r\n\t\t\t\tthis.log(e.stack || e.message || e, \"error\");\r\n\t\t\t\tresult = false;\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\ttoArray (data, frozen = true) {\r\n\t\t\tlet result;\r\n\r\n\t\t\tif (data) {\r\n\t\t\t\tresult = data.map(i => frozen ? i[1] : clone(i[1]));\r\n\t\t\t} else {\r\n\t\t\t\tresult = this.limit(0, this.size, true);\r\n\r\n\t\t\t\tif (frozen) {\r\n\t\t\t\t\teach(result, i => Object.freeze(i));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn frozen ? Object.freeze(result) : result;\r\n\t\t}\r\n\r\n\t\ttoObject (data, frozen = true) {\r\n\t\t\tconst result = !data ? toObjekt(this, frozen) : data.reduce((a, b) => {\r\n\t\t\t\tconst obj = clone(b[1]);\r\n\r\n\t\t\t\tif (frozen) {\r\n\t\t\t\t\tObject.freeze(obj);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ta[b[0]] = obj;\r\n\r\n\t\t\t\treturn a;\r\n\t\t\t}, {});\r\n\r\n\t\t\treturn frozen ? Object.freeze(result) : result;\r\n\t\t}\r\n\r\n\t\ttransform (input, fn) {\r\n\t\t\treturn typeof fn === \"function\" ? fn(input) : cast(input);\r\n\t\t}\r\n\r\n\t\tasync unload (type = \"mongo\", key = void 0) {\r\n\t\t\tconst id = key !== void 0 ? key : this.id;\r\n\t\t\tlet result;\r\n\r\n\t\t\ttry {\r\n\t\t\t\tresult = await this.cmd(type, \"remove\", key);\r\n\t\t\t\tthis.log(`Unloaded ${id} from ${type} persistent storage`);\r\n\t\t\t} catch (e) {\r\n\t\t\t\tthis.log(`Error unloading ${id} from ${type} persistent storage: ${e.message || e.stack || e}`, \"error\");\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\tunregister (key) {\r\n\t\t\tdelete adapter[key];\r\n\t\t}\r\n\r\n\t\tvalues () {\r\n\t\t\treturn this.data.values();\r\n\t\t}\r\n\r\n\t\tuseWorker (resolve, reject) {\r\n\t\t\tlet obj;\r\n\r\n\t\t\tif (this.worker) {\r\n\t\t\t\tobj = new Worker(this.worker);\r\n\r\n\t\t\t\tobj.onerror = err => {\r\n\t\t\t\t\treject(err);\r\n\t\t\t\t\tobj.terminate();\r\n\t\t\t\t};\r\n\r\n\t\t\t\tobj.onmessage = ev => {\r\n\t\t\t\t\tresolve(JSON.parse(ev.data));\r\n\t\t\t\t\tobj.terminate();\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\treject(new Error(webWorkerError));\r\n\t\t\t}\r\n\r\n\t\t\treturn obj;\r\n\t\t}\r\n\r\n\t\twhere (predicate, raw = false, op = \"||\") {\r\n\t\t\tconst keys = this.index.filter(i => i in predicate);\r\n\r\n\t\t\treturn keys.length > 0 ? this.filter(new Function(\"a\", `return (${keys.map(i => {\r\n\t\t\t\tlet result;\r\n\r\n\t\t\t\tif (Array.isArray(predicate[i])) {\r\n\t\t\t\t\tresult = `Array.isArray(a['${i}']) ? ${predicate[i].map(arg => `a['${i}'].includes(${typeof arg === \"string\" ? `'${arg}'` : arg})`).join(` ${op} `)} : a['${i}'] === '${predicate[i].join(\",\")}'`;\r\n\t\t\t\t} else if (predicate[i] instanceof RegExp) {\r\n\t\t\t\t\tresult = `Array.isArray(a['${i}']) ? a['${i}'].filter(i => ${predicate[i]}.test(a['${i}'])).length > 0 : ${predicate[i]}.test(a['${i}'])`;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst arg = typeof predicate[i] === \"string\" ? `'${predicate[i]}'` : predicate[i];\r\n\r\n\t\t\t\t\tresult = `Array.isArray(a['${i}']) ? a['${i}'].includes(${arg}) : a['${i}'] === ${arg}`;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn result;\r\n\t\t\t}).join(\") && (\")});`), raw) : [];\r\n\t\t}\r\n\t}\r\n\r\n\tfunction factory (data = null, config = {}) {\r\n\t\tconst obj = new Haro(config);\r\n\r\n\t\tif (webWorker) {\r\n\t\t\tobj.worker = node === false ? global.URL.createObjectURL(blob(functions)) : new Function(functions);\r\n\t\t}\r\n\r\n\t\tif (Array.isArray(data)) {\r\n\t\t\tobj.batch(data, \"set\");\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\tfactory.transform = cast;\r\n\tfactory.version = \"5.0.0\";\r\n\r\n\t// Node, AMD & window supported\r\n\tif (typeof exports !== \"undefined\") {\r\n\t\tmodule.exports = factory;\r\n\t} else if (typeof define === \"function\" && define.amd !== void 0) {\r\n\t\tdefine(() => factory);\r\n\t} else {\r\n\t\tglobal.haro = factory;\r\n\t}\r\n}(typeof window !== \"undefined\" ? window : global));\r\n"]}