{"version":3,"sources":["haro.js"],"names":["global","has","a","b","each","arr","fn","item","entries","blob","arg","Blob","type","clone","JSON","parse","stringify","keyIndex","key","data","delimiter","pattern","result","includes","split","sort","localeCompare","map","i","toString","replace","RegExp","toLowerCase","join","delIndex","index","indexes","forEach","idx","get","value","o","delete","size","createIndexes","records","lkey","lindex","push","iterate","obj","Object","keys","call","merge","Array","isArray","concat","joinData","id","on","left","right","ids","include","reverse","x","comp","c","filter","valid","length","error","errorMsg","v","k","s","Math","random","substring","setIndex","indice","d","set","Set","add","lidx","toObjekt","frozen","freeze","uuid","substr","r","floor","factory","config","Haro","webWorker","worker","URL","createObjectURL","functions","Function","batch","node","process","nextTick","Promise","Map","Worker","require","webWorkerError","adapter","ev","cmd","postMessage","constructor","adapters","debounce","logging","versioning","debounced","versions","defineProperty","enumerable","from","reindex","args","lazyLoad","beforeBatch","del","all","onbatch","log","e","onerror","beforeClear","beforeDelete","beforeSet","clear","onclear","Error","apply","retry","og","exec","ondelete","storage","then","success","message","stack","err","dump","fromEntries","first","second","handler","find","where","raw","list","reduce","ctx","other","offload","toArray","limit","offset","max","registry","slice","load","console","resolve","reject","useWorker","payload","onrequest","onset","onsync","override","p","accumulator","next","register","indices","save","search","rgex","test","lset","values","sortBy","promises","toObject","unload","unregister","terminate","onmessage","predicate","op","version","exports","define","amd","haro","module","window"],"mappings":"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","file":"unknown","sourcesContent":["/**\r\n * Harō is a modern immutable DataStore\r\n *\r\n * @author Jason Mulligan <jason.mulligan@avoidwork.com>\r\n * @copyright 2020\r\n * @license BSD-3-Clause\r\n * @version 6.0.0\r\n */\r\n\"use strict\";\r\n\r\n(function (global) {\r\n\tconst node = typeof process !== \"undefined\" && typeof process.nextTick === \"function\",\r\n\t\tPromise = global.Promise,\r\n\t\tMap = global.Map,\r\n\t\tSet = global.Set,\r\n\t\tBlob = global.Blob,\r\n\t\tWorker = global.Worker || (node ? require(\"tiny-worker\") : void 0),\r\n\t\tr = [8, 9, \"a\", \"b\"],\r\n\t\twebWorker = typeof Worker !== \"undefined\",\r\n\t\twebWorkerError = \"Web Worker not supported\",\r\n\t\tadapter = {};\r\n\r\n\tfunction has (a, b) {\r\n\t\treturn b in a;\r\n\t}\r\n\r\n\tfunction each (arr, fn) {\r\n\t\tfor (const item of arr.entries()) {\r\n\t\t\tfn(item[1], item[0]);\r\n\t\t}\r\n\r\n\t\treturn arr;\r\n\t}\r\n\r\n\tfunction blob (arg) {\r\n\t\treturn new Blob([arg], {type: \"application/javascript\"});\r\n\t}\r\n\r\n\tfunction clone (arg) {\r\n\t\treturn JSON.parse(JSON.stringify(arg, null, 0));\r\n\t}\r\n\r\n\tfunction keyIndex (key, data, delimiter, pattern) {\r\n\t\tlet result;\r\n\r\n\t\tif (key.includes(delimiter)) {\r\n\t\t\tresult = key.split(delimiter).sort((a, b) => a.localeCompare(b)).map(i => (data[i] !== void 0 ? data[i] : \"\").toString().replace(new RegExp(pattern, \"g\"), \"\").toLowerCase()).join(delimiter);\r\n\t\t} else {\r\n\t\t\tresult = data[key];\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tfunction delIndex (index, indexes, delimiter, key, data, pattern) {\r\n\t\tindex.forEach(i => {\r\n\t\t\tconst idx = indexes.get(i),\r\n\t\t\t\tvalue = keyIndex(i, data, delimiter, pattern);\r\n\r\n\t\t\tif (idx.has(value)) {\r\n\t\t\t\tconst o = idx.get(value);\r\n\r\n\t\t\t\to.delete(key);\r\n\r\n\t\t\t\tif (o.size === 0) {\r\n\t\t\t\t\tidx.delete(value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tfunction createIndexes (records, indexes, key, delimiter, pattern) {\r\n\t\tconst result = {};\r\n\r\n\t\teach(indexes, i => {\r\n\t\t\tresult[i] = {};\r\n\t\t});\r\n\r\n\t\teach(records, i => {\r\n\t\t\tconst lkey = i[key];\r\n\r\n\t\t\tif (lkey !== void 0) {\r\n\t\t\t\tindexes.forEach(index => {\r\n\t\t\t\t\tconst lindex = keyIndex(index, i, delimiter, pattern);\r\n\r\n\t\t\t\t\tif (!has(result[index], lindex)) {\r\n\t\t\t\t\t\tresult[index][lindex] = [];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tresult[index][lindex].push(lkey);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tfunction iterate (obj, fn) {\r\n\t\tif (obj instanceof Object) {\r\n\t\t\teach(Object.keys(obj), i => fn.call(obj, obj[i], i));\r\n\t\t} else {\r\n\t\t\teach(obj, fn);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction merge (a, b) {\r\n\t\tif (a instanceof Object && b instanceof Object) {\r\n\t\t\teach(Object.keys(b), i => {\r\n\t\t\t\tif (a[i] instanceof Object && b[i] instanceof Object) {\r\n\t\t\t\t\ta[i] = merge(a[i], b[i]);\r\n\t\t\t\t} else if (Array.isArray(a[i]) && Array.isArray(b[i])) {\r\n\t\t\t\t\ta[i] = a[i].concat(b[i]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\ta[i] = b[i];\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else if (Array.isArray(a) && Array.isArray(b)) {\r\n\t\t\ta = a.concat(b);\r\n\t\t} else {\r\n\t\t\ta = b;\r\n\t\t}\r\n\r\n\t\treturn a;\r\n\t}\r\n\r\n\tfunction joinData (id, a, b, key, on, type = \"inner\") {\r\n\t\tconst result = [];\r\n\t\tlet errorMsg = \"More than one record found on \";\r\n\r\n\t\tlet error = false;\r\n\r\n\t\tfunction join (left, right, ids, include = false, reverse = false) {\r\n\t\t\tconst keys = Object.keys(right[0]),\r\n\t\t\t\tfn = !reverse ? (x, i) => x[on] === i[key] : (x, i) => x[key] === i[on];\r\n\r\n\t\t\teach(left, i => {\r\n\t\t\t\tconst comp = {},\r\n\t\t\t\t\tc = right.filter(x => fn(x, i));\r\n\r\n\t\t\t\tlet valid = true;\r\n\r\n\t\t\t\tif (c.length > 1) {\r\n\t\t\t\t\terror = true;\r\n\t\t\t\t\terrorMsg += i[on];\r\n\t\t\t\t\tvalid = false;\r\n\t\t\t\t} else if (c.length === 1) {\r\n\t\t\t\t\teach([i, c[0]], (x, idx) => iterate(x, (v, k) => {\r\n\t\t\t\t\t\tcomp[ids[idx] + \"_\" + k] = v;\r\n\t\t\t\t\t}));\r\n\t\t\t\t} else if (include) {\r\n\t\t\t\t\titerate(i, (v, k) => {\r\n\t\t\t\t\t\tcomp[ids[0] + \"_\" + k] = v;\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\teach(keys, k => {\r\n\t\t\t\t\t\tcomp[ids[1] + \"_\" + k] = null;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (valid && Object.keys(comp).length > 0) {\r\n\t\t\t\t\tresult.push(comp);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn valid;\r\n\t\t\t}, true);\r\n\t\t}\r\n\r\n\t\tif (type === \"inner\") {\r\n\t\t\tjoin(a, b, id);\r\n\t\t}\r\n\r\n\t\tif (type === \"left\") {\r\n\t\t\tjoin(a, b, id, true);\r\n\t\t}\r\n\r\n\t\tif (type === \"right\") {\r\n\t\t\tjoin(b, a, clone(id).reverse(), true, true);\r\n\t\t}\r\n\r\n\t\treturn !error ? result : errorMsg;\r\n\t}\r\n\r\n\tfunction onmessage (ev) {\r\n\t\tconst data = JSON.parse(ev.data),\r\n\t\t\tcmd = data.cmd;\r\n\r\n\t\tlet result;\r\n\r\n\t\tif (cmd === \"index\") {\r\n\t\t\tresult = createIndexes(data.records, data.index, data.key, data.delimiter, data.pattern);\r\n\t\t}\r\n\r\n\t\tif (cmd === \"join\") {\r\n\t\t\tresult = joinData(data.ids, data.records[0], data.records[1], data.key, data.on, data.type);\r\n\t\t}\r\n\r\n\t\tpostMessage(JSON.stringify(result));\r\n\t}\r\n\r\n\tfunction s () {\r\n\t\treturn ((Math.random() + 1) * 0x10000 | 0).toString(16).substring(1);\r\n\t}\r\n\r\n\tfunction setIndex (index, indexes, delimiter, key, data, indice, pattern) {\r\n\t\teach(!indice ? index : [indice], i => {\r\n\t\t\tconst lindex = indexes.get(i);\r\n\r\n\t\t\tif (Array.isArray(data[i]) && !i.includes(delimiter)) {\r\n\t\t\t\teach(data[i], d => {\r\n\t\t\t\t\tif (!lindex.has(d)) {\r\n\t\t\t\t\t\tlindex.set(d, new Set());\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlindex.get(d).add(key);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tconst lidx = keyIndex(i, data, delimiter, pattern);\r\n\r\n\t\t\t\tif (lidx !== void 0 && lidx !== null) {\r\n\t\t\t\t\tif (!lindex.has(lidx)) {\r\n\t\t\t\t\t\tlindex.set(lidx, new Set());\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlindex.get(lidx).add(key);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tfunction toObjekt (arg, frozen = true) {\r\n\t\tconst result = {};\r\n\r\n\t\targ.forEach((value, key) => {\r\n\t\t\tconst obj = value;\r\n\r\n\t\t\tif (frozen) {\r\n\t\t\t\tObject.freeze(obj);\r\n\t\t\t}\r\n\r\n\t\t\tresult[clone(key)] = obj;\r\n\t\t});\r\n\r\n\t\tif (frozen) {\r\n\t\t\tObject.freeze(result);\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tfunction uuid () {\r\n\t\treturn s() + s() + \"-\" + s() + \"-4\" + s().substr(0, 3) + \"-\" + r[Math.floor(Math.random() * 4)] + s().substr(0, 3) + \"-\" + s() + s() + s();\r\n\t}\r\n\r\n\tconst functions = [\r\n\t\tclone.toString(),\r\n\t\tcreateIndexes.toString(),\r\n\t\teach.toString(),\r\n\t\thas.toString(),\r\n\t\titerate.toString(),\r\n\t\tjoinData.toString(),\r\n\t\tkeyIndex.toString(),\r\n\t\tsetIndex.toString(),\r\n\t\t(node === false ? \"\" : \"self.\") + \"onmessage = \" + onmessage.toString() + \";\"\r\n\t].join(\"\\n\");\r\n\r\n\tclass Haro {\r\n\t\tconstructor ({adapters = {}, debounce = 0, delimiter = \"|\", id = uuid(), index = [], key = \"\", logging = true, pattern = \"\\\\s*|\\\\t*\", versioning = false} = {}) {\r\n\t\t\tthis.adapters = adapters;\r\n\t\t\tthis.data = new Map();\r\n\t\t\tthis.debounce = debounce;\r\n\t\t\tthis.debounced = new Map();\r\n\t\t\tthis.delimiter = delimiter;\r\n\t\t\tthis.id = id;\r\n\t\t\tthis.index = index;\r\n\t\t\tthis.indexes = new Map();\r\n\t\t\tthis.key = key;\r\n\t\t\tthis.logging = logging;\r\n\t\t\tthis.pattern = pattern;\r\n\t\t\tthis.size = 0;\r\n\t\t\tthis.worker = null;\r\n\t\t\tthis.versions = new Map();\r\n\t\t\tthis.versioning = versioning;\r\n\r\n\t\t\tObject.defineProperty(this, \"registry\", {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tget: () => Array.from(this.data.keys())\r\n\t\t\t});\r\n\r\n\t\t\treturn this.reindex();\r\n\t\t}\r\n\r\n\t\tasync batch (args, type = \"set\", lazyLoad = false) {\r\n\t\t\tlet result;\r\n\r\n\t\t\tthis.beforeBatch(args, type);\r\n\r\n\t\t\ttry {\r\n\t\t\t\tconst fn = type === \"del\" ? i => this.del(i, true, lazyLoad) : i => this.set(null, i, true, true, lazyLoad);\r\n\r\n\t\t\t\tresult = await Promise.all(args.map(fn));\r\n\t\t\t\tthis.onbatch(type, result);\r\n\t\t\t\tthis.log(`Batch successful on ${this.id}`);\r\n\t\t\t} catch (e) {\r\n\t\t\t\tthis.onerror(\"batch\", e);\r\n\t\t\t\tthis.log(`Batch failure on ${this.id}`);\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\tbeforeBatch () {}\r\n\r\n\t\tbeforeClear () {}\r\n\r\n\t\tbeforeDelete () {}\r\n\r\n\t\tbeforeSet () {}\r\n\r\n\t\tclear () {\r\n\t\t\tthis.beforeClear();\r\n\t\t\tthis.size = 0;\r\n\t\t\tthis.data.clear();\r\n\t\t\tthis.indexes.clear();\r\n\t\t\tthis.versions.clear();\r\n\t\t\tthis.reindex().onclear();\r\n\t\t\tthis.log(`Cleared ${this.id}`);\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tasync cmd (type, ...args) {\r\n\t\t\tif (this.adapters[type] === void 0 || adapter[type] === void 0) {\r\n\t\t\t\tthrow new Error(`${type} not configured for persistent storage`);\r\n\t\t\t}\r\n\r\n\t\t\treturn await adapter[type].apply(this, [this, ...args]);\r\n\t\t}\r\n\r\n\t\tdel (key, batch = false, lazyLoad = false, retry = false) {\r\n\t\t\tif (this.has(key) === false) {\r\n\t\t\t\tthrow new Error(\"Record not found\");\r\n\t\t\t}\r\n\r\n\t\t\tconst og = this.get(key, true);\r\n\r\n\t\t\treturn this.exec(async () => {\r\n\t\t\t\tthis.beforeDelete(key, batch, lazyLoad, retry);\r\n\t\t\t\tdelIndex(this.index, this.indexes, this.delimiter, key, og, this.pattern);\r\n\t\t\t\tthis.data.delete(key);\r\n\t\t\t\t--this.size;\r\n\t\t\t}, async () => {\r\n\t\t\t\tthis.ondelete(key, batch, retry, lazyLoad);\r\n\r\n\t\t\t\tif (this.versioning) {\r\n\t\t\t\t\tthis.versions.delete(key);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!lazyLoad) {\r\n\t\t\t\t\tthis.storage(\"remove\", key).then(success => {\r\n\t\t\t\t\t\tif (success) {\r\n\t\t\t\t\t\t\tthis.log(`Deleted ${key} from persistent storage`);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, e => this.log(`Error deleting ${key} from persistent storage: ${e.message || e.stack || e}`, \"error\"));\r\n\t\t\t\t}\r\n\t\t\t}, err => {\r\n\t\t\t\tthis.onerror(\"delete\", err);\r\n\t\t\t\tthrow err;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tdump (type = \"records\") {\r\n\t\t\tconst result = type === \"records\" ? Array.from(this.entries()) : Object.fromEntries(this.indexes);\r\n\r\n\t\t\tif (type === \"indexes\") {\r\n\t\t\t\tfor (const key of Object.keys(result)) {\r\n\t\t\t\t\tresult[key] = Object.fromEntries(result[key]);\r\n\r\n\t\t\t\t\tfor (const lkey of Object.keys(result[key])) {\r\n\t\t\t\t\t\tresult[key][lkey] = Array.from(result[key][lkey]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\tentries () {\r\n\t\t\treturn this.data.entries();\r\n\t\t}\r\n\r\n\t\tasync exec (first, second, handler) {\r\n\t\t\tlet result;\r\n\r\n\t\t\ttry {\r\n\t\t\t\tconst arg = await first();\r\n\r\n\t\t\t\tresult = await second(arg);\r\n\t\t\t} catch (err) {\r\n\t\t\t\thandler(err);\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\tfind (where, raw = false) {\r\n\t\t\tconst key = Object.keys(where).sort((a, b) => a.localeCompare(b)).join(this.delimiter),\r\n\t\t\t\tvalue = keyIndex(key, where, this.delimiter, this.pattern),\r\n\t\t\t\tresult = [];\r\n\r\n\t\t\tif (this.indexes.has(key)) {\r\n\t\t\t\t(this.indexes.get(key).get(value) || new Set()).forEach(i => result.push(this.get(i, raw)));\r\n\t\t\t}\r\n\r\n\t\t\treturn raw ? result : this.list(...result);\r\n\t\t}\r\n\r\n\t\tfilter (fn, raw = false) {\r\n\t\t\tconst result = this.reduce((a, v, k, ctx) => {\r\n\t\t\t\tif (fn.call(ctx, v)) {\r\n\t\t\t\t\ta.push(this.get(k, raw));\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn a;\r\n\t\t\t}, []);\r\n\r\n\t\t\treturn raw ? result : this.list(...result);\r\n\t\t}\r\n\r\n\t\tforEach (fn, ctx) {\r\n\t\t\tthis.data.forEach((value, key) => fn(clone(value), clone(key)), ctx || this.data);\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tget (key, raw = false) {\r\n\t\t\tconst result = clone(this.data.get(key) || null);\r\n\r\n\t\t\treturn result && !raw ? this.list(key, result) : result;\r\n\t\t}\r\n\r\n\t\thas (key, map) {\r\n\t\t\treturn (map || this.data).has(key);\r\n\t\t}\r\n\r\n\t\tasync join (other, on, type = \"inner\", where = []) {\r\n\t\t\tlet result;\r\n\r\n\t\t\tif (other.size > 0) {\r\n\t\t\t\tif (where.length > 0) {\r\n\t\t\t\t\tresult = await this.offload([[this.id, other.id], this.find(where[0], true), !where[1] ? other.toArray(null, true) : other.find(where[1], true), this.key, on || this.key, type], \"join\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult = await this.offload([[this.id, other.id], this.toArray(null, true), other.toArray(null, true), this.key, on || this.key, type], \"join\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (typeof arg === \"string\") {\r\n\t\t\t\t\tthrow new Error(result);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tresult = [];\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\tkeys () {\r\n\t\t\treturn this.data.keys();\r\n\t\t}\r\n\r\n\t\tlimit (offset = 0, max = 0, raw = false) {\r\n\t\t\tconst result = this.registry.slice(offset, offset + max).map(i => this.get(i, raw));\r\n\r\n\t\t\treturn raw ? result : this.list(...result);\r\n\t\t}\r\n\r\n\t\tlist (...args) {\r\n\t\t\treturn Object.freeze(args.map(i => Object.freeze(i)));\r\n\t\t}\r\n\r\n\t\tasync load (type = \"mongo\", key = void 0) {\r\n\t\t\tconst batch = key === void 0,\r\n\t\t\t\tid = !batch ? key : this.id;\r\n\t\t\tlet result;\r\n\r\n\t\t\tif (batch) {\r\n\t\t\t\tthis.clear();\r\n\t\t\t}\r\n\r\n\t\t\ttry {\r\n\t\t\t\tconst data = await this.cmd(type, \"get\", key);\r\n\r\n\t\t\t\tresult = batch ? this.batch(data, \"set\", true) : this.set(key, data, true, true, true);\r\n\t\t\t\tthis.log(`Loaded ${id} from ${type} persistent storage`);\r\n\t\t\t} catch (e) {\r\n\t\t\t\tthis.log(`Error loading ${id} from ${type} persistent storage: ${e.message || e.stack || e}`, \"error\");\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\tlog (arg = \"\", type = \"log\") {\r\n\t\t\tif (this.logging) {\r\n\t\t\t\tconsole[type](`haro: ${arg}`);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tmap (fn, raw = false) {\r\n\t\t\tconst result = [];\r\n\r\n\t\t\tthis.forEach((value, key) => result.push(fn(value, key)));\r\n\r\n\t\t\treturn raw ? result : this.list(...result);\r\n\t\t}\r\n\r\n\t\tasync offload (data, cmd = \"index\", index = this.index) {\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tif (this.worker) {\r\n\t\t\t\t\tconst obj = this.useWorker(resolve, reject);\r\n\t\t\t\t\tlet payload;\r\n\r\n\t\t\t\t\tif (cmd === \"index\") {\r\n\t\t\t\t\t\tpayload = {\r\n\t\t\t\t\t\t\tcmd: cmd,\r\n\t\t\t\t\t\t\tindex: index,\r\n\t\t\t\t\t\t\trecords: data,\r\n\t\t\t\t\t\t\tkey: this.key,\r\n\t\t\t\t\t\t\tdelimiter: this.delimiter,\r\n\t\t\t\t\t\t\tpattern: this.pattern\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t} else if (cmd === \"join\") {\r\n\t\t\t\t\t\tpayload = {\r\n\t\t\t\t\t\t\tcmd: cmd,\r\n\t\t\t\t\t\t\tids: data[0],\r\n\t\t\t\t\t\t\trecords: [data[1], data[2]],\r\n\t\t\t\t\t\t\tkey: data[3],\r\n\t\t\t\t\t\t\ton: data[4],\r\n\t\t\t\t\t\t\ttype: data[5]\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tobj.postMessage(JSON.stringify(payload, null, 0));\r\n\t\t\t\t} else {\r\n\t\t\t\t\treject(new Error(webWorkerError));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tonbatch () {}\r\n\r\n\t\tonclear () {}\r\n\r\n\t\tondelete () {}\r\n\r\n\t\tonerror () {}\r\n\r\n\t\tonrequest (arg) {\r\n\t\t\treturn arg;\r\n\t\t}\r\n\r\n\t\tonset () {}\r\n\r\n\t\tonsync () {}\r\n\r\n\t\tasync override (data, type = \"records\") {\r\n\t\t\tconst result = true;\r\n\r\n\t\t\tif (type === \"indexes\") {\r\n\t\t\t\tthis.indexes = new Map(Object.keys(data).map(i => [i, new Map(Object.keys(data[i]).map(p => [p, new Set(data[i][p])]))]));\r\n\t\t\t} else if (type === \"records\") {\r\n\t\t\t\tthis.indexes.clear();\r\n\t\t\t\tthis.data = new Map(data);\r\n\t\t\t\tthis.size = this.data.size;\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error(\"Invalid type\");\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\treduce (fn, accumulator, raw = false) {\r\n\t\t\tlet a = accumulator || this.data.keys().next().value;\r\n\r\n\t\t\tthis.forEach((v, k) => {\r\n\t\t\t\ta = fn(a, v, k, this, raw);\r\n\t\t\t}, this);\r\n\r\n\t\t\treturn a;\r\n\t\t}\r\n\r\n\t\tregister (key, fn) {\r\n\t\t\tadapter[key] = fn;\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treindex (index) {\r\n\t\t\tconst indices = index ? [index] : this.index;\r\n\r\n\t\t\tif (index && this.index.includes(index) === false) {\r\n\t\t\t\tthis.index.push(index);\r\n\t\t\t}\r\n\r\n\t\t\teach(indices, i => this.indexes.set(i, new Map()));\r\n\t\t\tthis.forEach((data, key) => each(indices, i => setIndex(this.index, this.indexes, this.delimiter, key, data, i, this.pattern)));\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tasync save (type = \"mongo\") {\r\n\t\t\tlet result;\r\n\r\n\t\t\ttry {\r\n\t\t\t\tresult = await this.cmd(type, \"set\");\r\n\t\t\t\tthis.log(`Saved ${this.id} to ${type} persistent storage`);\r\n\t\t\t} catch (e) {\r\n\t\t\t\tthis.log(`Error saving ${this.id} to ${type} persistent storage: ${e.message || e.stack || e}`, \"error\");\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\tsearch (value, index, raw = false) {\r\n\t\t\tconst result = new Map(),\r\n\t\t\t\tfn = typeof value === \"function\",\r\n\t\t\t\trgex = value && typeof value.test === \"function\";\r\n\r\n\t\t\tif (value) {\r\n\t\t\t\teach(index ? Array.isArray(index) ? index : [index] : this.index, i => {\r\n\t\t\t\t\tlet idx = this.indexes.get(i);\r\n\r\n\t\t\t\t\tif (idx) {\r\n\t\t\t\t\t\tidx.forEach((lset, lkey) => {\r\n\t\t\t\t\t\t\tswitch (true) {\r\n\t\t\t\t\t\t\t\tcase fn && value(lkey, i):\r\n\t\t\t\t\t\t\t\tcase rgex && value.test(Array.isArray(lkey) ? lkey.join(\", \") : lkey):\r\n\t\t\t\t\t\t\t\tcase lkey === value:\r\n\t\t\t\t\t\t\t\t\tlset.forEach(key => {\r\n\t\t\t\t\t\t\t\t\t\tif (!result.has(key) && this.has(key)) {\r\n\t\t\t\t\t\t\t\t\t\t\tresult.set(key, this.get(key, raw));\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\tvoid 0;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\treturn raw ? Array.from(result.values()) : this.list(...Array.from(result.values()));\r\n\t\t}\r\n\r\n\t\tasync set (key, data, batch = false, override = false, lazyLoad = false, retry = false) {\r\n\t\t\tlet x = clone(data),\r\n\t\t\t\tog;\r\n\r\n\t\t\treturn this.exec(async () => {\r\n\t\t\t\tif (key === void 0 || key === null) {\r\n\t\t\t\t\tkey = this.key && x[this.key] !== void 0 ? x[this.key] : uuid();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.beforeSet(key, data, batch, override, lazyLoad, retry);\r\n\r\n\t\t\t\tif (!this.data.has(key)) {\r\n\t\t\t\t\t++this.size;\r\n\r\n\t\t\t\t\tif (this.versioning) {\r\n\t\t\t\t\t\tthis.versions.set(key, new Set());\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tog = this.get(key, true);\r\n\t\t\t\t\tdelIndex(this.index, this.indexes, this.delimiter, key, og, this.pattern);\r\n\r\n\t\t\t\t\tif (this.versioning) {\r\n\t\t\t\t\t\tthis.versions.get(key).add(Object.freeze(clone(og)));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (override === false) {\r\n\t\t\t\t\t\tx = merge(clone(og), x);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.data.set(key, x);\r\n\t\t\t\tsetIndex(this.index, this.indexes, this.delimiter, key, x, null, this.pattern);\r\n\r\n\t\t\t\treturn this.get(key);\r\n\t\t\t}, async arg => {\r\n\t\t\t\tthis.onset(arg, batch, retry, lazyLoad);\r\n\r\n\t\t\t\tif (!lazyLoad) {\r\n\t\t\t\t\tthis.storage(\"set\", key, x).then(success => {\r\n\t\t\t\t\t\tif (success) {\r\n\t\t\t\t\t\t\tthis.log(`Saved ${key} to persistent storage`);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, e => this.log(`Error saving ${key} to persistent storage: ${e.message || e.stack || e}`, \"error\"));\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn arg;\r\n\t\t\t}, err => {\r\n\t\t\t\tthis.onerror(\"set\", err);\r\n\t\t\t\tthrow err;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsort (fn, frozen = true) {\r\n\t\t\treturn frozen ? Object.freeze(this.limit(0, this.size, true).sort(fn).map(i => Object.freeze(i))) : this.limit(0, this.size, true).sort(fn);\r\n\t\t}\r\n\r\n\t\tsortBy (index, raw = false) {\r\n\t\t\tconst result = [],\r\n\t\t\t\tkeys = [];\r\n\r\n\t\t\tlet lindex;\r\n\r\n\t\t\tif (!this.indexes.has(index)) {\r\n\t\t\t\tthis.reindex(index);\r\n\t\t\t}\r\n\r\n\t\t\tlindex = this.indexes.get(index);\r\n\t\t\tlindex.forEach((idx, key) => keys.push(key));\r\n\t\t\teach(keys.sort(), i => lindex.get(i).forEach(key => result.push(this.get(key, raw))));\r\n\r\n\t\t\treturn raw ? result : this.list(...result);\r\n\t\t}\r\n\r\n\t\tasync storage (...args) {\r\n\t\t\tlet result;\r\n\r\n\t\t\ttry {\r\n\t\t\t\tconst promises = Object.keys(this.adapters).map(async i => await this.cmd.apply(this, [i, ...args]));\r\n\r\n\t\t\t\tif (promises.length > 0) {\r\n\t\t\t\t\tawait Promise.all(promises);\r\n\t\t\t\t\tresult = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult = false;\r\n\t\t\t\t}\r\n\t\t\t} catch (e) {\r\n\t\t\t\tthis.log(e.stack || e.message || e, \"error\");\r\n\t\t\t\tresult = false;\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\ttoArray (data, frozen = true) {\r\n\t\t\tlet result;\r\n\r\n\t\t\tif (data) {\r\n\t\t\t\tresult = data.map(i => frozen ? i[1] : clone(i[1]));\r\n\t\t\t} else {\r\n\t\t\t\tresult = this.limit(0, this.size, true);\r\n\r\n\t\t\t\tif (frozen) {\r\n\t\t\t\t\teach(result, i => Object.freeze(i));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn frozen ? Object.freeze(result) : result;\r\n\t\t}\r\n\r\n\t\ttoObject (data, frozen = true) {\r\n\t\t\tconst result = !data ? toObjekt(this, frozen) : data.reduce((a, b) => {\r\n\t\t\t\tconst obj = clone(b[1]);\r\n\r\n\t\t\t\tif (frozen) {\r\n\t\t\t\t\tObject.freeze(obj);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ta[b[0]] = obj;\r\n\r\n\t\t\t\treturn a;\r\n\t\t\t}, {});\r\n\r\n\t\t\treturn frozen ? Object.freeze(result) : result;\r\n\t\t}\r\n\r\n\t\tasync unload (type = \"mongo\", key = void 0) {\r\n\t\t\tconst id = key !== void 0 ? key : this.id;\r\n\t\t\tlet result;\r\n\r\n\t\t\ttry {\r\n\t\t\t\tresult = await this.cmd(type, \"remove\", key);\r\n\t\t\t\tthis.log(`Unloaded ${id} from ${type} persistent storage`);\r\n\t\t\t} catch (e) {\r\n\t\t\t\tthis.log(`Error unloading ${id} from ${type} persistent storage: ${e.message || e.stack || e}`, \"error\");\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\tunregister (key) {\r\n\t\t\tdelete adapter[key];\r\n\t\t}\r\n\r\n\t\tvalues () {\r\n\t\t\treturn this.data.values();\r\n\t\t}\r\n\r\n\t\tuseWorker (resolve, reject) {\r\n\t\t\tlet obj;\r\n\r\n\t\t\tif (this.worker) {\r\n\t\t\t\tobj = new Worker(this.worker);\r\n\r\n\t\t\t\tobj.onerror = err => {\r\n\t\t\t\t\treject(err);\r\n\t\t\t\t\tobj.terminate();\r\n\t\t\t\t};\r\n\r\n\t\t\t\tobj.onmessage = ev => {\r\n\t\t\t\t\tresolve(JSON.parse(ev.data));\r\n\t\t\t\t\tobj.terminate();\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\treject(new Error(webWorkerError));\r\n\t\t\t}\r\n\r\n\t\t\treturn obj;\r\n\t\t}\r\n\r\n\t\twhere (predicate, raw = false, op = \"||\") {\r\n\t\t\tconst keys = this.index.filter(i => i in predicate);\r\n\r\n\t\t\treturn keys.length > 0 ? this.filter(new Function(\"a\", `return (${keys.map(i => {\r\n\t\t\t\tlet result;\r\n\r\n\t\t\t\tif (Array.isArray(predicate[i])) {\r\n\t\t\t\t\tresult = `Array.isArray(a['${i}']) ? ${predicate[i].map(arg => `a['${i}'].includes(${typeof arg === \"string\" ? `'${arg}'` : arg})`).join(` ${op} `)} : a['${i}'] === '${predicate[i].join(\",\")}'`;\r\n\t\t\t\t} else if (predicate[i] instanceof RegExp) {\r\n\t\t\t\t\tresult = `Array.isArray(a['${i}']) ? a['${i}'].filter(i => ${predicate[i]}.test(a['${i}'])).length > 0 : ${predicate[i]}.test(a['${i}'])`;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst arg = typeof predicate[i] === \"string\" ? `'${predicate[i]}'` : predicate[i];\r\n\r\n\t\t\t\t\tresult = `Array.isArray(a['${i}']) ? a['${i}'].includes(${arg}) : a['${i}'] === ${arg}`;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn result;\r\n\t\t\t}).join(\") && (\")});`), raw) : [];\r\n\t\t}\r\n\t}\r\n\r\n\tfunction factory (data = null, config = {}) {\r\n\t\tconst obj = new Haro(config);\r\n\r\n\t\tif (webWorker) {\r\n\t\t\tobj.worker = node === false ? global.URL.createObjectURL(blob(functions)) : new Function(functions);\r\n\t\t}\r\n\r\n\t\tif (Array.isArray(data)) {\r\n\t\t\tobj.batch(data, \"set\");\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\tfactory.version = \"6.0.0\";\r\n\r\n\t// Node, AMD & window supported\r\n\tif (typeof exports !== \"undefined\") {\r\n\t\tmodule.exports = factory;\r\n\t} else if (typeof define === \"function\" && define.amd !== void 0) {\r\n\t\tdefine(() => factory);\r\n\t} else {\r\n\t\tglobal.haro = factory;\r\n\t}\r\n}(typeof window !== \"undefined\" ? window : global));\r\n"]}