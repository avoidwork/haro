{"version":3,"sources":["haro.js"],"names":["length","forEach","Array","from","isArray","add","Object","keys","set","type","JSON","parse","stringify","replace","querystring","endslash","indexOf","split","sort","localeCompare","map","toString","RegExp","toLowerCase","join","get","has","delete","size","push","call","concat","filter","reverse","op","path","value","Math","random","substring","freeze","substr","floor","worker","URL","createObjectURL","Function","batch","process","nextTick","Promise","Map","Set","fetch","require","Blob","Worker","json","data","cmd","records","index","key","delimiter","pattern","ids","on","postMessage","constructor","config","debounce","id","logging","patch","source","versioning","adapters","debounced","method","credentials","headers","accept","indexes","total","uri","versions","defineProperty","enumerable","reindex","beforeBatch","del","all","onbatch","log","onerror","beforeClear","beforeDelete","beforeRequest","beforeSet","beforeSync","clear","onclear","Error","apply","crawl","exec","ondelete","storage","then","message","stack","clearTimeout","setTimeout","transmit","dump","toArray","transform","entries","find","list","offload","arg","limit","registry","slice","load","console","useWorker","onrequest","onset","onsync","override","register","includes","request","toUpperCase","body","ok","status","_headers","test","save","search","values","setUri","sync","sortBy","Allow","allow","toObject","reduce","unload","unregister","terminate","onmessage","version","exports","define","amd","haro","module","window","global"],"mappings":"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","file":"unknown","sourcesContent":["/**\n * Harō is a modern immutable DataStore\n *\n * @author Jason Mulligan <jason.mulligan@avoidwork.com>\n * @copyright 2018\n * @license BSD-3-Clause\n * @version 4.1.0\n */\n\n\n(function (global) {\n\tconst node = typeof process !== \"undefined\" && typeof process.nextTick === \"function\",\n\t\tPromise = global.Promise,\n\t\tMap = global.Map,\n\t\tSet = global.Set,\n\t\tfetch = global.fetch || (node ? require(\"node-fetch\") : undefined),\n\t\tBlob = global.Blob,\n\t\tWorker = global.Worker || (node ? require(\"tiny-worker\") : undefined),\n\t\tr = [8, 9, \"a\", \"b\"],\n\t\tregex = {\n\t\t\tquerystring: /\\?.*/,\n\t\t\tendslash: /\\/$/,\n\t\t\tjson: /^application\\/json/\n\t\t},\n\t\twebWorker = typeof Worker !== \"undefined\",\n\t\twebWorkerError = \"Web Worker not supported\",\n\t\tadapter = {};\n\n\tfunction has (a, b) {\n\t\treturn b in a;\n\t}\n\n\tfunction each (arg, fn) {\n\t\tconst nth = arg.length;\n\t\tlet i = -1;\n\n\t\twhile (++i < nth) {\n\t\t\tfn(arg[i], i);\n\t\t}\n\t}\n\n\tfunction cast (input) {\n\t\tlet result;\n\n\t\tswitch (true) {\n\t\t\tcase input instanceof Map:\n\t\t\t\tresult = {};\n\t\t\t\tinput.forEach((value, key) => {\n\t\t\t\t\tresult[key] = cast(value);\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase input instanceof Set:\n\t\t\t\tresult = Array.from(input);\n\t\t\t\tbreak;\n\t\t\tcase Array.isArray(input):\n\t\t\t\tresult = new Set();\n\t\t\t\teach(input, i => result.add(cast(i)));\n\t\t\t\tbreak;\n\t\t\tcase input instanceof Object:\n\t\t\t\tresult = new Map();\n\t\t\t\teach(Object.keys(input), i => result.set(i, cast(input[i])));\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tresult = input;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tfunction blob (arg) {\n\t\treturn new Blob([arg], {type: \"application/javascript\"});\n\t}\n\n\tfunction clone (arg) {\n\t\treturn JSON.parse(JSON.stringify(arg, null, 0));\n\t}\n\n\tfunction concatURI (left, right) {\n\t\treturn left.replace(regex.querystring, \"\").replace(regex.endslash, \"\") + (right ? \"/\" + right : \"\");\n\t}\n\n\tfunction keyIndex (key, data, delimiter, pattern) {\n\t\tlet result;\n\n\t\tif (key.indexOf(delimiter) > -1) {\n\t\t\tresult = key.split(delimiter).sort((a, b) => a.localeCompare(b)).map(i => data[i].toString().replace(new RegExp(pattern, \"g\"), \"\").toLowerCase()).join(delimiter);\n\t\t} else {\n\t\t\tresult = data[key];\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tfunction delIndex (index, indexes, delimiter, key, data, pattern) {\n\t\tindex.forEach(i => {\n\t\t\tconst idx = indexes.get(i),\n\t\t\t\tvalue = keyIndex(i, data, delimiter, pattern);\n\n\t\t\tif (idx.has(value)) {\n\t\t\t\tconst o = idx.get(value);\n\n\t\t\t\to.delete(key);\n\n\t\t\t\tif (o.size === 0) {\n\t\t\t\t\tidx.delete(value);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction createIndexes (records, indexes, key, delimiter, pattern) {\n\t\tconst result = {};\n\n\t\teach(indexes, i => {\n\t\t\tresult[i] = {};\n\t\t});\n\n\t\teach(records, i => {\n\t\t\tconst lkey = i[key];\n\n\t\t\tif (lkey !== void 0) {\n\t\t\t\tindexes.forEach(index => {\n\t\t\t\t\tconst lindex = keyIndex(index, i, delimiter, pattern);\n\n\t\t\t\t\tif (!has(result[index], lindex)) {\n\t\t\t\t\t\tresult[index][lindex] = [];\n\t\t\t\t\t}\n\n\t\t\t\t\tresult[index][lindex].push(lkey);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tfunction iterate (obj, fn) {\n\t\tif (obj instanceof Object) {\n\t\t\teach(Object.keys(obj), i => fn.call(obj, obj[i], i));\n\t\t} else {\n\t\t\teach(obj, fn);\n\t\t}\n\t}\n\n\tfunction merge (a, b) {\n\t\tif (a instanceof Object && b instanceof Object) {\n\t\t\teach(Object.keys(b), i => {\n\t\t\t\tif (a[i] instanceof Object && b[i] instanceof Object) {\n\t\t\t\t\ta[i] = merge(a[i], b[i]);\n\t\t\t\t} else if (Array.isArray(a[i]) && Array.isArray(b[i])) {\n\t\t\t\t\ta[i] = a[i].concat(b[i]);\n\t\t\t\t} else {\n\t\t\t\t\ta[i] = b[i];\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (Array.isArray(a) && Array.isArray(b)) {\n\t\t\ta = a.concat(b);\n\t\t} else {\n\t\t\ta = b;\n\t\t}\n\n\t\treturn a;\n\t}\n\n\tfunction joinData (id, a, b, key, on, type = \"inner\") {\n\t\tconst result = [],\n\t\t\terrorMsg = \"More than one record found on \";\n\n\t\tlet error = false;\n\n\t\tfunction join (left, right, ids, include = false, reverse = false) {\n\t\t\tconst keys = Object.keys(right[0]),\n\t\t\t\tfn = !reverse ? (x, i) => x[on] === i[key] : (x, i) => x[key] === i[on];\n\n\t\t\teach(left, i => {\n\t\t\t\tconst comp = {},\n\t\t\t\t\tc = right.filter(x => fn(x, i));\n\n\t\t\t\tlet valid = true;\n\n\t\t\t\tif (c.length > 1) {\n\t\t\t\t\terror = true;\n\t\t\t\t\terrorMsg += i[on];\n\t\t\t\t\tvalid = false;\n\t\t\t\t} else if (c.length === 1) {\n\t\t\t\t\teach([i, c[0]], (x, idx) => iterate(x, (v, k) => {\n\t\t\t\t\t\tcomp[ids[idx] + \"_\" + k] = v;\n\t\t\t\t\t}));\n\t\t\t\t} else if (include) {\n\t\t\t\t\titerate(i, (v, k) => {\n\t\t\t\t\t\tcomp[ids[0] + \"_\" + k] = v;\n\t\t\t\t\t});\n\n\t\t\t\t\teach(keys, k => {\n\t\t\t\t\t\tcomp[ids[1] + \"_\" + k] = null;\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (valid && Object.keys(comp).length > 0) {\n\t\t\t\t\tresult.push(comp);\n\t\t\t\t}\n\n\t\t\t\treturn valid;\n\t\t\t}, true);\n\t\t}\n\n\t\tif (type === \"inner\") {\n\t\t\tjoin(a, b, id);\n\t\t}\n\n\t\tif (type === \"left\") {\n\t\t\tjoin(a, b, id, true);\n\t\t}\n\n\t\tif (type === \"right\") {\n\t\t\tjoin(b, a, clone(id).reverse(), true, true);\n\t\t}\n\n\t\treturn !error ? result : errorMsg;\n\t}\n\n\tfunction onmessage (ev) {\n\t\tconst data = JSON.parse(ev.data),\n\t\t\tcmd = data.cmd;\n\n\t\tlet result;\n\n\t\tif (cmd === \"index\") {\n\t\t\tresult = createIndexes(data.records, data.index, data.key, data.delimiter, data.pattern);\n\t\t}\n\n\t\tif (cmd === \"join\") {\n\t\t\tresult = joinData(data.ids, data.records[0], data.records[1], data.key, data.on, data.type);\n\t\t}\n\n\t\tpostMessage(JSON.stringify(result));\n\t}\n\n\tfunction createPatch (ogdata = {}, data = {}, key = \"\", overwrite = false) {\n\t\tconst result = [];\n\n\t\tif (overwrite) {\n\t\t\titerate(ogdata, (v, k) => {\n\t\t\t\tif (k !== key && data[k] === void 0) {\n\t\t\t\t\tresult.push({op: \"remove\", path: \"/\" + k});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\titerate(data, (v, k) => {\n\t\t\tif (k !== key && ogdata[k] === void 0) {\n\t\t\t\tresult.push({op: \"add\", path: \"/\" + k, value: v});\n\t\t\t} else if (JSON.stringify(ogdata[k]) !== JSON.stringify(v)) {\n\t\t\t\tresult.push({op: \"replace\", path: \"/\" + k, value: v});\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tfunction s () {\n\t\treturn ((Math.random() + 1) * 0x10000 | 0).toString(16).substring(1);\n\t}\n\n\tfunction setIndex (index, indexes, delimiter, key, data, indice, pattern) {\n\t\teach(!indice ? index : [indice], i => {\n\t\t\tconst lidx = keyIndex(i, data, delimiter, pattern);\n\t\t\tlet lindex;\n\n\t\t\tif (lidx !== void 0 && lidx !== null) {\n\t\t\t\tlindex = indexes.get(i);\n\n\t\t\t\tif (!lindex.has(lidx)) {\n\t\t\t\t\tlindex.set(lidx, new Set());\n\t\t\t\t}\n\n\t\t\t\tlindex.get(lidx).add(key);\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction toObjekt (arg, frozen = true) {\n\t\tconst result = {};\n\n\t\targ.forEach((value, key) => {\n\t\t\tconst obj = value;\n\n\t\t\tif (frozen) {\n\t\t\t\tObject.freeze(obj);\n\t\t\t}\n\n\t\t\tresult[clone(key)] = obj;\n\t\t});\n\n\t\tif (frozen) {\n\t\t\tObject.freeze(result);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tfunction uuid () {\n\t\treturn s() + s() + \"-\" + s() + \"-4\" + s().substr(0, 3) + \"-\" + r[Math.floor(Math.random() * 4)] + s().substr(0, 3) + \"-\" + s() + s() + s();\n\t}\n\n\tconst functions = [\n\t\tcast.toString(),\n\t\tclone.toString(),\n\t\tcreateIndexes.toString(),\n\t\teach.toString(),\n\t\thas.toString(),\n\t\titerate.toString(),\n\t\tjoinData.toString(),\n\t\tkeyIndex.toString(),\n\t\tsetIndex.toString(),\n\t\t(node === false ? \"\" : \"self.\") + \"onmessage = \" + onmessage.toString() + \";\"\n\t].join(\"\\n\");\n\n\tclass Haro {\n\t\tconstructor ({config = {}, debounce = 0, delimiter = \"|\", id = uuid(), index = [], key = \"\", logging = true, patch = false, pattern = \"\\\\s*|\\\\t*\", source = \"\", versioning = false} = {}) {\n\t\t\tthis.adapters = {};\n\t\t\tthis.data = new Map();\n\t\t\tthis.debounce = debounce;\n\t\t\tthis.debounced = new Map();\n\t\t\tthis.delimiter = delimiter;\n\t\t\tthis.config = {\n\t\t\t\tmethod: \"get\",\n\t\t\t\tcredentials: \"include\",\n\t\t\t\theaders: {\n\t\t\t\t\taccept: \"application/json\",\n\t\t\t\t\t\"content-type\": \"application/json\"\n\t\t\t\t}\n\t\t\t};\n\t\t\tthis.id = id;\n\t\t\tthis.index = index;\n\t\t\tthis.indexes = new Map();\n\t\t\tthis.key = key;\n\t\t\tthis.logging = logging;\n\t\t\tthis.patch = patch;\n\t\t\tthis.pattern = pattern;\n\t\t\tthis.source = source;\n\t\t\tthis.size = this.total = 0;\n\t\t\tthis.uri = \"\";\n\t\t\tthis.worker = null;\n\t\t\tthis.versions = new Map();\n\t\t\tthis.versioning = versioning;\n\n\t\t\tObject.defineProperty(this, \"registry\", {\n\t\t\t\tenumerable: true,\n\t\t\t\tget: () => Array.from(this.data.keys())\n\t\t\t});\n\n\t\t\tif (Object.keys(config).length > 1) {\n\t\t\t\tthis.config = merge(this.config, config);\n\t\t\t}\n\n\t\t\treturn this.reindex();\n\t\t}\n\n\t\tasync batch (args, type = \"set\", lazyLoad = false) {\n\t\t\tlet result;\n\n\t\t\tthis.beforeBatch(args, type);\n\n\t\t\ttry {\n\t\t\t\tconst fn = type === \"del\" ? i => this.del(i, true, lazyLoad) : i => this.set(null, i, true, true, lazyLoad);\n\n\t\t\t\tresult = await Promise.all(args.map(fn));\n\t\t\t\tthis.onbatch(type, result);\n\t\t\t\tthis.log(`Batch successful on ${this.id}`);\n\t\t\t} catch (e) {\n\t\t\t\tthis.onerror(\"batch\", e);\n\t\t\t\tthis.log(`Batch failure on ${this.id}`);\n\t\t\t\tthrow e;\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\tbeforeBatch () {}\n\n\t\tbeforeClear () {}\n\n\t\tbeforeDelete () {}\n\n\t\tbeforeRequest () {}\n\n\t\tbeforeSet () {}\n\n\t\tbeforeSync () {}\n\n\t\tclear () {\n\t\t\tthis.beforeClear();\n\t\t\tthis.size = this.total = 0;\n\t\t\tthis.data.clear();\n\t\t\tthis.indexes.clear();\n\t\t\tthis.versions.clear();\n\t\t\tthis.reindex().onclear();\n\t\t\tthis.log(`Cleared ${this.id}`);\n\n\t\t\treturn this;\n\t\t}\n\n\t\tasync cmd (type, ...args) {\n\t\t\tif (this.adapters[type] === void 0 || adapter[type] === void 0) {\n\t\t\t\tthrow new Error(`${type} not configured for persistent storage`);\n\t\t\t}\n\n\t\t\treturn await adapter[type].apply(this, [this, ...args]);\n\t\t}\n\n\t\tcrawl (arg) {\n\t\t\tlet result = clone(arg);\n\n\t\t\teach((this.source || \"\").split(\".\"), i => {\n\t\t\t\tresult = result[i];\n\t\t\t});\n\n\t\t\treturn result || arg;\n\t\t}\n\n\t\tdel (key, batch = false, lazyLoad = false, retry = false) {\n\t\t\tif (this.has(key) === false) {\n\t\t\t\tthrow new Error(\"Record not found\");\n\t\t\t}\n\n\t\t\tconst og = this.get(key, true);\n\n\t\t\treturn this.exec(async () => {\n\t\t\t\tthis.beforeDelete(key, batch, lazyLoad, retry);\n\t\t\t\tdelIndex(this.index, this.indexes, this.delimiter, key, og, this.pattern);\n\t\t\t\tthis.data.delete(key);\n\t\t\t\t--this.total;\n\t\t\t\tthis.size = this.total;\n\t\t\t}, async () => {\n\t\t\t\tthis.ondelete(key, batch, retry, lazyLoad);\n\n\t\t\t\tif (this.versioning) {\n\t\t\t\t\tthis.versions.delete(key);\n\t\t\t\t}\n\n\t\t\t\tif (!lazyLoad) {\n\t\t\t\t\tthis.storage(\"remove\", key).then(success => {\n\t\t\t\t\t\tif (success) {\n\t\t\t\t\t\t\tthis.log(`Deleted ${key} from persistent storage`);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, e => this.log(`Error deleting ${key} from persistent storage: ${e.message || e.stack || e}`, \"error\"));\n\n\t\t\t\t\tif (!batch && !retry && this.uri) {\n\t\t\t\t\t\tif (this.debounced.has(key)) {\n\t\t\t\t\t\t\tclearTimeout(this.debounced.get(key));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.debounced.set(key, setTimeout(async () => {\n\t\t\t\t\t\t\tthis.debounced.delete(key);\n\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tawait this.transmit(key, null, og, false, \"delete\");\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\tthis.log(err.stack || err.message || err, \"error\");\n\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tawait this.set(key, og, true, true);\n\t\t\t\t\t\t\t\t\tthis.log(`Reverted ${key}`);\n\t\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\t\tthis.log(`Failed to revert ${key}`);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, this.debounce));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, err => {\n\t\t\t\tthis.onerror(\"delete\", err);\n\t\t\t\tthrow err;\n\t\t\t});\n\t\t}\n\n\t\tdump (type = \"records\") {\n\t\t\treturn type === \"records\" ? this.toArray(null, false) : this.transform(this.indexes);\n\t\t}\n\n\t\tentries () {\n\t\t\treturn this.data.entries();\n\t\t}\n\n\t\tasync exec (first, second, handler) {\n\t\t\tlet result;\n\n\t\t\ttry {\n\t\t\t\tconst arg = await first();\n\t\t\t\tresult = await second(arg);\n\t\t\t} catch (err) {\n\t\t\t\thandler(err);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\tfind (where, raw = false) {\n\t\t\tconst key = Object.keys(where).sort((a, b) => a.localeCompare(b)).join(this.delimiter),\n\t\t\t\tvalue = keyIndex(key, where, this.delimiter, this.pattern),\n\t\t\t\tresult = [];\n\n\t\t\tif (this.indexes.has(key)) {\n\t\t\t\t(this.indexes.get(key).get(value) || new Set()).forEach(i => result.push(this.get(i, raw)));\n\t\t\t}\n\n\t\t\treturn raw ? result : this.list(...result);\n\t\t}\n\n\t\tfilter (fn, raw = false) {\n\t\t\tconst result = [];\n\n\t\t\tthis.forEach((value, key) => {\n\t\t\t\tif (fn(value, key) === true) {\n\t\t\t\t\tresult.push(this.get(key, raw));\n\t\t\t\t}\n\t\t\t}, this);\n\n\t\t\treturn raw ? result : this.list(...result);\n\t\t}\n\n\t\tforEach (fn, ctx) {\n\t\t\tthis.data.forEach((value, key) => fn(clone(value), clone(key)), ctx || this.data);\n\n\t\t\treturn this;\n\t\t}\n\n\t\tget (key, raw = false) {\n\t\t\tconst result = clone(this.data.get(key) || null);\n\n\t\t\treturn result && !raw ? this.list(key, result) : result;\n\t\t}\n\n\t\thas (key, map) {\n\t\t\treturn (map || this.data).has(key);\n\t\t}\n\n\t\tasync join (other, on, type = \"inner\", where = []) {\n\t\t\tlet result;\n\n\t\t\tif (other.total > 0) {\n\t\t\t\tif (where.length > 0) {\n\t\t\t\t\tresult = await this.offload([[this.id, other.id], this.find(where[0], true), !where[1] ? other.toArray(null, true) : other.find(where[1], true), this.key, on || this.key, type], \"join\");\n\t\t\t\t} else {\n\t\t\t\t\tresult = await this.offload([[this.id, other.id], this.toArray(null, true), other.toArray(null, true), this.key, on || this.key, type], \"join\");\n\t\t\t\t}\n\n\t\t\t\tif (typeof arg === \"string\") {\n\t\t\t\t\tthrow new Error(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresult = [];\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\tkeys () {\n\t\t\treturn this.data.keys();\n\t\t}\n\n\t\tlimit (offset = 0, max = 0, raw = false) {\n\t\t\tconst result = this.registry.slice(offset, offset + max).map(i => this.get(i, raw));\n\n\t\t\treturn raw ? result : this.list(...result);\n\t\t}\n\n\t\tlist (...args) {\n\t\t\treturn Object.freeze(args.map(i => Object.freeze(i)));\n\t\t}\n\n\t\tasync load (type = \"mongo\", key = undefined) {\n\t\t\tconst batch = key === undefined,\n\t\t\t\tid = !batch ? key : this.id;\n\t\t\tlet result;\n\n\t\t\tif (batch) {\n\t\t\t\tthis.clear();\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tconst data = await this.cmd(type, \"get\", key);\n\n\t\t\t\tresult = batch ? this.batch(data, \"set\", true) : this.set(key, data, true, true, true);\n\t\t\t\tthis.log(`Loaded ${id} from ${type} persistent storage`);\n\t\t\t} catch (e) {\n\t\t\t\tthis.log(`Error loading ${id} from ${type} persistent storage: ${e.message || e.stack || e}`, \"error\");\n\t\t\t\tthrow e;\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\tlog (arg = \"\", type = \"log\") {\n\t\t\tif (this.logging) {\n\t\t\t\tconsole[type](`haro: ${arg}`);\n\t\t\t}\n\t\t}\n\n\t\tmap (fn, raw = false) {\n\t\t\tconst result = [];\n\n\t\t\tthis.forEach((value, key) => result.push(fn(value, key)));\n\n\t\t\treturn raw ? result : this.list(...result);\n\t\t}\n\n\t\tasync offload (data, cmd = \"index\", index = this.index) {\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tif (this.worker) {\n\t\t\t\t\tconst obj = this.useWorker(resolve, reject);\n\t\t\t\t\tlet payload;\n\n\t\t\t\t\tif (cmd === \"index\") {\n\t\t\t\t\t\tpayload = {\n\t\t\t\t\t\t\tcmd: cmd,\n\t\t\t\t\t\t\tindex: index,\n\t\t\t\t\t\t\trecords: data,\n\t\t\t\t\t\t\tkey: this.key,\n\t\t\t\t\t\t\tdelimiter: this.delimiter,\n\t\t\t\t\t\t\tpattern: this.pattern\n\t\t\t\t\t\t};\n\t\t\t\t\t} else if (cmd === \"join\") {\n\t\t\t\t\t\tpayload = {\n\t\t\t\t\t\t\tcmd: cmd,\n\t\t\t\t\t\t\tids: data[0],\n\t\t\t\t\t\t\trecords: [data[1], data[2]],\n\t\t\t\t\t\t\tkey: data[3],\n\t\t\t\t\t\t\ton: data[4],\n\t\t\t\t\t\t\ttype: data[5]\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\tobj.postMessage(JSON.stringify(payload, null, 0));\n\t\t\t\t} else {\n\t\t\t\t\treject(new Error(webWorkerError));\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tonbatch () {}\n\n\t\tonclear () {}\n\n\t\tondelete () {}\n\n\t\tonerror () {}\n\n\t\tonrequest (arg) {\n\t\t\treturn arg;\n\t\t}\n\n\t\tonset () {}\n\n\t\tonsync () {}\n\n\t\tasync override (data, type = \"records\", fn = undefined) {\n\t\t\tconst result = true;\n\n\t\t\tif (type === \"indexes\") {\n\t\t\t\tthis.indexes = this.transform(data, fn);\n\t\t\t} else if (type === \"records\") {\n\t\t\t\tthis.data.clear();\n\t\t\t\tthis.indexes.clear();\n\t\t\t\teach(data, datum => this.data.set(this.key ? datum[this.key] : uuid() || uuid(), datum));\n\t\t\t\tthis.size = this.total = this.data.size;\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Invalid type\");\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\tregister (key, fn) {\n\t\t\tadapter[key] = fn;\n\n\t\t\treturn this;\n\t\t}\n\n\t\treindex (index) {\n\t\t\tconst indices = index ? [index] : this.index;\n\n\t\t\tif (index && this.index.includes(index) === false) {\n\t\t\t\tthis.index.push(index);\n\t\t\t}\n\n\t\t\teach(indices, i => this.indexes.set(i, new Map()));\n\t\t\tthis.forEach((data, key) => each(indices, i => setIndex(this.index, this.indexes, this.delimiter, key, data, i, this.pattern)));\n\n\t\t\treturn this;\n\t\t}\n\n\t\tasync request (input, config = {}) {\n\t\t\treturn new Promise(async (resolve, reject) => {\n\t\t\t\tconst cfg = merge(clone(this.config), config),\n\t\t\t\t\tref = [input, cfg],\n\t\t\t\t\theaders = {};\n\n\t\t\t\tcfg.method = cfg.method.toUpperCase();\n\n\t\t\t\tif (cfg.method === \"DELETE\") {\n\t\t\t\t\tdelete cfg.body;\n\t\t\t\t}\n\n\t\t\t\tthis.beforeRequest(...ref);\n\n\t\t\t\ttry {\n\t\t\t\t\tconst res = await fetch(input, cfg),\n\t\t\t\t\t\tok = res.ok,\n\t\t\t\t\t\tstatus = res.status;\n\n\t\t\t\t\tif (res.headers._headers) {\n\t\t\t\t\t\teach(Object.keys(res.headers._headers), i => {\n\t\t\t\t\t\t\theaders[i] = res.headers._headers[i].join(\", \");\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (const pair of res.headers.entries()) {\n\t\t\t\t\t\t\theaders[pair[0]] = pair[1];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tconst arg = await res[regex.json.test(headers[\"content-type\"] || \"\") ? \"json\" : \"text\"](),\n\t\t\t\t\t\tnext = ok ? resolve : reject;\n\n\t\t\t\t\tnext(this.list(this.onrequest(arg, status, headers), status, headers));\n\t\t\t\t} catch (e) {\n\t\t\t\t\treject(this.list(e.message, 0, {}));\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tasync save (type = \"mongo\") {\n\t\t\tlet result;\n\n\t\t\ttry {\n\t\t\t\tresult = await this.cmd(type, \"set\");\n\t\t\t\tthis.log(`Saved ${this.id} to ${type} persistent storage`);\n\t\t\t} catch (e) {\n\t\t\t\tthis.log(`Error saving ${this.id} to ${type} persistent storage: ${e.message || e.stack || e}`, \"error\");\n\t\t\t\tthrow e;\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\tsearch (value, index, raw = false) {\n\t\t\tconst result = new Map(),\n\t\t\t\tfn = typeof value === \"function\",\n\t\t\t\trgex = value && typeof value.test === \"function\";\n\n\t\t\tif (value) {\n\t\t\t\teach(index ? Array.isArray(index) ? index : [index] : this.index, i => {\n\t\t\t\t\tlet idx = this.indexes.get(i);\n\n\t\t\t\t\tif (idx) {\n\t\t\t\t\t\tidx.forEach((lset, lkey) => {\n\t\t\t\t\t\t\tswitch (true) {\n\t\t\t\t\t\t\t\tcase fn && value(lkey, i):\n\t\t\t\t\t\t\t\tcase rgex && value.test(Array.isArray(lkey) ? lkey.join(\", \") : lkey):\n\t\t\t\t\t\t\t\tcase lkey === value:\n\t\t\t\t\t\t\t\t\tlset.forEach(key => {\n\t\t\t\t\t\t\t\t\t\tif (!result.has(key) && this.has(key)) {\n\t\t\t\t\t\t\t\t\t\t\tresult.set(key, this.get(key, raw));\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tvoid 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn raw ? Array.from(result.values()) : this.list(...Array.from(result.values()));\n\t\t}\n\n\t\tasync set (key, data, batch = false, override = false, lazyLoad = false, retry = false) {\n\t\t\tlet x = clone(data),\n\t\t\t\tmethod, og;\n\n\t\t\treturn this.exec(async () => {\n\t\t\t\tif (key === undefined || key === null) {\n\t\t\t\t\tkey = this.key && x[this.key] !== undefined ? x[this.key] : uuid();\n\t\t\t\t}\n\n\t\t\t\tthis.beforeSet(key, data, batch, override, lazyLoad, retry);\n\n\t\t\t\tif (!this.data.has(key)) {\n\t\t\t\t\t++this.total;\n\t\t\t\t\tthis.size = this.total;\n\t\t\t\t\tmethod = \"post\";\n\n\t\t\t\t\tif (this.versioning) {\n\t\t\t\t\t\tthis.versions.set(key, new Set());\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tog = this.get(key, true);\n\t\t\t\t\tdelIndex(this.index, this.indexes, this.delimiter, key, og, this.pattern);\n\t\t\t\t\tmethod = \"put\";\n\n\t\t\t\t\tif (this.versioning) {\n\t\t\t\t\t\tthis.versions.get(key).add(Object.freeze(clone(og)));\n\t\t\t\t\t}\n\n\t\t\t\t\tif (override === false) {\n\t\t\t\t\t\tx = merge(clone(og), x);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.data.set(key, x);\n\t\t\t\tsetIndex(this.index, this.indexes, this.delimiter, key, x, null, this.pattern);\n\n\t\t\t\treturn this.get(key);\n\t\t\t}, async arg => {\n\t\t\t\tthis.onset(arg, batch, retry, lazyLoad);\n\n\t\t\t\tif (!lazyLoad) {\n\t\t\t\t\tthis.storage(\"set\", key, x).then(success => {\n\t\t\t\t\t\tif (success) {\n\t\t\t\t\t\t\tthis.log(`Saved ${key} to persistent storage`);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, e => this.log(`Error saving ${key} to persistent storage: ${e.message || e.stack || e}`, \"error\"));\n\n\t\t\t\t\tif (!batch && !retry && this.uri) {\n\t\t\t\t\t\tif (this.debounced.has(key)) {\n\t\t\t\t\t\t\tclearTimeout(this.debounced.get(key));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.debounced.set(key, setTimeout(async () => {\n\t\t\t\t\t\t\tthis.debounced.delete(key);\n\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tawait this.transmit(key, x, og, override, method);\n\n\t\t\t\t\t\t\t\tif (og) {\n\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\tawait this.set(key, og, batch, true, lazyLoad, true);\n\t\t\t\t\t\t\t\t\t\tthis.log(`Reverted ${key}`);\n\t\t\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\t\t\tthis.log(`Failed to revert ${key}`);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\tawait this.del(key, true);\n\t\t\t\t\t\t\t\t\t\tthis.log(`Reverted ${key}`);\n\t\t\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\t\t\tthis.log(`Failed to revert ${key}`);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\tthis.log(e.stack || e.message || e, \"error\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, this.debounce));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn arg;\n\t\t\t}, err => {\n\t\t\t\tthis.onerror(\"set\", err);\n\t\t\t\tthrow err;\n\t\t\t});\n\t\t}\n\n\t\tasync setUri (uri, clear = false) {\n\t\t\tthis.uri = uri;\n\n\t\t\treturn this.uri !== \"\" ? await this.sync(clear) : [];\n\t\t}\n\n\t\tsort (fn, frozen = true) {\n\t\t\treturn frozen ? Object.freeze(this.limit(0, this.total, true).sort(fn).map(i => Object.freeze(i))) : this.limit(0, this.total, true).sort(fn);\n\t\t}\n\n\t\tsortBy (index, raw = false) {\n\t\t\tconst result = [],\n\t\t\t\tkeys = [];\n\n\t\t\tlet lindex;\n\n\t\t\tif (!this.indexes.has(index)) {\n\t\t\t\tthis.reindex(index);\n\t\t\t}\n\n\t\t\tlindex = this.indexes.get(index);\n\t\t\tlindex.forEach((idx, key) => keys.push(key));\n\t\t\teach(keys.sort(), i => lindex.get(i).forEach(key => result.push(this.get(key, raw))));\n\n\t\t\treturn raw ? result : this.list(...result);\n\t\t}\n\n\t\tasync storage (...args) {\n\t\t\tlet result;\n\n\t\t\ttry {\n\t\t\t\tconst deferreds = Object.keys(this.adapters).map(async i => await this.cmd.apply(this, [i, ...args]));\n\n\t\t\t\tif (deferreds.length > 0) {\n\t\t\t\t\tawait Promise.all(deferreds);\n\t\t\t\t\tresult = true;\n\t\t\t\t} else {\n\t\t\t\t\tresult = false;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tthis.log(e.stack || e.message || e, \"error\");\n\t\t\t\tthrow e;\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\tasync sync (clear = false) {\n\t\t\tlet result;\n\n\t\t\tthis.beforeSync(this.uri, clear);\n\n\t\t\ttry {\n\t\t\t\tconst arg = await this.request(this.uri),\n\t\t\t\t\tdata = this.source ? this.crawl(arg[0]) : arg[0];\n\n\t\t\t\tthis.patch = (arg[2].Allow || arg[2].allow || \"\").includes(\"PATCH\");\n\n\t\t\t\tif (clear) {\n\t\t\t\t\tthis.clear();\n\t\t\t\t}\n\n\t\t\t\tresult = await this.batch(data, \"set\");\n\t\t\t\tthis.onsync(result);\n\t\t\t} catch (e) {\n\t\t\t\tthis.onerror(\"sync\", e[0] || e);\n\t\t\t\tthrow e[0] || e;\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\ttoArray (data, frozen = true) {\n\t\t\tlet result;\n\n\t\t\tif (data) {\n\t\t\t\tresult = data.map(i => frozen ? i[1] : clone(i[1]));\n\t\t\t} else {\n\t\t\t\tresult = this.limit(0, this.total, true);\n\n\t\t\t\tif (frozen) {\n\t\t\t\t\teach(result, i => Object.freeze(i));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn frozen ? Object.freeze(result) : result;\n\t\t}\n\n\t\ttoObject (data, frozen = true) {\n\t\t\tconst result = !data ? toObjekt(this, frozen) : data.reduce((a, b) => {\n\t\t\t\tconst obj = clone(b[1]);\n\n\t\t\t\tif (frozen) {\n\t\t\t\t\tObject.freeze(obj);\n\t\t\t\t}\n\n\t\t\t\ta[b[0]] = obj;\n\n\t\t\t\treturn a;\n\t\t\t}, {});\n\n\t\t\treturn frozen ? Object.freeze(result) : result;\n\t\t}\n\n\t\ttransform (input, fn) {\n\t\t\treturn typeof fn === \"function\" ? fn(input) : cast(input);\n\t\t}\n\n\t\tasync transmit (key, data, og, override = false, method = \"post\") {\n\t\t\tconst uri = concatURI(this.uri, data ? key : null);\n\n\t\t\tlet body, result;\n\n\t\t\tif (this.patch) {\n\t\t\t\tif (data === void 0) {\n\t\t\t\t\tbody = [{op: \"remove\", path: \"/\", value: key}];\n\t\t\t\t} else if (og === void 0) {\n\t\t\t\t\tbody = [{op: \"add\", path: \"/\", value: data}];\n\t\t\t\t} else if (override) {\n\t\t\t\t\tbody = [{op: \"replace\", path: \"/\", value: data}];\n\t\t\t\t} else {\n\t\t\t\t\tbody = createPatch(og, data, this.key);\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tresult = await this.request(uri, {method: \"patch\", body: JSON.stringify(body, null, 0)});\n\t\t\t\t} catch (e) {\n\t\t\t\t\tif (e[1] === 405) {\n\t\t\t\t\t\tthis.patch = false;\n\t\t\t\t\t\tresult = await this.request(!data ? concatURI(this.uri, key) : uri, {\n\t\t\t\t\t\t\tmethod: method,\n\t\t\t\t\t\t\tbody: JSON.stringify(data, null, 0)\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresult = await this.request(uri, {method: method, body: JSON.stringify(data, null, 0)});\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\tasync unload (type = \"mongo\", key = undefined) {\n\t\t\tconst id = key !== undefined ? key : this.id;\n\t\t\tlet result;\n\n\t\t\ttry {\n\t\t\t\tresult = await this.cmd(type, \"remove\", key);\n\t\t\t\tthis.log(`Unloaded ${id} from ${type} persistent storage`);\n\t\t\t} catch (e) {\n\t\t\t\tthis.log(`Error unloading ${id} from ${type} persistent storage: ${e.message || e.stack || e}`, \"error\");\n\t\t\t\tthrow e;\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\tunregister (key) {\n\t\t\tdelete adapter[key];\n\t\t}\n\n\t\tvalues () {\n\t\t\treturn this.data.values();\n\t\t}\n\n\t\tuseWorker (resolve, reject) {\n\t\t\tlet obj;\n\n\t\t\tif (this.worker) {\n\t\t\t\tobj = new Worker(this.worker);\n\n\t\t\t\tobj.onerror = err => {\n\t\t\t\t\treject(err);\n\t\t\t\t\tobj.terminate();\n\t\t\t\t};\n\n\t\t\t\tobj.onmessage = ev => {\n\t\t\t\t\tresolve(JSON.parse(ev.data));\n\t\t\t\t\tobj.terminate();\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treject(new Error(webWorkerError));\n\t\t\t}\n\n\t\t\treturn obj;\n\t\t}\n\t}\n\n\tfunction factory (data = null, config = {}) {\n\t\tconst obj = new Haro(config);\n\n\t\tif (webWorker) {\n\t\t\tobj.worker = node === false ? global.URL.createObjectURL(blob(functions)) : new Function(functions);\n\t\t}\n\n\t\tif (Array.isArray(data)) {\n\t\t\tobj.batch(data, \"set\");\n\t\t}\n\n\t\treturn obj;\n\t}\n\n\tfactory.transform = cast;\n\tfactory.version = \"4.1.0\";\n\n\t// Node, AMD & window supported\n\tif (typeof exports !== \"undefined\") {\n\t\tmodule.exports = factory;\n\t} else if (typeof define === \"function\" && define.amd !== void 0) {\n\t\tdefine(() => factory);\n\t} else {\n\t\tglobal.haro = factory;\n\t}\n}(typeof window !== \"undefined\" ? window : global));\n"]}