{"version":3,"file":"haro.umd.min.js","sources":["../src/constants.js","../src/uuid.js","../src/haro.js"],"sourcesContent":["export const STRING_COMMA = \",\";\nexport const STRING_EMPTY = \"\";\nexport const STRING_PIPE = \"|\";\nexport const STRING_DOUBLE_PIPE = \"||\";\nexport const STRING_A = \"a\";\nexport const STRING_B = \"b\";\nexport const STRING_DEL = \"del\";\nexport const STRING_FUNCTION = \"function\";\nexport const STRING_INDEXES = \"indexes\";\nexport const STRING_INVALID_FIELD = \"Invalid field\";\nexport const STRING_INVALID_FUNCTION = \"Invalid function\";\nexport const STRING_INVALID_TYPE = \"Invalid type\";\nexport const STRING_OBJECT = \"object\";\nexport const STRING_RECORD_NOT_FOUND = \"Record not found\";\nexport const STRING_RECORDS = \"records\";\nexport const STRING_REGISTRY = \"registry\";\nexport const STRING_SET = \"set\";\nexport const STRING_SIZE = \"size\";\nexport const INT_0 = 0;\nexport const INT_1 = 1;\nexport const INT_3 = 3;\nexport const INT_4 = 4;\nexport const INT_8 = 8;\nexport const INT_9 = 9;\nexport const INT_16 = 16;\n","import {INT_0, INT_1, INT_16, INT_3, INT_4, INT_8, INT_9, STRING_A, STRING_B, STRING_OBJECT} from \"./constants.js\";\n\n/* istanbul ignore next */\nconst r = [INT_8, INT_9, STRING_A, STRING_B];\n\n/* istanbul ignore next */\nfunction s () {\n\treturn ((Math.random() + INT_1) * 0x10000 | INT_0).toString(INT_16).substring(INT_1);\n}\n\n/* istanbul ignore next */\nfunction randomUUID () {\n\treturn `${s()}${s()}-${s()}-4${s().slice(INT_0, INT_3)}-${r[Math.floor(Math.random() * INT_4)]}${s().slice(INT_0, INT_3)}-${s()}${s()}${s()}`;\n}\n\nexport const uuid = typeof crypto === STRING_OBJECT ? crypto.randomUUID.bind(crypto) : randomUUID;\n","import {uuid} from \"./uuid.js\";\nimport {\n\tINT_0,\n\tSTRING_A,\n\tSTRING_COMMA,\n\tSTRING_DEL,\n\tSTRING_DOUBLE_PIPE,\n\tSTRING_EMPTY,\n\tSTRING_FUNCTION,\n\tSTRING_INDEXES,\n\tSTRING_INVALID_FIELD,\n\tSTRING_INVALID_FUNCTION,\n\tSTRING_INVALID_TYPE,\n\tSTRING_PIPE,\n\tSTRING_RECORD_NOT_FOUND,\n\tSTRING_RECORDS,\n\tSTRING_REGISTRY,\n\tSTRING_SET,\n\tSTRING_SIZE\n} from \"./constants.js\";\n\nexport class Haro {\n\tconstructor ({delimiter = STRING_PIPE, id = this.uuid(), index = [], key = \"id\", versioning = false} = {}) {\n\t\tthis.data = new Map();\n\t\tthis.delimiter = delimiter;\n\t\tthis.id = id;\n\t\tthis.index = Array.isArray(index) ? [...index] : [];\n\t\tthis.indexes = new Map();\n\t\t// Initialize indexes Map for each index key\n\t\tfor (const idx of this.index) {\n\t\t\tthis.indexes.set(idx, new Map());\n\t\t}\n\t\tthis.key = key;\n\t\tthis.versions = new Map();\n\t\tthis.versioning = versioning;\n\n\t\tObject.defineProperty(this, STRING_REGISTRY, {\n\t\t\tenumerable: true,\n\t\t\tget: () => Array.from(this.data.keys())\n\t\t});\n\n\t\tObject.defineProperty(this, STRING_SIZE, {\n\t\t\tenumerable: true,\n\t\t\tget: () => this.data.size\n\t\t});\n\n\t\treturn this.reindex();\n\t}\n\n\tbatch (args, type = STRING_SET) {\n\t\tconst fn = type === STRING_DEL ? i => this.del(i, true) : i => this.set(null, i, true, true);\n\n\t\treturn this.onbatch(this.beforeBatch(args, type).map(fn), type);\n\t}\n\n\tbeforeBatch (arg, type = STRING_EMPTY) { // eslint-disable-line no-unused-vars\n\t\treturn arg;\n\t}\n\n\tbeforeClear () {\n\t\t// Hook for custom logic before clear; override in subclass if needed\n\t}\n\n\tbeforeDelete (key = STRING_EMPTY, batch = false) {\n\t\treturn [key, batch];\n\t}\n\n\tbeforeSet (key = STRING_EMPTY, batch = false) {\n\t\treturn [key, batch];\n\t}\n\n\tclear () {\n\t\tthis.beforeClear();\n\t\tthis.data.clear();\n\t\tthis.indexes.clear();\n\t\tthis.versions.clear();\n\t\tthis.reindex().onclear();\n\n\t\treturn this;\n\t}\n\n\tclone (arg) {\n\t\treturn JSON.parse(JSON.stringify(arg, null, INT_0));\n\t}\n\n\tdel (key = STRING_EMPTY, batch = false) {\n\t\tif (this.data.has(key) === false) {\n\t\t\tthrow new Error(STRING_RECORD_NOT_FOUND);\n\t\t}\n\n\t\tconst og = this.get(key, true);\n\n\t\tthis.beforeDelete(key, batch);\n\t\tthis.delIndex(this.index, this.indexes, this.delimiter, key, og);\n\t\tthis.data.delete(key);\n\t\tthis.ondelete(key, batch);\n\n\t\tif (this.versioning) {\n\t\t\tthis.versions.delete(key);\n\t\t}\n\t}\n\n\tdelIndex (index, indexes, delimiter, key, data) {\n\t\tindex.forEach(i => {\n\t\t\tconst idx = indexes.get(i);\n\n\t\t\tif (!idx) return;\n\t\t\tthis.each(i.includes(delimiter) ? this.indexKeys(i, delimiter, data) : Array.isArray(data[i]) ? data[i] : [data[i]], value => {\n\t\t\t\tif (idx.has(value)) {\n\t\t\t\t\tconst o = idx.get(value);\n\n\t\t\t\t\to.delete(key);\n\n\t\t\t\t\tif (o.size === INT_0) {\n\t\t\t\t\t\tidx.delete(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tdump (type = STRING_RECORDS) {\n\t\tlet result;\n\n\t\tif (type === STRING_RECORDS) {\n\t\t\tresult = Array.from(this.entries());\n\t\t} else {\n\t\t\tresult = Array.from(this.indexes).map(i => {\n\t\t\t\ti[1] = Array.from(i[1]).map(ii => {\n\t\t\t\t\tii[1] = Array.from(ii[1]);\n\n\t\t\t\t\treturn ii;\n\t\t\t\t});\n\n\t\t\t\treturn i;\n\t\t\t});\n\t\t}\n\n\t\treturn result;\n\t}\n\n\teach (arr = [], fn) {\n\t\tfor (const [idx, value] of arr.entries()) {\n\t\t\tfn(value, idx);\n\t\t}\n\n\t\treturn arr;\n\t}\n\n\tentries () {\n\t\treturn this.data.entries();\n\t}\n\n\tfind (where = {}, raw = false) {\n\t\tconst key = Object.keys(where).sort((a, b) => a.localeCompare(b)).join(this.delimiter),\n\t\t\tindex = this.indexes.get(key) ?? new Map();\n\t\tlet result = [];\n\n\t\tif (index.size > 0) {\n\t\t\tconst keys = this.indexKeys(key, this.delimiter, where);\n\n\t\t\tresult = Array.from(keys.reduce((a, v) => {\n\t\t\t\tif (index.has(v)) {\n\t\t\t\t\tindex.get(v).forEach(k => a.add(k));\n\t\t\t\t}\n\n\t\t\t\treturn a;\n\t\t\t}, new Set())).map(i => this.get(i, raw));\n\t\t}\n\n\t\treturn raw ? result : this.list(...result);\n\t}\n\n\tfilter (fn, raw = false) {\n\t\tif (typeof fn !== STRING_FUNCTION) {\n\t\t\tthrow new Error(STRING_INVALID_FUNCTION);\n\t\t}\n\n\t\tconst x = raw ? (k, v) => v : (k, v) => Object.freeze([k, Object.freeze(v)]),\n\t\t\tresult = this.reduce((a, v, k, ctx) => {\n\t\t\t\tif (fn.call(ctx, v)) {\n\t\t\t\t\ta.push(x(k, v));\n\t\t\t\t}\n\n\t\t\t\treturn a;\n\t\t\t}, []);\n\n\t\treturn raw ? result : Object.freeze(result);\n\t}\n\n\tforEach (fn, ctx) {\n\t\tthis.data.forEach((value, key) => fn(this.clone(value), this.clone(key)), ctx ?? this.data);\n\n\t\treturn this;\n\t}\n\n\tget (key, raw = false) {\n\t\tconst result = this.clone(this.data.get(key) ?? null);\n\n\t\treturn raw ? result : this.list(key, result);\n\t}\n\n\thas (key) {\n\t\treturn this.data.has(key);\n\t}\n\n\tindexKeys (arg = STRING_EMPTY, delimiter = STRING_PIPE, data = {}) {\n\t\treturn arg.split(delimiter).reduce((a, li, lidx) => {\n\t\t\tconst result = [];\n\n\t\t\t(Array.isArray(data[li]) ? data[li] : [data[li]]).forEach(lli => lidx === INT_0 ? result.push(lli) : a.forEach(x => result.push(`${x}${delimiter}${lli}`)));\n\n\t\t\treturn result;\n\t\t}, []);\n\t}\n\n\tkeys () {\n\t\treturn this.data.keys();\n\t}\n\n\tlimit (offset = INT_0, max = INT_0, raw = false) {\n\t\tconst result = this.registry.slice(offset, offset + max).map(i => this.get(i, raw));\n\n\t\treturn raw ? result : this.list(...result);\n\t}\n\n\tlist (...args) {\n\t\treturn Object.freeze(args.map(i => Object.freeze(i)));\n\t}\n\n\tmap (fn, raw = false) {\n\t\tif (typeof fn !== STRING_FUNCTION) {\n\t\t\tthrow new Error(STRING_INVALID_FUNCTION);\n\t\t}\n\n\t\tconst result = [];\n\n\t\tthis.forEach((value, key) => result.push(fn(value, key)));\n\n\t\treturn raw ? result : this.list(...result);\n\t}\n\n\tmerge (a, b, override = false) {\n\t\tif (Array.isArray(a) && Array.isArray(b)) {\n\t\t\ta = override ? b : a.concat(b);\n\t\t} else if (typeof a === \"object\" && a !== null && typeof b === \"object\" && b !== null) {\n\t\t\tthis.each(Object.keys(b), i => {\n\t\t\t\ta[i] = this.merge(a[i], b[i], override);\n\t\t\t});\n\t\t} else {\n\t\t\ta = b;\n\t\t}\n\n\t\treturn a;\n\t}\n\n\tonbatch (arg, type = STRING_EMPTY) { // eslint-disable-line no-unused-vars\n\t\treturn arg;\n\t}\n\n\tonclear () {\n\t\t// Hook for custom logic after clear; override in subclass if needed\n\t}\n\n\tondelete (key = STRING_EMPTY, batch = false) {\n\t\treturn [key, batch];\n\t}\n\n\tonoverride (type = STRING_EMPTY) {\n\t\treturn type;\n\t}\n\n\tonset (arg = {}, batch = false) {\n\t\treturn [arg, batch];\n\t}\n\n\toverride (data, type = STRING_RECORDS) {\n\t\tconst result = true;\n\n\t\tif (type === STRING_INDEXES) {\n\t\t\tthis.indexes = new Map(data.map(i => [i[0], new Map(i[1].map(ii => [ii[0], new Set(ii[1])]))]));\n\t\t} else if (type === STRING_RECORDS) {\n\t\t\tthis.indexes.clear();\n\t\t\tthis.data = new Map(data);\n\t\t} else {\n\t\t\tthrow new Error(STRING_INVALID_TYPE);\n\t\t}\n\n\t\tthis.onoverride(type);\n\n\t\treturn result;\n\t}\n\n\treduce (fn, accumulator, raw = false) {\n\t\tlet a = accumulator ?? this.data.keys().next().value;\n\n\t\tthis.forEach((v, k) => {\n\t\t\ta = fn(a, v, k, this, raw);\n\t\t}, this);\n\n\t\treturn a;\n\t}\n\n\treindex (index) {\n\t\tconst indices = index ? [index] : this.index;\n\n\t\tif (index && this.index.includes(index) === false) {\n\t\t\tthis.index.push(index);\n\t\t}\n\n\t\tthis.each(indices, i => this.indexes.set(i, new Map()));\n\t\tthis.forEach((data, key) => this.each(indices, i => this.setIndex(this.index, this.indexes, this.delimiter, key, data, i)));\n\n\t\treturn this;\n\t}\n\n\tsearch (value, index, raw = false) {\n\t\tconst result = new Map(),\n\t\t\tfn = typeof value === STRING_FUNCTION,\n\t\t\trgex = value && typeof value.test === STRING_FUNCTION;\n\n\t\tif (value) {\n\t\t\tthis.each(index ? Array.isArray(index) ? index : [index] : this.index, i => {\n\t\t\t\tlet idx = this.indexes.get(i);\n\n\t\t\t\tif (idx) {\n\t\t\t\t\tidx.forEach((lset, lkey) => {\n\t\t\t\t\t\tswitch (true) {\n\t\t\t\t\t\t\tcase fn && value(lkey, i):\n\t\t\t\t\t\t\tcase rgex && value.test(Array.isArray(lkey) ? lkey.join(STRING_COMMA) : lkey):\n\t\t\t\t\t\t\tcase lkey === value:\n\t\t\t\t\t\t\t\tlset.forEach(key => {\n\t\t\t\t\t\t\t\t\tif (result.has(key) === false && this.data.has(key)) {\n\t\t\t\t\t\t\t\t\t\tresult.set(key, this.get(key, raw));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tvoid 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn raw ? Array.from(result.values()) : this.list(...Array.from(result.values()));\n\t}\n\n\tset (key = null, data = {}, batch = false, override = false) {\n\t\tif (key === null) {\n\t\t\tkey = data[this.key] ?? this.uuid();\n\t\t}\n\n\t\tlet x = this.key ? { ...data, [this.key]: key } : { ...data };\n\n\t\tthis.beforeSet(key, x, batch, override);\n\n\t\tif (this.data.has(key) === false) {\n\t\t\tif (this.versioning) {\n\t\t\t\tthis.versions.set(key, new Set());\n\t\t\t}\n\t\t} else {\n\t\t\tlet og = this.get(key, true);\n\t\t\tthis.delIndex(this.index, this.indexes, this.delimiter, key, og);\n\n\t\t\tif (this.versioning) {\n\t\t\t\tthis.versions.get(key).add(Object.freeze(this.clone(og)));\n\t\t\t}\n\n\t\t\tif (override === false) {\n\t\t\t\tx = this.merge(this.clone(og), x);\n\t\t\t}\n\t\t}\n\n\t\tthis.data.set(key, x);\n\t\tthis.setIndex(this.index, this.indexes, this.delimiter, key, x, null);\n\t\tlet result = this.get(key);\n\t\tthis.onset(result, batch);\n\n\t\treturn result;\n\t}\n\n\tsetIndex (index, indexes, delimiter, key, data, indice) {\n\t\tthis.each(indice === null ? index : [indice], i => {\n\t\t\tlet lindex = indexes.get(i);\n\n\t\t\tif (!lindex) {\n\t\t\t\tlindex = new Map();\n\t\t\t\tindexes.set(i, lindex);\n\t\t\t}\n\t\t\tif (i.includes(delimiter)) {\n\t\t\t\tthis.each(this.indexKeys(i, delimiter, data), c => {\n\t\t\t\t\tif (lindex.has(c) === false) {\n\t\t\t\t\t\tlindex.set(c, new Set());\n\t\t\t\t\t}\n\t\t\t\t\tlindex.get(c).add(key);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.each(Array.isArray(data[i]) ? data[i] : [data[i]], d => {\n\t\t\t\t\tif (lindex.has(d) === false) {\n\t\t\t\t\t\tlindex.set(d, new Set());\n\t\t\t\t\t}\n\t\t\t\t\tlindex.get(d).add(key);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tsort (fn, frozen = true) {\n\t\treturn frozen ? Object.freeze(this.limit(INT_0, this.data.size, true).sort(fn).map(i => Object.freeze(i))) : this.limit(INT_0, this.data.size, true).sort(fn);\n\t}\n\n\tsortBy (index = STRING_EMPTY, raw = false) {\n\t\tif (index === STRING_EMPTY) {\n\t\t\tthrow new Error(STRING_INVALID_FIELD);\n\t\t}\n\n\t\tconst result = [],\n\t\t\tkeys = [];\n\n\t\tif (this.indexes.has(index) === false) {\n\t\t\tthis.reindex(index);\n\t\t}\n\n\t\tconst lindex = this.indexes.get(index);\n\n\t\tlindex.forEach((idx, key) => keys.push(key));\n\t\tthis.each(keys.sort(), i => lindex.get(i).forEach(key => result.push(this.get(key, raw))));\n\n\t\treturn raw ? result : this.list(...result);\n\t}\n\n\ttoArray (frozen = true) {\n\t\tconst result = Array.from(this.data.values());\n\n\t\tif (frozen) {\n\t\t\tthis.each(result, i => Object.freeze(i));\n\t\t\tObject.freeze(result);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tuuid () {\n\t\treturn uuid();\n\t}\n\n\tvalues () {\n\t\treturn this.data.values();\n\t}\n\n\twhere (predicate = {}, raw = false, op = STRING_DOUBLE_PIPE) {\n\t\tconst keys = this.index.filter(i => i in predicate);\n\n\t\treturn keys.length > INT_0 ? this.filter(new Function(STRING_A, `return (${keys.map(i => {\n\t\t\tlet result;\n\n\t\t\tif (Array.isArray(predicate[i])) {\n\t\t\t\tresult = `Array.isArray(a['${i}']) ? ${predicate[i].map(arg => `a['${i}'].includes(${typeof arg === \"string\" ? `'${arg}'` : arg})`).join(` ${op} `)} : (${predicate[i].map(arg => `a['${i}'] === ${typeof arg === \"string\" ? `'${arg}'` : arg}`).join(` ${op} `)})`;\n\t\t\t} else if (predicate[i] instanceof RegExp) {\n\t\t\t\tresult = `Array.isArray(a['${i}']) ? a['${i}'].filter(i => ${predicate[i]}.test(a['${i}'])).length > 0 : ${predicate[i]}.test(a['${i}'])`;\n\t\t\t} else {\n\t\t\t\tconst arg = typeof predicate[i] === \"string\" ? `'${predicate[i]}'` : predicate[i];\n\n\t\t\t\tresult = `Array.isArray(a['${i}']) ? a['${i}'].includes(${arg}) : a['${i}'] === ${arg}`;\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}).join(\") && (\")});`), raw) : [];\n\t}\n}\n\nexport function haro (data = null, config = {}) {\n\tconst obj = new Haro(config);\n\n\tif (Array.isArray(data)) {\n\t\tobj.batch(data, STRING_SET);\n\t}\n\n\treturn obj;\n}\n"],"names":["STRING_EMPTY","STRING_FUNCTION","STRING_INVALID_FUNCTION","STRING_RECORDS","r","s","Math","random","toString","substring","uuid","crypto","randomUUID","bind","slice","floor","Haro","constructor","delimiter","id","this","index","key","versioning","data","Map","Array","isArray","indexes","idx","set","versions","Object","defineProperty","enumerable","get","from","keys","size","reindex","batch","args","type","fn","i","del","onbatch","beforeBatch","map","arg","beforeClear","beforeDelete","beforeSet","clear","onclear","clone","JSON","parse","stringify","has","Error","og","delIndex","delete","ondelete","forEach","each","includes","indexKeys","value","o","dump","result","entries","ii","arr","find","where","raw","sort","a","b","localeCompare","join","reduce","v","k","add","Set","list","filter","x","freeze","ctx","call","push","split","li","lidx","lli","limit","offset","max","registry","merge","override","concat","onoverride","onset","accumulator","next","indices","setIndex","search","rgex","test","lset","lkey","values","indice","lindex","c","d","frozen","sortBy","toArray","predicate","op","length","Function","RegExp","exports","haro","config","obj"],"mappings":"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"}