/*!
 2025 Jason Mulligan <jason.mulligan@avoidwork.com>
 @version 15.2.5
*/
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).lru={})}(this,(function(e){"use strict";const t="",s="function",i="Invalid function",r="records",n=[8,9,"a","b"];function a(){return(65536*(Math.random()+1)|0).toString(16).substring(1)}const h="object"==typeof crypto?crypto.randomUUID.bind(crypto):function(){return`${a()}${a()}-${a()}-4${a().slice(0,3)}-${n[Math.floor(4*Math.random())]}${a().slice(0,3)}-${a()}${a()}${a()}`};class o{constructor({delimiter:e="|",id:t=this.uuid(),index:s=[],key:i="id",versioning:r=!1}={}){this.data=new Map,this.delimiter=e,this.id=t,this.index=Array.isArray(s)?[...s]:[],this.indexes=new Map;for(const e of this.index)this.indexes.set(e,new Map);return this.key=i,this.versions=new Map,this.versioning=r,Object.defineProperty(this,"registry",{enumerable:!0,get:()=>Array.from(this.data.keys())}),Object.defineProperty(this,"size",{enumerable:!0,get:()=>this.data.size}),this.reindex()}batch(e,t="set"){const s="del"===t?e=>this.del(e,!0):e=>this.set(null,e,!0,!0);return this.onbatch(this.beforeBatch(e,t).map(s),t)}beforeBatch(e,t=""){return e}beforeClear(){}beforeDelete(e="",t=!1){return[e,t]}beforeSet(e="",t=!1){return[e,t]}clear(){return this.beforeClear(),this.data.clear(),this.indexes.clear(),this.versions.clear(),this.reindex().onclear(),this}clone(e){return JSON.parse(JSON.stringify(e,null,0))}del(e="",t=!1){if(!1===this.data.has(e))throw new Error("Record not found");const s=this.get(e,!0);this.beforeDelete(e,t),this.delIndex(this.index,this.indexes,this.delimiter,e,s),this.data.delete(e),this.ondelete(e,t),this.versioning&&this.versions.delete(e)}delIndex(e,t,s,i,r){e.forEach((e=>{const n=t.get(e);n&&this.each(e.includes(s)?this.indexKeys(e,s,r):Array.isArray(r[e])?r[e]:[r[e]],(e=>{if(n.has(e)){const t=n.get(e);t.delete(i),0===t.size&&n.delete(e)}}))}))}dump(e=r){let t;return t=e===r?Array.from(this.entries()):Array.from(this.indexes).map((e=>(e[1]=Array.from(e[1]).map((e=>(e[1]=Array.from(e[1]),e))),e))),t}each(e=[],t){for(const[s,i]of e.entries())t(i,s);return e}entries(){return this.data.entries()}find(e={},t=!1){const s=Object.keys(e).sort(((e,t)=>e.localeCompare(t))).join(this.delimiter),i=this.indexes.get(s)??new Map;let r=[];if(i.size>0){const n=this.indexKeys(s,this.delimiter,e);r=Array.from(n.reduce(((e,t)=>(i.has(t)&&i.get(t).forEach((t=>e.add(t))),e)),new Set)).map((e=>this.get(e,t)))}return t?r:this.list(...r)}filter(e,t=!1){if(typeof e!==s)throw new Error(i);const r=t?(e,t)=>t:(e,t)=>Object.freeze([e,Object.freeze(t)]),n=this.reduce(((t,s,i,n)=>(e.call(n,s)&&t.push(r(i,s)),t)),[]);return t?n:Object.freeze(n)}forEach(e,t){return this.data.forEach(((t,s)=>e(this.clone(t),this.clone(s))),t??this.data),this}get(e,t=!1){const s=this.clone(this.data.get(e)??null);return t?s:this.list(e,s)}has(e){return this.data.has(e)}indexKeys(e="",t="|",s={}){return e.split(t).reduce(((e,i,r)=>{const n=[];return(Array.isArray(s[i])?s[i]:[s[i]]).forEach((s=>0===r?n.push(s):e.forEach((e=>n.push(`${e}${t}${s}`))))),n}),[])}keys(){return this.data.keys()}limit(e=0,t=0,s=!1){const i=this.registry.slice(e,e+t).map((e=>this.get(e,s)));return s?i:this.list(...i)}list(...e){return Object.freeze(e.map((e=>Object.freeze(e))))}map(e,t=!1){if(typeof e!==s)throw new Error(i);const r=[];return this.forEach(((t,s)=>r.push(e(t,s)))),t?r:this.list(...r)}merge(e,t,s=!1){return Array.isArray(e)&&Array.isArray(t)?e=s?t:e.concat(t):"object"==typeof e&&null!==e&&"object"==typeof t&&null!==t?this.each(Object.keys(t),(i=>{e[i]=this.merge(e[i],t[i],s)})):e=t,e}onbatch(e,t=""){return e}onclear(){}ondelete(e="",t=!1){return[e,t]}onoverride(e=""){return e}onset(e={},t=!1){return[e,t]}override(e,t=r){if("indexes"===t)this.indexes=new Map(e.map((e=>[e[0],new Map(e[1].map((e=>[e[0],new Set(e[1])])))])));else{if(t!==r)throw new Error("Invalid type");this.indexes.clear(),this.data=new Map(e)}return this.onoverride(t),!0}reduce(e,t,s=!1){let i=t??this.data.keys().next().value;return this.forEach(((t,r)=>{i=e(i,t,r,this,s)}),this),i}reindex(e){const t=e?[e]:this.index;return e&&!1===this.index.includes(e)&&this.index.push(e),this.each(t,(e=>this.indexes.set(e,new Map))),this.forEach(((e,s)=>this.each(t,(t=>this.setIndex(this.index,this.indexes,this.delimiter,s,e,t))))),this}search(e,t,i=!1){const r=new Map,n=typeof e===s,a=e&&typeof e.test===s;return e&&this.each(t?Array.isArray(t)?t:[t]:this.index,(t=>{let s=this.indexes.get(t);s&&s.forEach(((s,h)=>{switch(!0){case n&&e(h,t):case a&&e.test(Array.isArray(h)?h.join(","):h):case h===e:s.forEach((e=>{!1===r.has(e)&&this.data.has(e)&&r.set(e,this.get(e,i))}))}}))})),i?Array.from(r.values()):this.list(...Array.from(r.values()))}set(e=null,t={},s=!1,i=!1){null===e&&(e=t[this.key]??this.uuid());let r=this.key?{...t,[this.key]:e}:{...t};if(this.beforeSet(e,r,s,i),!1===this.data.has(e))this.versioning&&this.versions.set(e,new Set);else{let t=this.get(e,!0);this.delIndex(this.index,this.indexes,this.delimiter,e,t),this.versioning&&this.versions.get(e).add(Object.freeze(this.clone(t))),!1===i&&(r=this.merge(this.clone(t),r))}this.data.set(e,r),this.setIndex(this.index,this.indexes,this.delimiter,e,r,null);let n=this.get(e);return this.onset(n,s),n}setIndex(e,t,s,i,r,n){this.each(null===n?e:[n],(e=>{let n=t.get(e);n||(n=new Map,t.set(e,n)),e.includes(s)?this.each(this.indexKeys(e,s,r),(e=>{!1===n.has(e)&&n.set(e,new Set),n.get(e).add(i)})):this.each(Array.isArray(r[e])?r[e]:[r[e]],(e=>{!1===n.has(e)&&n.set(e,new Set),n.get(e).add(i)}))}))}sort(e,t=!0){return t?Object.freeze(this.limit(0,this.data.size,!0).sort(e).map((e=>Object.freeze(e)))):this.limit(0,this.data.size,!0).sort(e)}sortBy(e="",s=!1){if(e===t)throw new Error("Invalid field");const i=[],r=[];!1===this.indexes.has(e)&&this.reindex(e);const n=this.indexes.get(e);return n.forEach(((e,t)=>r.push(t))),this.each(r.sort(),(e=>n.get(e).forEach((e=>i.push(this.get(e,s)))))),s?i:this.list(...i)}toArray(e=!0){const t=Array.from(this.data.values());return e&&(this.each(t,(e=>Object.freeze(e))),Object.freeze(t)),t}uuid(){return h()}values(){return this.data.values()}where(e={},t=!1,s="||"){const i=this.index.filter((t=>t in e));return i.length>0?this.filter(new Function("a",`return (${i.map((t=>{let i;if(Array.isArray(e[t]))i=`Array.isArray(a['${t}']) ? ${e[t].map((e=>`a['${t}'].includes(${"string"==typeof e?`'${e}'`:e})`)).join(` ${s} `)} : (${e[t].map((e=>`a['${t}'] === ${"string"==typeof e?`'${e}'`:e}`)).join(` ${s} `)})`;else if(e[t]instanceof RegExp)i=`Array.isArray(a['${t}']) ? a['${t}'].filter(i => ${e[t]}.test(a['${t}'])).length > 0 : ${e[t]}.test(a['${t}'])`;else{const s="string"==typeof e[t]?`'${e[t]}'`:e[t];i=`Array.isArray(a['${t}']) ? a['${t}'].includes(${s}) : a['${t}'] === ${s}`}return i})).join(") && (")});`),t):[]}}e.Haro=o,e.haro=function(e=null,t={}){const s=new o(t);return Array.isArray(e)&&s.batch(e,"set"),s}}));//# sourceMappingURL=haro.umd.min.js.map
