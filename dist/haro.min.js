/*!
 2024 Jason Mulligan <jason.mulligan@avoidwork.com>
 @version 15.0.0
*/
const e="",t="|",r="function",s="records",i=0,n=[8,9,"a","b"],a=structuredClone??function(e){return JSON.parse(JSON.stringify(e,null,i))};function h(e=[],t){for(const[r,s]of e.entries())t(s,r);return e}function o(r=e,s=t,n={}){return r.split(s).reduce(((e,t,r)=>{const a=[];return(Array.isArray(n[t])?n[t]:[n[t]]).forEach((t=>r===i?a.push(t):e.forEach((e=>a.push(`${e}${s}${t}`))))),a}),[])}function c(e,t,r,s,n){e.forEach((e=>{const a=t.get(e);h(e.includes(r)?o(e,r,n):Array.isArray(n[e])?n[e]:[n[e]],(e=>{if(a.has(e)){const t=a.get(e);t.delete(s),t.size===i&&a.delete(e)}}))}))}function d(e,t){return e instanceof Object&&t instanceof Object?h(Object.keys(t),(r=>{e[r]instanceof Object&&t[r]instanceof Object?e[r]=d(e[r],t[r]):Array.isArray(e[r])&&Array.isArray(t[r])?e[r]=e[r].concat(t[r]):e[r]=t[r]})):e=Array.isArray(e)&&Array.isArray(t)?e.concat(t):t,e}function l(){return(65536*(Math.random()+1)|i).toString(16).substring(1)}function u(e,t,r,s,i,n){h(null===n?e:[n],(e=>{const n=t.get(e);e.includes(r)?h(o(e,r,i),(e=>{!1===n.has(e)&&n.set(e,new Set),n.get(e).add(s)})):h(Array.isArray(i[e])?i[e]:[i[e]],(e=>{!1===n.has(e)&&n.set(e,new Set),n.get(e).add(s)}))}))}const f="object"==typeof crypto?crypto.randomUUID:()=>`${l()}${l()}-${l()}-4${l().slice(i,3)}-${n[Math.floor(4*Math.random())]}${l().slice(i,3)}-${l()}${l()}${l()}`;class y{constructor({delimiter:e=t,id:r=f(),index:s=[],key:i="",versioning:n=!1}={}){return this.data=new Map,this.delimiter=e,this.id=r,this.index=s,this.indexes=new Map,this.key=i,this.versions=new Map,this.versioning=n,Object.defineProperty(this,"registry",{enumerable:!0,get:()=>Array.from(this.data.keys())}),Object.defineProperty(this,"size",{enumerable:!0,get:()=>this.data.size}),this.reindex()}batch(e,t="set"){const r="del"===t?e=>this.del(e,!0):e=>this.set(null,e,!0,!0);return this.onbatch(this.beforeBatch(e,t).map(r),t)}beforeBatch(e){return e}beforeClear(){}beforeDelete(){}beforeSet(){}clear(){return this.beforeClear(),this.data.clear(),this.indexes.clear(),this.versions.clear(),this.reindex().onclear(),this}del(e,t=!1){if(!1===this.has(e))throw new Error("Record not found");const r=this.get(e,!0);this.beforeDelete(e,t),c(this.index,this.indexes,this.delimiter,e,r),this.data.delete(e),this.ondelete(e,t),this.versioning&&this.versions.delete(e)}dump(e=s){let t;return t=e===s?Array.from(this.entries()):Array.from(this.indexes).map((e=>(e[1]=Array.from(e[1]).map((e=>(e[1]=Array.from(e[1]),e))),e))),t}entries(){return this.data.entries()}find(e={},t=!1){const r=Object.keys(e).sort(((e,t)=>e.localeCompare(t))).join(this.delimiter),s=this.indexes.get(r)||new Map;let i=[];if(s.size>0){const n=o(r,this.delimiter,e);i=Array.from(n.reduce(((e,t)=>(s.has(t)&&s.get(t).forEach((t=>e.add(t))),e)),new Set)).map((e=>this.get(e,t)))}return t?i:this.list(...i)}filter(e=(()=>{}),t=!1){const r=t?(e,t)=>t:(e,t)=>Object.freeze([e,Object.freeze(t)]),s=this.reduce(((t,s,i,n)=>(e.call(n,s)&&t.push(r(i,s)),t)),[]);return t?s:Object.freeze(s)}forEach(e,t){return this.data.forEach(((t,r)=>e(a(t),a(r))),t||this.data),this}get(e,t=!1){const r=a(this.data.get(e)||null);return t?r:this.list(e,r)}has(e){return this.data.has(e)}keys(){return this.data.keys()}limit(e=i,t=i,r=!1){const s=this.registry.slice(e,e+t).map((e=>this.get(e,r)));return r?s:this.list(...s)}list(...e){return Object.freeze(e.map((e=>Object.freeze(e))))}map(e,t=!1){const r=[];return this.forEach(((t,s)=>r.push(e(t,s)))),t?r:this.list(...r)}onbatch(e){return e}onclear(){}ondelete(){}onoverride(){}onset(){}override(e,t=s){if("indexes"===t)this.indexes=new Map(e.map((e=>[e[0],new Map(e[1].map((e=>[e[0],new Set(e[1])])))])));else{if(t!==s)throw new Error("Invalid type");this.indexes.clear(),this.data=new Map(e)}return this.onoverride(t),!0}reduce(e,t,r=!1){let s=t||this.data.keys().next().value;return this.forEach(((t,i)=>{s=e(s,t,i,this,r)}),this),s}reindex(e){const t=e?[e]:this.index;return e&&!1===this.index.includes(e)&&this.index.push(e),h(t,(e=>this.indexes.set(e,new Map))),this.forEach(((e,r)=>h(t,(t=>u(this.index,this.indexes,this.delimiter,r,e,t))))),this}search(e,t,s=!1){const i=new Map,n=typeof e===r,a=e&&typeof e.test===r;return e&&h(t?Array.isArray(t)?t:[t]:this.index,(t=>{let r=this.indexes.get(t);r&&r.forEach(((r,h)=>{switch(!0){case n&&e(h,t):case a&&e.test(Array.isArray(h)?h.join(","):h):case h===e:r.forEach((e=>{!1===i.has(e)&&this.has(e)&&i.set(e,this.get(e,s))}))}}))})),s?Array.from(i.values()):this.list(...Array.from(i.values()))}set(e=null,t={},r=!1,s=!1){let i,n,h=a(t);return null===e&&(this.key in h?e=h[this.key]:h[this.key]=e=f()),this.beforeSet(e,t,r,s),!1===this.has(e)?this.versioning&&this.versions.set(e,new Set):(i=this.get(e,!0),c(this.index,this.indexes,this.delimiter,e,i),this.versioning&&this.versions.get(e).add(Object.freeze(a(i))),!1===s&&(h=d(a(i),h))),this.data.set(e,h),u(this.index,this.indexes,this.delimiter,e,h,null),n=this.get(e),this.onset(n,r),n}sort(e,t=!0){return t?Object.freeze(this.limit(i,this.data.size,!0).sort(e).map((e=>Object.freeze(e)))):this.limit(i,this.data.size,!0).sort(e)}sortBy(t=e,r=!1){if(t===e)throw new Error("Invalid field");const s=[],i=[];!1===this.indexes.has(t)&&this.reindex(t);const n=this.indexes.get(t);return n.forEach(((e,t)=>i.push(t))),h(i.sort(),(e=>n.get(e).forEach((e=>s.push(this.get(e,r)))))),r?s:this.list(...s)}toArray(e=!0){const t=Array.from(this.data.values());return e&&(h(t,(e=>Object.freeze(e))),Object.freeze(t)),t}values(){return this.data.values()}where(e,t=!1,r="||"){const s=this.index.filter((t=>t in e));return s.length>i?this.filter(new Function("a",`return (${s.map((t=>{let s;if(Array.isArray(e[t]))s=`Array.isArray(a['${t}']) ? ${e[t].map((e=>`a['${t}'].includes(${"string"==typeof e?`'${e}'`:e})`)).join(` ${r} `)} : (${e[t].map((e=>`a['${t}'] === ${"string"==typeof e?`'${e}'`:e}`)).join(` ${r} `)})`;else if(e[t]instanceof RegExp)s=`Array.isArray(a['${t}']) ? a['${t}'].filter(i => ${e[t]}.test(a['${t}'])).length > 0 : ${e[t]}.test(a['${t}'])`;else{const r="string"==typeof e[t]?`'${e[t]}'`:e[t];s=`Array.isArray(a['${t}']) ? a['${t}'].includes(${r}) : a['${t}'] === ${r}`}return s})).join(") && (")});`),t):[]}}function p(e=null,t={}){const r=new y(t);return Array.isArray(e)&&r.batch(e,"set"),r}export{y as Haro,p as haro};//# sourceMappingURL=haro.min.js.map
