{"version":3,"file":"haro.min.js","sources":["../src/constants.js","../src/uuid.js","../src/haro.js"],"sourcesContent":["export const STRING_COMMA = \",\";\nexport const STRING_EMPTY = \"\";\nexport const STRING_PIPE = \"|\";\nexport const STRING_DOUBLE_PIPE = \"||\";\nexport const STRING_A = \"a\";\nexport const STRING_B = \"b\";\nexport const STRING_DEL = \"del\";\nexport const STRING_FUNCTION = \"function\";\nexport const STRING_INDEXES = \"indexes\";\nexport const STRING_INVALID_FIELD = \"Invalid field\";\nexport const STRING_INVALID_FUNCTION = \"Invalid function\";\nexport const STRING_INVALID_TYPE = \"Invalid type\";\nexport const STRING_OBJECT = \"object\";\nexport const STRING_RECORD_NOT_FOUND = \"Record not found\";\nexport const STRING_RECORDS = \"records\";\nexport const STRING_REGISTRY = \"registry\";\nexport const STRING_SET = \"set\";\nexport const STRING_SIZE = \"size\";\nexport const INT_0 = 0;\nexport const INT_1 = 1;\nexport const INT_3 = 3;\nexport const INT_4 = 4;\nexport const INT_8 = 8;\nexport const INT_9 = 9;\nexport const INT_16 = 16;\n","import {INT_0, INT_1, INT_16, INT_3, INT_4, INT_8, INT_9, STRING_A, STRING_B, STRING_OBJECT} from \"./constants.js\";\n\n/* istanbul ignore next */\nconst r = [INT_8, INT_9, STRING_A, STRING_B];\n\n/* istanbul ignore next */\nfunction s () {\n\treturn ((Math.random() + INT_1) * 0x10000 | INT_0).toString(INT_16).substring(INT_1);\n}\n\n/* istanbul ignore next */\nfunction randomUUID () {\n\treturn `${s()}${s()}-${s()}-4${s().slice(INT_0, INT_3)}-${r[Math.floor(Math.random() * INT_4)]}${s().slice(INT_0, INT_3)}-${s()}${s()}${s()}`;\n}\n\nexport const uuid = typeof crypto === STRING_OBJECT ? crypto.randomUUID.bind(crypto) : randomUUID;\n","import {uuid} from \"./uuid.js\";\nimport {\n\tINT_0,\n\tSTRING_COMMA,\n\tSTRING_DEL,\n\tSTRING_DOUBLE_PIPE,\n\tSTRING_EMPTY,\n\tSTRING_FUNCTION,\n\tSTRING_INDEXES,\n\tSTRING_INVALID_FIELD,\n\tSTRING_INVALID_FUNCTION,\n\tSTRING_INVALID_TYPE,\n\tSTRING_PIPE,\n\tSTRING_RECORD_NOT_FOUND,\n\tSTRING_RECORDS,\n\tSTRING_REGISTRY,\n\tSTRING_SET,\n\tSTRING_SIZE\n} from \"./constants.js\";\n\nexport class Haro {\n\tconstructor ({delimiter = STRING_PIPE, id = this.uuid(), index = [], key = \"id\", versioning = false} = {}) {\n\t\tthis.data = new Map();\n\t\tthis.delimiter = delimiter;\n\t\tthis.id = id;\n\t\tthis.index = Array.isArray(index) ? [...index] : [];\n\t\tthis.indexes = new Map();\n\t\tthis.key = key;\n\t\tthis.versions = new Map();\n\t\tthis.versioning = versioning;\n\n\t\tObject.defineProperty(this, STRING_REGISTRY, {\n\t\t\tenumerable: true,\n\t\t\tget: () => Array.from(this.data.keys())\n\t\t});\n\t\tObject.defineProperty(this, STRING_SIZE, {\n\t\t\tenumerable: true,\n\t\t\tget: () => this.data.size\n\t\t});\n\n\t\treturn this.reindex();\n\t}\n\n\tbatch (args, type = STRING_SET) {\n\t\tconst fn = type === STRING_DEL ? i => this.del(i, true) : i => this.set(null, i, true, true);\n\n\t\treturn this.onbatch(this.beforeBatch(args, type).map(fn), type);\n\t}\n\n\tbeforeBatch (arg, type = STRING_EMPTY) { // eslint-disable-line no-unused-vars\n\t\treturn arg;\n\t}\n\n\tbeforeClear () {\n\t\t// Hook for custom logic before clear; override in subclass if needed\n\t}\n\n\tbeforeDelete (key = STRING_EMPTY, batch = false) {\n\t\treturn [key, batch];\n\t}\n\n\tbeforeSet (key = STRING_EMPTY, batch = false) {\n\t\treturn [key, batch];\n\t}\n\n\tclear () {\n\t\tthis.beforeClear();\n\t\tthis.data.clear();\n\t\tthis.indexes.clear();\n\t\tthis.versions.clear();\n\t\tthis.reindex().onclear();\n\n\t\treturn this;\n\t}\n\n\tclone (arg) {\n\t\treturn JSON.parse(JSON.stringify(arg));\n\t}\n\n\tdel (key = STRING_EMPTY, batch = false) {\n\t\tif (!this.data.has(key)) {\n\t\t\tthrow new Error(STRING_RECORD_NOT_FOUND);\n\t\t}\n\t\tconst og = this.get(key, true);\n\t\tthis.beforeDelete(key, batch);\n\t\tthis.delIndex(this.index, this.indexes, this.delimiter, key, og);\n\t\tthis.data.delete(key);\n\t\tthis.ondelete(key, batch);\n\t\tif (this.versioning) {\n\t\t\tthis.versions.delete(key);\n\t\t}\n\t}\n\n\tdelIndex (index, indexes, delimiter, key, data) {\n\t\tindex.forEach(i => {\n\t\t\tconst idx = indexes.get(i);\n\t\t\tif (!idx) return;\n\t\t\tconst values = i.includes(delimiter) ?\n\t\t\t\tthis.indexKeys(i, delimiter, data) :\n\t\t\t\tArray.isArray(data[i]) ? data[i] : [data[i]];\n\t\t\tthis.each(values, value => {\n\t\t\t\tif (idx.has(value)) {\n\t\t\t\t\tconst o = idx.get(value);\n\t\t\t\t\to.delete(key);\n\t\t\t\t\tif (o.size === INT_0) {\n\t\t\t\t\t\tidx.delete(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tdump (type = STRING_RECORDS) {\n\t\tlet result;\n\n\t\tif (type === STRING_RECORDS) {\n\t\t\tresult = Array.from(this.entries());\n\t\t} else {\n\t\t\tresult = Array.from(this.indexes).map(i => {\n\t\t\t\ti[1] = Array.from(i[1]).map(ii => {\n\t\t\t\t\tii[1] = Array.from(ii[1]);\n\n\t\t\t\t\treturn ii;\n\t\t\t\t});\n\n\t\t\t\treturn i;\n\t\t\t});\n\t\t}\n\n\t\treturn result;\n\t}\n\n\teach (arr = [], fn) {\n\t\tfor (const [idx, value] of arr.entries()) {\n\t\t\tfn(value, idx);\n\t\t}\n\n\t\treturn arr;\n\t}\n\n\tentries () {\n\t\treturn this.data.entries();\n\t}\n\n\tfind (where = {}, raw = false) {\n\t\tconst key = Object.keys(where).sort((a, b) => a.localeCompare(b)).join(this.delimiter);\n\t\tconst index = this.indexes.get(key) ?? new Map();\n\t\tlet result = [];\n\t\tif (index.size > 0) {\n\t\t\tconst keys = this.indexKeys(key, this.delimiter, where);\n\t\t\tresult = Array.from(keys.reduce((a, v) => {\n\t\t\t\tif (index.has(v)) {\n\t\t\t\t\tindex.get(v).forEach(k => a.add(k));\n\t\t\t\t}\n\n\t\t\t\treturn a;\n\t\t\t}, new Set())).map(i => this.get(i, raw));\n\t\t}\n\n\t\treturn raw ? result : this.list(...result);\n\t}\n\n\tfilter (fn, raw = false) {\n\t\tif (typeof fn !== STRING_FUNCTION) {\n\t\t\tthrow new Error(STRING_INVALID_FUNCTION);\n\t\t}\n\t\tconst x = raw ? (k, v) => v : (k, v) => Object.freeze([k, Object.freeze(v)]);\n\t\tconst result = this.reduce((a, v, k, ctx) => {\n\t\t\tif (fn.call(ctx, v)) {\n\t\t\t\ta.push(x(k, v));\n\t\t\t}\n\n\t\t\treturn a;\n\t\t}, []);\n\n\t\treturn raw ? result : Object.freeze(result);\n\t}\n\n\tforEach (fn, ctx) {\n\t\tthis.data.forEach((value, key) => fn(this.clone(value), this.clone(key)), ctx ?? this.data);\n\n\t\treturn this;\n\t}\n\n\tget (key, raw = false) {\n\t\tconst result = this.clone(this.data.get(key) ?? null);\n\n\t\treturn raw ? result : this.list(key, result);\n\t}\n\n\thas (key) {\n\t\treturn this.data.has(key);\n\t}\n\n\tindexKeys (arg = STRING_EMPTY, delimiter = STRING_PIPE, data = {}) {\n\t\treturn arg.split(delimiter).reduce((a, li, lidx) => {\n\t\t\tconst result = [];\n\n\t\t\t(Array.isArray(data[li]) ? data[li] : [data[li]]).forEach(lli => lidx === INT_0 ? result.push(lli) : a.forEach(x => result.push(`${x}${delimiter}${lli}`)));\n\n\t\t\treturn result;\n\t\t}, []);\n\t}\n\n\tkeys () {\n\t\treturn this.data.keys();\n\t}\n\n\tlimit (offset = INT_0, max = INT_0, raw = false) {\n\t\tconst result = this.registry.slice(offset, offset + max).map(i => this.get(i, raw));\n\n\t\treturn raw ? result : this.list(...result);\n\t}\n\n\tlist (...args) {\n\t\treturn Object.freeze(args.map(i => Object.freeze(i)));\n\t}\n\n\tmap (fn, raw = false) {\n\t\tif (typeof fn !== STRING_FUNCTION) {\n\t\t\tthrow new Error(STRING_INVALID_FUNCTION);\n\t\t}\n\n\t\tconst result = [];\n\n\t\tthis.forEach((value, key) => result.push(fn(value, key)));\n\n\t\treturn raw ? result : this.list(...result);\n\t}\n\n\tmerge (a, b, override = false) {\n\t\tif (Array.isArray(a) && Array.isArray(b)) {\n\t\t\ta = override ? b : a.concat(b);\n\t\t} else if (typeof a === \"object\" && a !== null && typeof b === \"object\" && b !== null) {\n\t\t\tthis.each(Object.keys(b), i => {\n\t\t\t\ta[i] = this.merge(a[i], b[i], override);\n\t\t\t});\n\t\t} else {\n\t\t\ta = b;\n\t\t}\n\n\t\treturn a;\n\t}\n\n\tonbatch (arg, type = STRING_EMPTY) { // eslint-disable-line no-unused-vars\n\t\treturn arg;\n\t}\n\n\tonclear () {\n\t\t// Hook for custom logic after clear; override in subclass if needed\n\t}\n\n\tondelete (key = STRING_EMPTY, batch = false) {\n\t\treturn [key, batch];\n\t}\n\n\tonoverride (type = STRING_EMPTY) {\n\t\treturn type;\n\t}\n\n\tonset (arg = {}, batch = false) {\n\t\treturn [arg, batch];\n\t}\n\n\toverride (data, type = STRING_RECORDS) {\n\t\tconst result = true;\n\n\t\tif (type === STRING_INDEXES) {\n\t\t\tthis.indexes = new Map(data.map(i => [i[0], new Map(i[1].map(ii => [ii[0], new Set(ii[1])]))]));\n\t\t} else if (type === STRING_RECORDS) {\n\t\t\tthis.indexes.clear();\n\t\t\tthis.data = new Map(data);\n\t\t} else {\n\t\t\tthrow new Error(STRING_INVALID_TYPE);\n\t\t}\n\n\t\tthis.onoverride(type);\n\n\t\treturn result;\n\t}\n\n\treduce (fn, accumulator, raw = false) {\n\t\tlet a = accumulator ?? this.data.keys().next().value;\n\n\t\tthis.forEach((v, k) => {\n\t\t\ta = fn(a, v, k, this, raw);\n\t\t}, this);\n\n\t\treturn a;\n\t}\n\n\treindex (index) {\n\t\tconst indices = index ? [index] : this.index;\n\n\t\tif (index && this.index.includes(index) === false) {\n\t\t\tthis.index.push(index);\n\t\t}\n\n\t\tthis.each(indices, i => this.indexes.set(i, new Map()));\n\t\tthis.forEach((data, key) => this.each(indices, i => this.setIndex(this.index, this.indexes, this.delimiter, key, data, i)));\n\n\t\treturn this;\n\t}\n\n\tsearch (value, index, raw = false) {\n\t\tconst result = new Map(),\n\t\t\tfn = typeof value === STRING_FUNCTION,\n\t\t\trgex = value && typeof value.test === STRING_FUNCTION;\n\n\t\tif (value) {\n\t\t\tthis.each(index ? Array.isArray(index) ? index : [index] : this.index, i => {\n\t\t\t\tlet idx = this.indexes.get(i);\n\n\t\t\t\tif (idx) {\n\t\t\t\t\tidx.forEach((lset, lkey) => {\n\t\t\t\t\t\tswitch (true) {\n\t\t\t\t\t\t\tcase fn && value(lkey, i):\n\t\t\t\t\t\t\tcase rgex && value.test(Array.isArray(lkey) ? lkey.join(STRING_COMMA) : lkey):\n\t\t\t\t\t\t\tcase lkey === value:\n\t\t\t\t\t\t\t\tlset.forEach(key => {\n\t\t\t\t\t\t\t\t\tif (result.has(key) === false && this.data.has(key)) {\n\t\t\t\t\t\t\t\t\t\tresult.set(key, this.get(key, raw));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tvoid 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn raw ? Array.from(result.values()) : this.list(...Array.from(result.values()));\n\t}\n\n\tset (key = null, data = {}, batch = false, override = false) {\n\t\tif (key === null) {\n\t\t\tkey = data[this.key] ?? this.uuid();\n\t\t}\n\t\tlet x = {...data, [this.key]: key};\n\t\tthis.beforeSet(key, x, batch, override);\n\t\tif (!this.data.has(key)) {\n\t\t\tif (this.versioning) {\n\t\t\t\tthis.versions.set(key, new Set());\n\t\t\t}\n\t\t} else {\n\t\t\tconst og = this.get(key, true);\n\t\t\tthis.delIndex(this.index, this.indexes, this.delimiter, key, og);\n\t\t\tif (this.versioning) {\n\t\t\t\tthis.versions.get(key).add(Object.freeze(this.clone(og)));\n\t\t\t}\n\t\t\tif (!override) {\n\t\t\t\tx = this.merge(this.clone(og), x);\n\t\t\t}\n\t\t}\n\t\tthis.data.set(key, x);\n\t\tthis.setIndex(this.index, this.indexes, this.delimiter, key, x, null);\n\t\tconst result = this.get(key);\n\t\tthis.onset(result, batch);\n\n\t\treturn result;\n\t}\n\n\tsetIndex (index, indexes, delimiter, key, data, indice) {\n\t\tthis.each(indice === null ? index : [indice], i => {\n\t\t\tlet lindex = indexes.get(i);\n\t\t\tif (!lindex) {\n\t\t\t\tlindex = new Map();\n\t\t\t\tindexes.set(i, lindex);\n\t\t\t}\n\t\t\tif (i.includes(delimiter)) {\n\t\t\t\tthis.each(this.indexKeys(i, delimiter, data), c => {\n\t\t\t\t\tif (!lindex.has(c)) {\n\t\t\t\t\t\tlindex.set(c, new Set());\n\t\t\t\t\t}\n\t\t\t\t\tlindex.get(c).add(key);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.each(Array.isArray(data[i]) ? data[i] : [data[i]], d => {\n\t\t\t\t\tif (!lindex.has(d)) {\n\t\t\t\t\t\tlindex.set(d, new Set());\n\t\t\t\t\t}\n\t\t\t\t\tlindex.get(d).add(key);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tsort (fn, frozen = true) {\n\t\treturn frozen ? Object.freeze(this.limit(INT_0, this.data.size, true).sort(fn).map(i => Object.freeze(i))) : this.limit(INT_0, this.data.size, true).sort(fn);\n\t}\n\n\tsortBy (index = STRING_EMPTY, raw = false) {\n\t\tif (index === STRING_EMPTY) {\n\t\t\tthrow new Error(STRING_INVALID_FIELD);\n\t\t}\n\n\t\tconst result = [],\n\t\t\tkeys = [];\n\n\t\tif (this.indexes.has(index) === false) {\n\t\t\tthis.reindex(index);\n\t\t}\n\n\t\tconst lindex = this.indexes.get(index);\n\n\t\tlindex.forEach((idx, key) => keys.push(key));\n\t\tthis.each(keys.sort(), i => lindex.get(i).forEach(key => result.push(this.get(key, raw))));\n\n\t\treturn raw ? result : this.list(...result);\n\t}\n\n\ttoArray (frozen = true) {\n\t\tconst result = Array.from(this.data.values());\n\n\t\tif (frozen) {\n\t\t\tthis.each(result, i => Object.freeze(i));\n\t\t\tObject.freeze(result);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tuuid () {\n\t\treturn uuid();\n\t}\n\n\tvalues () {\n\t\treturn this.data.values();\n\t}\n\n\twhere (predicate = {}, raw = false, op = STRING_DOUBLE_PIPE) {\n\t\tconst keys = this.index.filter(i => i in predicate);\n\n\t\tif (keys.length === 0) return [];\n\n\t\t// Supported operators: '||' (OR), '&&' (AND)\n\t\t// Always AND across fields (all keys must match for a record)\n\t\treturn this.filter(a => {\n\t\t\tconst matches = keys.map(i => {\n\t\t\t\tconst pred = predicate[i];\n\t\t\t\tconst val = a[i];\n\t\t\t\tif (Array.isArray(pred)) {\n\t\t\t\t\tif (Array.isArray(val)) {\n\t\t\t\t\t\tif (op === \"&&\") {\n\t\t\t\t\t\t\treturn pred.every(p => val.includes(p));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn pred.some(p => val.includes(p));\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (op === \"&&\") {\n\t\t\t\t\t\treturn pred.every(p => val === p);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn pred.some(p => val === p);\n\t\t\t\t\t}\n\t\t\t\t} else if (pred instanceof RegExp) {\n\t\t\t\t\tif (Array.isArray(val)) {\n\t\t\t\t\t\tif (op === \"&&\") {\n\t\t\t\t\t\t\treturn val.every(v => pred.test(v));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn val.some(v => pred.test(v));\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn pred.test(val);\n\t\t\t\t\t}\n\t\t\t\t} else if (Array.isArray(val)) {\n\t\t\t\t\treturn val.includes(pred);\n\t\t\t\t} else {\n\t\t\t\t\treturn val === pred;\n\t\t\t\t}\n\t\t\t});\n\t\t\tconst isMatch = matches.every(Boolean);\n\t\t\tif (predicate.company === \"Insectus\" && predicate.tags === \"occaecat\") {\n\t\t\t\tconsole.log(\"DEBUG WHERE:\", {a, matches, isMatch});\n\t\t\t}\n\n\t\t\treturn isMatch;\n\t\t}, raw);\n\t}\n\n}\n\nexport function haro (data = null, config = {}) {\n\tconst obj = new Haro(config);\n\n\tif (Array.isArray(data)) {\n\t\tobj.batch(data, STRING_SET);\n\t}\n\n\treturn obj;\n}\n"],"names":["STRING_EMPTY","STRING_FUNCTION","STRING_INVALID_FUNCTION","STRING_RECORDS","r","s","Math","random","toString","substring","uuid","crypto","randomUUID","bind","slice","floor","Haro","constructor","delimiter","id","this","index","key","versioning","data","Map","Array","isArray","indexes","versions","Object","defineProperty","enumerable","get","from","keys","size","reindex","batch","args","type","fn","i","del","set","onbatch","beforeBatch","map","arg","beforeClear","beforeDelete","beforeSet","clear","onclear","clone","JSON","parse","stringify","has","Error","og","delIndex","delete","ondelete","forEach","idx","values","includes","indexKeys","each","value","o","dump","result","entries","ii","arr","find","where","raw","sort","a","b","localeCompare","join","reduce","v","k","add","Set","list","filter","x","freeze","ctx","call","push","split","li","lidx","lli","limit","offset","max","registry","merge","override","concat","onoverride","onset","accumulator","next","indices","setIndex","search","rgex","test","lset","lkey","indice","lindex","c","d","frozen","sortBy","toArray","predicate","op","length","matches","pred","val","every","p","some","RegExp","isMatch","Boolean","company","tags","console","log","haro","config","obj"],"mappings":"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"}