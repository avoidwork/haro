{"version":3,"file":"haro.min.js","sources":["../src/constants.js","../src/uuid.js","../src/haro.js"],"sourcesContent":["export const STRING_COMMA = \",\";\nexport const STRING_EMPTY = \"\";\nexport const STRING_PIPE = \"|\";\nexport const STRING_DOUBLE_PIPE = \"||\";\nexport const STRING_A = \"a\";\nexport const STRING_B = \"b\";\nexport const STRING_DEL = \"del\";\nexport const STRING_FUNCTION = \"function\";\nexport const STRING_INDEXES = \"indexes\";\nexport const STRING_INVALID_FIELD = \"Invalid field\";\nexport const STRING_INVALID_FUNCTION = \"Invalid function\";\nexport const STRING_INVALID_TYPE = \"Invalid type\";\nexport const STRING_OBJECT = \"object\";\nexport const STRING_RECORD_NOT_FOUND = \"Record not found\";\nexport const STRING_RECORDS = \"records\";\nexport const STRING_REGISTRY = \"registry\";\nexport const STRING_SET = \"set\";\nexport const STRING_SIZE = \"size\";\nexport const INT_0 = 0;\nexport const INT_1 = 1;\nexport const INT_3 = 3;\nexport const INT_4 = 4;\nexport const INT_8 = 8;\nexport const INT_9 = 9;\nexport const INT_16 = 16;\n","import {INT_0, INT_1, INT_16, INT_3, INT_4, INT_8, INT_9, STRING_A, STRING_B, STRING_OBJECT} from \"./constants.js\";\n\n/* istanbul ignore next */\nconst r = [INT_8, INT_9, STRING_A, STRING_B];\n\n/* istanbul ignore next */\nfunction s () {\n\treturn ((Math.random() + INT_1) * 0x10000 | INT_0).toString(INT_16).substring(INT_1);\n}\n\n/* istanbul ignore next */\nfunction randomUUID () {\n\treturn `${s()}${s()}-${s()}-4${s().slice(INT_0, INT_3)}-${r[Math.floor(Math.random() * INT_4)]}${s().slice(INT_0, INT_3)}-${s()}${s()}${s()}`;\n}\n\nexport const uuid = typeof crypto === STRING_OBJECT ? crypto.randomUUID.bind(crypto) : randomUUID;\n","import {uuid} from \"./uuid.js\";\nimport {\n\tINT_0,\n\tSTRING_A,\n\tSTRING_COMMA,\n\tSTRING_DEL,\n\tSTRING_DOUBLE_PIPE,\n\tSTRING_EMPTY,\n\tSTRING_FUNCTION,\n\tSTRING_INDEXES,\n\tSTRING_INVALID_FIELD,\n\tSTRING_INVALID_FUNCTION,\n\tSTRING_INVALID_TYPE,\n\tSTRING_PIPE,\n\tSTRING_RECORD_NOT_FOUND,\n\tSTRING_RECORDS,\n\tSTRING_REGISTRY,\n\tSTRING_SET,\n\tSTRING_SIZE\n} from \"./constants.js\";\n\nexport class Haro {\n\tconstructor ({delimiter = STRING_PIPE, id = this.uuid(), index = [], key = STRING_EMPTY, versioning = false} = {}) {\n\t\tthis.data = new Map();\n\t\tthis.delimiter = delimiter;\n\t\tthis.id = id;\n\t\tthis.index = index;\n\t\tthis.indexes = new Map();\n\t\tthis.key = key;\n\t\tthis.versions = new Map();\n\t\tthis.versioning = versioning;\n\n\t\tObject.defineProperty(this, STRING_REGISTRY, {\n\t\t\tenumerable: true,\n\t\t\tget: () => Array.from(this.data.keys())\n\t\t});\n\n\t\tObject.defineProperty(this, STRING_SIZE, {\n\t\t\tenumerable: true,\n\t\t\tget: () => this.data.size\n\t\t});\n\n\t\treturn this.reindex();\n\t}\n\n\tbatch (args, type = STRING_SET) {\n\t\tconst fn = type === STRING_DEL ? i => this.del(i, true) : i => this.set(null, i, true, true);\n\n\t\treturn this.onbatch(this.beforeBatch(args, type).map(fn), type);\n\t}\n\n\tbeforeBatch (arg, type = STRING_EMPTY) { // eslint-disable-line no-unused-vars\n\t\treturn arg;\n\t}\n\n\tbeforeClear () {\n\t}\n\n\tbeforeDelete (key = STRING_EMPTY, batch = false) {\n\t\treturn [key, batch];\n\t}\n\n\tbeforeSet (key = STRING_EMPTY, batch = false) {\n\t\treturn [key, batch];\n\t}\n\n\tclear () {\n\t\tthis.beforeClear();\n\t\tthis.data.clear();\n\t\tthis.indexes.clear();\n\t\tthis.versions.clear();\n\t\tthis.reindex().onclear();\n\n\t\treturn this;\n\t}\n\n\tclone (arg) {\n\t\treturn JSON.parse(JSON.stringify(arg, null, INT_0));\n\t}\n\n\tdel (key = STRING_EMPTY, batch = false) {\n\t\tif (this.data.has(key) === false) {\n\t\t\tthrow new Error(STRING_RECORD_NOT_FOUND);\n\t\t}\n\n\t\tconst og = this.get(key, true);\n\n\t\tthis.beforeDelete(key, batch);\n\t\tthis.delIndex(this.index, this.indexes, this.delimiter, key, og);\n\t\tthis.data.delete(key);\n\t\tthis.ondelete(key, batch);\n\n\t\tif (this.versioning) {\n\t\t\tthis.versions.delete(key);\n\t\t}\n\t}\n\n\tdelIndex (index, indexes, delimiter, key, data) {\n\t\tindex.forEach(i => {\n\t\t\tconst idx = indexes.get(i);\n\n\t\t\tthis.each(i.includes(delimiter) ? this.indexKeys(i, delimiter, data) : Array.isArray(data[i]) ? data[i] : [data[i]], value => {\n\t\t\t\tif (idx.has(value)) {\n\t\t\t\t\tconst o = idx.get(value);\n\n\t\t\t\t\to.delete(key);\n\n\t\t\t\t\tif (o.size === INT_0) {\n\t\t\t\t\t\tidx.delete(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tdump (type = STRING_RECORDS) {\n\t\tlet result;\n\n\t\tif (type === STRING_RECORDS) {\n\t\t\tresult = Array.from(this.entries());\n\t\t} else {\n\t\t\tresult = Array.from(this.indexes).map(i => {\n\t\t\t\ti[1] = Array.from(i[1]).map(ii => {\n\t\t\t\t\tii[1] = Array.from(ii[1]);\n\n\t\t\t\t\treturn ii;\n\t\t\t\t});\n\n\t\t\t\treturn i;\n\t\t\t});\n\t\t}\n\n\t\treturn result;\n\t}\n\n\teach (arr = [], fn) {\n\t\tfor (const [idx, value] of arr.entries()) {\n\t\t\tfn(value, idx);\n\t\t}\n\n\t\treturn arr;\n\t}\n\n\tentries () {\n\t\treturn this.data.entries();\n\t}\n\n\tfind (where = {}, raw = false) {\n\t\tconst key = Object.keys(where).sort((a, b) => a.localeCompare(b)).join(this.delimiter),\n\t\t\tindex = this.indexes.get(key) ?? new Map();\n\t\tlet result = [];\n\n\t\tif (index.size > 0) {\n\t\t\tconst keys = this.indexKeys(key, this.delimiter, where);\n\n\t\t\tresult = Array.from(keys.reduce((a, v) => {\n\t\t\t\tif (index.has(v)) {\n\t\t\t\t\tindex.get(v).forEach(k => a.add(k));\n\t\t\t\t}\n\n\t\t\t\treturn a;\n\t\t\t}, new Set())).map(i => this.get(i, raw));\n\t\t}\n\n\t\treturn raw ? result : this.list(...result);\n\t}\n\n\tfilter (fn, raw = false) {\n\t\tif (typeof fn !== STRING_FUNCTION) {\n\t\t\tthrow new Error(STRING_INVALID_FUNCTION);\n\t\t}\n\n\t\tconst x = raw ? (k, v) => v : (k, v) => Object.freeze([k, Object.freeze(v)]),\n\t\t\tresult = this.reduce((a, v, k, ctx) => {\n\t\t\t\tif (fn.call(ctx, v)) {\n\t\t\t\t\ta.push(x(k, v));\n\t\t\t\t}\n\n\t\t\t\treturn a;\n\t\t\t}, []);\n\n\t\treturn raw ? result : Object.freeze(result);\n\t}\n\n\tforEach (fn, ctx) {\n\t\tthis.data.forEach((value, key) => fn(this.clone(value), this.clone(key)), ctx ?? this.data);\n\n\t\treturn this;\n\t}\n\n\tget (key, raw = false) {\n\t\tconst result = this.clone(this.data.get(key) ?? null);\n\n\t\treturn raw ? result : this.list(key, result);\n\t}\n\n\thas (key) {\n\t\treturn this.data.has(key);\n\t}\n\n\tindexKeys (arg = STRING_EMPTY, delimiter = STRING_PIPE, data = {}) {\n\t\treturn arg.split(delimiter).reduce((a, li, lidx) => {\n\t\t\tconst result = [];\n\n\t\t\t(Array.isArray(data[li]) ? data[li] : [data[li]]).forEach(lli => lidx === INT_0 ? result.push(lli) : a.forEach(x => result.push(`${x}${delimiter}${lli}`)));\n\n\t\t\treturn result;\n\t\t}, []);\n\t}\n\n\tkeys () {\n\t\treturn this.data.keys();\n\t}\n\n\tlimit (offset = INT_0, max = INT_0, raw = false) {\n\t\tconst result = this.registry.slice(offset, offset + max).map(i => this.get(i, raw));\n\n\t\treturn raw ? result : this.list(...result);\n\t}\n\n\tlist (...args) {\n\t\treturn Object.freeze(args.map(i => Object.freeze(i)));\n\t}\n\n\tmap (fn, raw = false) {\n\t\tif (typeof fn !== STRING_FUNCTION) {\n\t\t\tthrow new Error(STRING_INVALID_FUNCTION);\n\t\t}\n\n\t\tconst result = [];\n\n\t\tthis.forEach((value, key) => result.push(fn(value, key)));\n\n\t\treturn raw ? result : this.list(...result);\n\t}\n\n\tmerge (a, b, override = false) {\n\t\tif (Array.isArray(a) && Array.isArray(b)) {\n\t\t\ta = override ? b : a.concat(b);\n\t\t} else if (a instanceof Object && b instanceof Object) {\n\t\t\tthis.each(Object.keys(b), i => {\n\t\t\t\ta[i] = this.merge(a[i], b[i], override);\n\t\t\t});\n\t\t} else {\n\t\t\ta = b;\n\t\t}\n\n\t\treturn a;\n\t}\n\n\tonbatch (arg, type = STRING_EMPTY) { // eslint-disable-line no-unused-vars\n\t\treturn arg;\n\t}\n\n\tonclear () {\n\t}\n\n\tondelete (key = STRING_EMPTY, batch = false) {\n\t\treturn [key, batch];\n\t}\n\n\tonoverride (type = STRING_EMPTY) {\n\t\treturn type;\n\t}\n\n\tonset (arg = {}, batch = false) {\n\t\treturn [arg, batch];\n\t}\n\n\toverride (data, type = STRING_RECORDS) {\n\t\tconst result = true;\n\n\t\tif (type === STRING_INDEXES) {\n\t\t\tthis.indexes = new Map(data.map(i => [i[0], new Map(i[1].map(ii => [ii[0], new Set(ii[1])]))]));\n\t\t} else if (type === STRING_RECORDS) {\n\t\t\tthis.indexes.clear();\n\t\t\tthis.data = new Map(data);\n\t\t} else {\n\t\t\tthrow new Error(STRING_INVALID_TYPE);\n\t\t}\n\n\t\tthis.onoverride(type);\n\n\t\treturn result;\n\t}\n\n\treduce (fn, accumulator, raw = false) {\n\t\tlet a = accumulator ?? this.data.keys().next().value;\n\n\t\tthis.forEach((v, k) => {\n\t\t\ta = fn(a, v, k, this, raw);\n\t\t}, this);\n\n\t\treturn a;\n\t}\n\n\treindex (index) {\n\t\tconst indices = index ? [index] : this.index;\n\n\t\tif (index && this.index.includes(index) === false) {\n\t\t\tthis.index.push(index);\n\t\t}\n\n\t\tthis.each(indices, i => this.indexes.set(i, new Map()));\n\t\tthis.forEach((data, key) => this.each(indices, i => this.setIndex(this.index, this.indexes, this.delimiter, key, data, i)));\n\n\t\treturn this;\n\t}\n\n\tsearch (value, index, raw = false) {\n\t\tconst result = new Map(),\n\t\t\tfn = typeof value === STRING_FUNCTION,\n\t\t\trgex = value && typeof value.test === STRING_FUNCTION;\n\n\t\tif (value) {\n\t\t\tthis.each(index ? Array.isArray(index) ? index : [index] : this.index, i => {\n\t\t\t\tlet idx = this.indexes.get(i);\n\n\t\t\t\tif (idx) {\n\t\t\t\t\tidx.forEach((lset, lkey) => {\n\t\t\t\t\t\tswitch (true) {\n\t\t\t\t\t\t\tcase fn && value(lkey, i):\n\t\t\t\t\t\t\tcase rgex && value.test(Array.isArray(lkey) ? lkey.join(STRING_COMMA) : lkey):\n\t\t\t\t\t\t\tcase lkey === value:\n\t\t\t\t\t\t\t\tlset.forEach(key => {\n\t\t\t\t\t\t\t\t\tif (result.has(key) === false && this.data.has(key)) {\n\t\t\t\t\t\t\t\t\t\tresult.set(key, this.get(key, raw));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tvoid 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn raw ? Array.from(result.values()) : this.list(...Array.from(result.values()));\n\t}\n\n\tset (key = null, data = {}, batch = false, override = false) {\n\t\tif (key === null) {\n\t\t\tkey = data[this.key] ?? this.uuid();\n\t\t}\n\n\t\tlet x = {...data, [this.key]: key};\n\n\t\tthis.beforeSet(key, x, batch, override);\n\n\t\tif (this.data.has(key) === false) {\n\t\t\tif (this.versioning) {\n\t\t\t\tthis.versions.set(key, new Set());\n\t\t\t}\n\t\t} else {\n\t\t\tlet og = this.get(key, true);\n\t\t\tthis.delIndex(this.index, this.indexes, this.delimiter, key, og);\n\n\t\t\tif (this.versioning) {\n\t\t\t\tthis.versions.get(key).add(Object.freeze(this.clone(og)));\n\t\t\t}\n\n\t\t\tif (override === false) {\n\t\t\t\tx = this.merge(this.clone(og), x);\n\t\t\t}\n\t\t}\n\n\t\tthis.data.set(key, x);\n\t\tthis.setIndex(this.index, this.indexes, this.delimiter, key, x, null);\n\t\tlet result = this.get(key);\n\t\tthis.onset(result, batch);\n\n\t\treturn result;\n\t}\n\n\tsetIndex (index, indexes, delimiter, key, data, indice) {\n\t\tthis.each(indice === null ? index : [indice], i => {\n\t\t\tconst lindex = indexes.get(i);\n\n\t\t\tif (i.includes(delimiter)) {\n\t\t\t\tthis.each(this.indexKeys(i, delimiter, data), c => {\n\t\t\t\t\tif (lindex.has(c) === false) {\n\t\t\t\t\t\tlindex.set(c, new Set());\n\t\t\t\t\t}\n\n\t\t\t\t\tlindex.get(c).add(key);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.each(Array.isArray(data[i]) ? data[i] : [data[i]], d => {\n\t\t\t\t\tif (lindex.has(d) === false) {\n\t\t\t\t\t\tlindex.set(d, new Set());\n\t\t\t\t\t}\n\n\t\t\t\t\tlindex.get(d).add(key);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tsort (fn, frozen = true) {\n\t\treturn frozen ? Object.freeze(this.limit(INT_0, this.data.size, true).sort(fn).map(i => Object.freeze(i))) : this.limit(INT_0, this.data.size, true).sort(fn);\n\t}\n\n\tsortBy (index = STRING_EMPTY, raw = false) {\n\t\tif (index === STRING_EMPTY) {\n\t\t\tthrow new Error(STRING_INVALID_FIELD);\n\t\t}\n\n\t\tconst result = [],\n\t\t\tkeys = [];\n\n\t\tif (this.indexes.has(index) === false) {\n\t\t\tthis.reindex(index);\n\t\t}\n\n\t\tconst lindex = this.indexes.get(index);\n\n\t\tlindex.forEach((idx, key) => keys.push(key));\n\t\tthis.each(keys.sort(), i => lindex.get(i).forEach(key => result.push(this.get(key, raw))));\n\n\t\treturn raw ? result : this.list(...result);\n\t}\n\n\ttoArray (frozen = true) {\n\t\tconst result = Array.from(this.data.values());\n\n\t\tif (frozen) {\n\t\t\tthis.each(result, i => Object.freeze(i));\n\t\t\tObject.freeze(result);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tuuid () {\n\t\treturn uuid();\n\t}\n\n\tvalues () {\n\t\treturn this.data.values();\n\t}\n\n\twhere (predicate = {}, raw = false, op = STRING_DOUBLE_PIPE) {\n\t\tconst keys = this.index.filter(i => i in predicate);\n\n\t\treturn keys.length > INT_0 ? this.filter(new Function(STRING_A, `return (${keys.map(i => {\n\t\t\tlet result;\n\n\t\t\tif (Array.isArray(predicate[i])) {\n\t\t\t\tresult = `Array.isArray(a['${i}']) ? ${predicate[i].map(arg => `a['${i}'].includes(${typeof arg === \"string\" ? `'${arg}'` : arg})`).join(` ${op} `)} : (${predicate[i].map(arg => `a['${i}'] === ${typeof arg === \"string\" ? `'${arg}'` : arg}`).join(` ${op} `)})`;\n\t\t\t} else if (predicate[i] instanceof RegExp) {\n\t\t\t\tresult = `Array.isArray(a['${i}']) ? a['${i}'].filter(i => ${predicate[i]}.test(a['${i}'])).length > 0 : ${predicate[i]}.test(a['${i}'])`;\n\t\t\t} else {\n\t\t\t\tconst arg = typeof predicate[i] === \"string\" ? `'${predicate[i]}'` : predicate[i];\n\n\t\t\t\tresult = `Array.isArray(a['${i}']) ? a['${i}'].includes(${arg}) : a['${i}'] === ${arg}`;\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}).join(\") && (\")});`), raw) : [];\n\t}\n}\n\nexport function haro (data = null, config = {}) {\n\tconst obj = new Haro(config);\n\n\tif (Array.isArray(data)) {\n\t\tobj.batch(data, STRING_SET);\n\t}\n\n\treturn obj;\n}\n"],"names":["STRING_EMPTY","STRING_FUNCTION","STRING_INVALID_FUNCTION","STRING_RECORDS","INT_0","INT_1","INT_16","r","s","Math","random","toString","substring","uuid","crypto","randomUUID","bind","slice","floor","Haro","constructor","delimiter","id","this","index","key","versioning","data","Map","indexes","versions","Object","defineProperty","enumerable","get","Array","from","keys","size","reindex","batch","args","type","fn","i","del","set","onbatch","beforeBatch","map","arg","beforeClear","beforeDelete","beforeSet","clear","onclear","clone","JSON","parse","stringify","has","Error","og","delIndex","delete","ondelete","forEach","idx","each","includes","indexKeys","isArray","value","o","dump","result","entries","ii","arr","find","where","raw","sort","a","b","localeCompare","join","reduce","v","k","add","Set","list","filter","x","freeze","ctx","call","push","split","li","lidx","lli","limit","offset","max","registry","merge","override","concat","onoverride","onset","accumulator","next","indices","setIndex","search","rgex","test","lset","lkey","values","indice","lindex","c","d","frozen","sortBy","toArray","predicate","op","length","Function","RegExp","haro","config","obj"],"mappings":"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"}